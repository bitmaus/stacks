%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: flash card2-01.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Ольга Быхалова
%%CreationDate: 12/10/2016
%%BoundingBox: 0 0 466 344
%%HiResBoundingBox: 0 0 465.1749 343.2878
%%CropBox: 0 0 465.1749 343.2878
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">С„Р»СЌС€РєР°1</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-12-10T01:59:38+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-12-10T01:59:38+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-12-10T01:59:38+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FWJfmj58tvJPlG61d+L3r/uNOt2/3ZcODxr/kqAWb2GKv&#xA;N/y+/K78xLPS/wDGlv5ge383avW8udMu0LWc6SHkkV0AQwcg15KKpWgxVnnlP81NP1PUz5e1+0fy&#xA;75rjPFtLuyOMx/mtZvsyqe1N/Co3xVnOKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxVp3REZ3YKiglmJoABuSScVfLnn7zhD5z1vVfNciibyl5PC2+jWzg&#xA;+neX878Y2ZT1RmX1HH++0C7FsVe1/kjq+pax+WOj6lqU7XV9ctdtPO+7MReTCp+gYqmX5heWPKmt&#xA;+XLuTzFZm4t9PhluUniotzF6SF2aCSoIb4elaHvirCdK8x+dfJem2l7dtN5x8hXMUc9prMSH9J2t&#xA;vKodGuIj8UqBWFW6jvTZcVemaB5i0TzBpsepaNeR3tlJsJYjWh6lWU/ErDurCuKpjirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeN/85CeebuCytvIugEza9r5&#xA;EdxHF9tLZzx4HwMx2/1Q1eoxV59d2mnaf+Vd15ciAU6ddyS3dywobi9NpqUUpWleUY+qL6WwNACa&#xA;Yq9n/IaEQ/lL5eQAiscz0P8AxZcyv/xtirIPP83o+RPMk1OXpaXevx6V427mlcVeD6ylxa/mp+Vc&#xA;kDiFRpOkWjRpIqyAc35I0Yb1AhV6bih3HjirNPzGsPKvlDzFYano+qnyf5g1gycJxGW0q6MJTkl7&#xA;Evwp/ej94FFKljvirJfLf5oo17b6J5vtRoOvTgG0kLc9PvQaUe0ualW5VHwE13pucVZ7irsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY959866Z5N8s3Wt355ekOFrb1&#xA;o007A+nGvzO5PYVPbFXzd5b1SOHW9S1PzVE995v81aXfT2xqAtjbyWkrxuympDSxpRFFOEVP5qYq&#xA;nfmWKzXyX5jWIKkdtqNyqF6VHp2lwgA+b3bAe22KvavyktzB+WXllKEV0+GT4tj+8Xn93xbYqi/z&#xA;I/8AJd+af+2Rf/8AUNJirx3zXcLP+cH5X2DwoBb2FncCdf7x+bPRWP8AKhgqB7nFVH/nLz/pk/8A&#xA;t4f9i2KqHkvUrJfI+m6FrlomraCPLl5q81lN1a4Gq+hEY5KM8RWOQrVD74qzm91Pzh+WtzHAZm81&#xA;eUUjL/VWZTrNlbqaFwNjcQp/MRUdyoGKoV/+cpvy9Bb07DVpkRQzvHBBxUEhd+U603IH04qih/zk&#xA;d5ZNulyPLvmE28kZnjmFlFwaJSFaRW9ehUMQC3TFUS35+aOrFH8reZFdZo7YxtYxBvXmXnHFxM9e&#xA;bJ8QXrTfFU4i/NF3Zlbyh5iQoFZlNpCzDnXjVY53YVoeoxVK7r8+dAttLGqyeX9f/RpkaI3ZslWM&#xA;MpIYFnlXoVINPA4qzry95g0jzDpFtq+kXC3NhdLyikXY7bFWB3VlOxB6YqmOKuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KvnL88dWjn/N7y9pPmtmtvJtp6VwCFLJKHNZXcDqOSCNqbqtSOuK&#xA;vNtUsPNGh+fP0j5gCSyaqty9vqMLCS0uUuYHiV7eQfCUpIOK9VFBQYqg/NvnC9mfU9OikHp3N7cS&#xA;3JTZT+9dVX3+HFX13+V0zS/lv5YYgAjS7RNvBIVUfqxVF+e40k8j+YY5BWN9MvFcdNjbuDirx7zD&#xA;Dx/P78vLRzzjg0eDj2HJRdfFT/YDFUu/5y6mJufK8NNkS9fl/rmAf8aYqx10eDytpyhtz5JunqNv&#xA;t6kXH3VxVlf5831/pfnq81nT5fQvLDy7YvbS0Vikn6aBVgGDLtxPXFV035YaP5u0GLX1kj8u+apA&#xA;shvIVCWs0t3eT20CPCg+BiY0AkTepqQTirHPM/nD80PIvoWms+X7SIJQW+ocGltXaEcbT0uBEQW1&#xA;QViiYbN8bAtviqC078/9btZY9RTQbWZLFHisWmkkYpPPVrmcmoaWaavxt2XYU5GqrJPL/wCdfnLU&#xA;PLUgt9Ggi9WYjUNWlunjkncqJbp46Rkpwhp8QqI14Ku5RSqznyD5wvvO9nfCz0mLRrvR5E0y2tjI&#xA;lxFYo8TCW4C8Ywz8V9NV47dPsl8VX/8AONlqsP5ZRyLyCXF7dSIjmpVQ4jAOw/33ir1PFXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUo8z+UvLvmfTm0/XLGO9tzXhzFHjJ/ajcUZG91OKvCP&#xA;NX5ceb/y+tpjpUP+LfIJf17jRbsF5bYjcyp6YDRsv+/oqf5S0xV5nf8Akuz8x/WtX8jzNfirT3Xl&#xA;6XbUbcEkt6aDa5jX+aP4ulVxV9b/AJb2Utl+X/ly1mBWaPTbUSIwoVYwqWU/ImmKt/mR/wCS780/&#xA;9si//wCoaTFXj3mS+X/oY7yWDRvQ0+2goOoMiXB3/wCRuKpV/wA5bTk655eg2olrO/v8cij/AI0x&#xA;VRu4Q/l7Tri2KcbbyPbI4pUc7rUUiFe32lcke1MVZD/zkFYzXF/5hliiMjRaDpgJHUL+lJ5G2/1Y&#xA;iT8sVZXJpOpS6bHpWnx+rJaW2jSeozGGP/R9YaRpCwPwmNIXfufniroNZ8tadYp5e8xeZdB1HQ/S&#xA;htbq1ubpHnCQ2UUXwxjYcriJnPLpWoIO2KvLfNP5O2UUkmvflxd23mfRoiZLnRo5kuZoaj9gozGQ&#xA;Cn2G32AZXFRirDNV/MK/uobhbWM211cyCCzsoyXa3ijaqVYjk0hkYvXq0n7w0KR0Vewf84v6Pqmj&#xA;z+aLHUFCuV0+dANx8ZuUejU+KjRlTSoqDQ4qzL8gv/Jb23/MXff9RUmKvRcVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVebedPyS0TV7p9Z8vy/oDzECJBc24pDJIDUNJGtOL/8AFkZV&#xA;hWu+KpNov5wa15W1aLy1+Ztm1hM4ItNdT47aUA0qzKN1/wAqlV25jq2Ks8/MC4gufy18y3FvIk0E&#xA;ujXzxSxsGRlNq5DKwqCDirxK6H1r/nIvyk0pqz2NlKxG3xCzd/1jFUr/AOcsJVPnnSohXkmmI58K&#xA;NcTAf8ROKsbtNZuNM8mwfEZrR7G0s74LuyJNe6hdxKK0/wB2rGx+7FXu/wCYOn2N15q1KXUGdNNt&#xA;rDSJdRdSVC2iTapJMxIH8sdB4k074q8T1TzB5/8Aze8xnRNBjkg0WIlrfTVcpbww8v726ep5Nv1N&#xA;d9lGKo/UfyN8neXyIvNXn+zsL8AGWxggM7rUbGgkElPnGMVSxPy31PT5P03+XXmu21+5sVMzR2DN&#xA;baiiAVZhbMzMy06iu/ShxVPdJhtPzd0m7uIoItP/ADM0VPrPrwAQR6lECBWRV48ZQfh5ClCR2+yq&#xA;zD/nGbXtR1fU/NU2pylr1Y7CP0CgiWFInugsMSLsscYYALQU6dsVZx+Rk9rN+XVqbdQnG7vxIgps&#xA;TeysAfkjLirP8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqW+YfLmieYtMl0z&#xA;WrOO9spescg3DdmRhRlYdmU1xV4drXlH8xfyr+sXPlh28yeRZg/17Q7tfW9KJ9pA0Y/ZKnd4x/rr&#xA;QbqrPKS+XfPn5keX/N3l2+TT59Kjjg1Hy5cmlxHFBE0avbvuJoyCFboQNz1pirFP+cqJjJ+ZFqpF&#xA;PS0uBAfGs0zf8bYqwPV9Tvbqw0/TrWQrYXlvYLcrT4TPa+vDHyalducm3f6MVe0/85B601lb+Z7e&#xA;AlJdRbRbG4INOUUa3l1t7VABxVgR/Mm08pfl7YeW/Jc/DV9UiF35i1mMFZUkkqBbRMRUNGuxYdP2&#xA;fiJIVYh5b8ged/NyXV5ommzaikDH6zcckUeoRyI5ysvN96kCp+/FUnVtV0bVKqZrDU7GWn7UU0Ms&#xA;ZofBlZSMVekflz5sWX85fL+tQKsdxq7LDq0EQ4obi4VoJX4gKP3jhZyBsCcVerfl9Bb6T/zkP550&#xA;i1XhBcWkd8VUUUO/oSttX+a6bFU1/wCcb3dvIl6GNQmrXaqPAfAf1nFXquKuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5b5+/IfQ9cuzrfl2Y+XvM0betHdW1UhklG4Z0ShR&#xA;q/tpv3IbFXmvm0Qao8Gg/m9ayaJ5kgT0dK86WyepbTxgkhZ1SiMtWr8NKV34b1Ved+b/ACZrfla6&#xA;0qW6VL3SI0U2ms2JMtpcIZ3lqkoAHIc6cTv9GKs5/O3ULfV/M/m6wjcyLp1zpV1K6ipjhggktrni&#xA;u3LjLdx/jirxzVNNudM1G4sLkATWzlGI3VqdGU91Ybqe4xV61+UX59WPkjyzNod/pUl2BM9xbTW7&#xA;qpJkAqsgb/V+0K/LFXmvnLzNP5n8z6jr08CW0l/L6noISVQABVWppU8VFT3OKsy/Ijy2uqfmFoTr&#xA;8b2skuo3PFqiKC2FIiQOhecgUPah6HFXrP5UXo1788fPmvQUktYkWyScAEELIkUdGHZ1tKjxxVPP&#xA;+ccYmTyHdsSCJdVu2FOwHBd/+BxV6nirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdiqA1zQdG13TZdN1i0jvbGb7cEoqKjoynqrDswNRir5a82Xusfk557utG0K6+u+XryNL&#xA;ptIvh60DxykqY5FP7QKEB1oaUrXFV1laaT5z81T+afK0/LV7x3k1rybeusc08U68btLO4JWOZXRm&#xA;oCFZevhiqE84+VktorTR/NiTaTd26CLy/wCaZoZPq91ZgVht75FDPHJCvw8lBZR8LKVAbFWDzeS9&#xA;TSTjHe6VPGTRJU1SwVW9+Mk0br/slGKoqy8ohrlbCE/pzXZ/ht9K0pvrCIf55rmPlGVHhEW/ymWm&#xA;6r12XSYfyX/Le6Y3Mb+f/MiLBEsZ5NBGftCKm59MEkt0L8fDFU0/5xbsL3TJfNWnXqKs6DTLk8XD&#xA;jjdQyyputR9gjvirK/8AnHZFX8v5SAAX1K8LHxPMCv3DFXp+KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV83fnnYS6l+ePl2ytlmlmfToA0VoVE7cZ7l2RGf4VdkGzN&#xA;sOp2xV5R5u0J9N87arZ2EkFtJYXCrDFaSNxjl4hjHE7tzpCQ3KViB8NTQkDFWX+V/wDnIDzXplsd&#xA;J8z2cfmrS5AD6V7vNw6g+oyvzUjf94pPvTFWT2v5i/8AONl+vq33lM2E5Hxxi1ThX/J9B6d/5Riq&#xA;aWX51+XbdW0T8qPJslzqM1aUgWGOo/3ZIsJaSQDuXZfnirDZPLHmHUfMP6V8xyNr3mi5lEUdtHSW&#xA;CKUFqQrQiJ/TZGVlX92KMKnjK8Sr1T8kdDXQ/MfneykuUuriKaw+t3KVKesYXeVA7Eswjd2WppvX&#xA;YdMVR/8Azjw0T/l+7wsWhbUbwxsaVKmTY7e2KvTcVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdir5z/OJ5bP/AJyA8sywzTRPc2lshe2XlOBNNcQMIR/OVPwnsd8VYZ5q&#xA;8p+ZdV/OLUvLel2MK3c5tDJFECYba2FrEyrI/eONWUSGnxsOm9MVQPmm503y8t1pljKt0wmZTeUL&#xA;m+eMmJpCT8Poj4lNNj/dJVfVkkVZ15G/LG00G1i1bzRHb3XmnVYzdRWt+glttNtCeUl7eI2zSb0R&#xA;D1chf5iir0y2svL/AJemSDSbb0Y7VBLrN3Ko5xGaoAWODiz3t2HCoBvGlAqqCEZVGWMN27foqwiX&#xA;TbiOJUu54eBj0izKhltYWPJGupFozkbCvNqqIwyrDfLd9Y3fnHzZBo8En+HDb6ZbQ2pEqy6hIqzi&#xA;NIWfcwzH1GllNeSqWJ4ljirIP+ceY5o/IEkcyLHMmpXqyRx/YVhJQhfYHpir03FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8G/NW6Gnf8AOQHk/UfQe8k+oiOG0jA5&#xA;SS+pcrEoJ2HKSQfEdl64qxPzl+YLaD5w87xC5invNRazgvZ7eqtI1vaLHJaxMpVo4vVLLI1efFQo&#xA;PJuSqpp+VX5W6obOHzvrWmjU9ZvXjHl7TZhwtoRT4Lu5AFEijVaxoB0ACipWir27UvL6anLbfWr+&#xA;NrixSOSRVjUCS5hPKOaZA3xLEzF4oz8KseRqQKKpdBpa3KS/oa8tXuLNiNPQyrcenLM3CbUbniT6&#xA;s/EsUVvlUcjxVUdRl0fStLexVZH0GxdhqLAepcalet8Rth09Vmar3DfZ/Yb4RIFVYH+XPmqXXfzA&#xA;8zalYww6h5gumtLe3nQO9lYWYV/W/fDiJVX00HwcfVf7NE+IKsr/AOcfpWm8iTSvTlJqd87U6VaW&#xA;pxV6XirFfzD/ADC0zyTpMF7dwSXdxeTrbWVlCVDySMK/abZVAG5+WKpbe+dfzGtoPUPkZS5+wjax&#xA;Zx1P+swpiqBsvzI/MS8uGtYPJVm94il5LRdfs3lVQePJkSN6Cp64qiofNf5wAH1vIdu57FNYgT9c&#xA;T4qqp5r/ADYZgD5CgQE7sdagoPnSAnFVsnmH84gGZPKGnsBUqg1QcvlUwqMVVPKH5ow6rrD+W/MG&#xA;my+XPNMY5LptywdJ0ofjt5lAWQbHp9FaGirOcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;wf8ANuK7l/PjyTFaSLDcSQIqTMCQgM0oZgARUhakb9cVSvQPyb07Vfzs1wXFrTy15fe3YwPQied4&#xA;I3jR6/aDbySHv0P2sVe6+bYdXk8qavDoh46q9lOmn8TxImMbCPidgG5fZ98VeB+TvKOo23l/X7S3&#xA;8n6jp+s3Plu6ivNYvDIpuLtnUNBApPDjIp5eJ49PFVb+RP5eeatI8xajqN7YX2mafLpjQjUbiJbe&#xA;dJGeJ5FiiZpCahHVXI8GoD8OKoPzL5j1r8xNZHljyyEtrG3jdL+8D0tLKxUjmplB4sDxrNL+2aIl&#xA;UBaRVnH/ADj3b6Dp+t+b9J0b1TaWv6O9Oe4oJJ6xS8puA+wHb4gv7IIB3qMVR/8AzjDN6n5YhKU9&#xA;K+uErXrUI9f+GxV61irwL/nKO/aLUPJlvGSJFuJ56+BVoAvt3OKvO/zL8m63r356azoOlx/WLy6u&#xA;IpOW/COOWCOQvI1DxSNX3P3Yq+kfy2/LLQfImji1sVE2oTKv6Q1FhSSZxvQdeKCvwqPpqd8VZXd3&#xA;drZ20l1dzJb20I5SzysERFHUszUAHucVXxTRTRLLC6yROAySIQysD0II2OKsM/MbWr3Rxa30N5da&#xA;VFFXlqXoLd6bVj/dX8Sn10Q0FJYwONd27FVJ7y98t+eLO00jzXa/onWGIl0TVraUNDJLsVn0zUE+&#xA;FiaA+m1G8VNK4qnvlPVfMljq/wDhLzK6X19HaG8sNahHBbq3ikSGT1ojX05kaRK0JVq1xVmGKuxV&#xA;2KuxV2KuxV2KuxV2KsR83fmj5a8syyW9wl1qF3CYluLbT4TM0RuDxhErkpEjSH7Ks4J8MVSKH89t&#xA;Gk+uFvLXmGJbCUW947WKFY5iyqImKSsA5LrRTvviqiv/ADkDoJk4Hy15iVvrY08g2UfIXZXkICgm&#xA;L+px34Ur7Yqynyn+Y/lrzPeXOn2TT2uq2Yrc6ZfQtb3KAGhPB+vEmjUO3fqMVZRirsVeH/mX/wCt&#xA;CeRP+MK/8nZsVZfo+u6NpHnvz+2oXiQFG0+8dGry9L6lHCCqjdyXXjRampA6kYqmqajqEd7He3aO&#xA;2saopi0bQi3EW9utGeW4K8lDdGlfcL8MaVY/Gqk/mDzJbSaclxqFy8vl2CcQD0x+91q+LELbW8YJ&#xA;P1f1Nuvx0p/dgl1Xjnm/z355886+nlDQb1pp9Q5RXkVo5W1jjY8ni5rTmqKP3khr04rtyMiqzzP5&#xA;h8vfl/5b/wAKeWJFu72VhJfajxUi7mQkeo+5Bt4mqIozs7CrVQfvVU7/AOcTZZpdU81XM7tI7x2r&#xA;zTOSxLM8zEsx7nc74qzX/nGGH0/yxD1r6t9cPSnSgRKf8Lir1rFXzr/zlOQPMPlEk0A9ckn/AIyw&#xA;4q9207y7otnrGpa5awg6hrJha7uq8iywxLFGqnsoVa+5xVNMVSDXr3WJJCnl24sby8sq/pDRblwD&#xA;KjgFR6icmgen2SyFTXcdCFWDafY6PPqklr5cu7ryD5vNZZdBnCtZ3B6s62xLW86Hf47dgw74qq6p&#xA;5m1a1mjt/OaP5Y1MD0LbzJZ8rrRLkMdo7hJNkViT8MwBG/F1riqWadpdxoeuW9jGsWiW2ryjlY0+&#xA;u+WtTDkH9wW+OyuHG4T7LbAc8VZ3dRiP80NHoAkZ0PUY4wKAVW6sSVA9hirK8VdirsVdirsVdirs&#xA;VdiqH1G7Flp91eFeYtonmKjv6alqfhirwiw43X5IaZqcriTUvM2v29zqF0f2p31PjU13oqwhaYqn&#xA;oMcWm+dryNgzt5z06Oh3B9G7088T4/aIIxVCWKO11qk/ESMfzFiSRm3KpGkQUr7/ABcfliqpEiWl&#xA;0+vIAlzp/nue3abv9W1ApaTof8k+orf7EYq9pxV2KvGf+cgdE1KyvfL35haZCbiTy3cIb+FRuYBI&#xA;JFYnrxDAq3+tXxxVJfNM/knz3q+l+dfJ3mjT9H822ISlrqpSESenVlDpID8aVI5KGBHfYHFUPLrP&#xA;5pcZYtZj0e5+vTKuqXcWr2lpNdWkZYrZxvzPoxHka8U5EE9yTiqF81Wv5p+ZLqe4hsNKsxDb/VdL&#xA;jg1O0ZLC1ZSsxiUOqiWRaIZaDiuygdcVS3yj5Y87eVvL+qadpuj6Td6rq6+jNqTatbep6Bp/o8aL&#xA;LHQE/a+P4j8hirGk/I38zdSvHm1BLKzMhrJcXN7a8FAFOlu8vFVAoAq7DoMVehNc+Uvyh/L3UtK0&#xA;3V4dZ85a8npOLVw4V2VkRgql+CRCQleW7t+Cr1r8p/K8/lj8vtH0i5UpeRwma7Q9VlnYyuh/1C/H&#xA;6MVZbiryf/nJDyjpWreRJtcujML3QFZ7JYmUITdSwxv6gZWqKKDsRiqO/wCcdZ5pfym0n1XL+nJc&#xA;onI1oouHoo9hirKPOurWWm2EUl3qkuhh5AIdVEfqW8ch2VbmoaMRvWnx8R4MrUxVhOvXul3V9af4&#xA;2tjoGrLQaJ540qQi0cPugFxv6XPvDcckIr8RrirfmLU7+wsFsfzK0dNd0BSHg816ZGSYiN1mmgT9&#xA;7bOOvqQsR4YqjdPvvMFlpQudMnT8wfJU6leIaOTUoo+jISaR3YA2Kvxk7b4qjvItl5eeZrzyXq72&#xA;+khyuo+W5VLxwS/tKsMhSazkr1X7H+T3xVBeVryTWPzX8wy6tetHe6CGs9F0khYh9SuBG0tyFZec&#xA;nN41HMGn4Yq9JxV2KuxV2KuxV2KuxV2KpN5z1LTtN8qateahMsFqlrMHdiFqWQgKterMTQDxxV49&#xA;+X/k3UfNv/OP+maXp92ljdrfSXUFzKpZQ0Fy7DYf5WKqcf5N/nf9VuraTzTpoivNRGrXCCMtzvEZ&#xA;GWYsbYEGsSngPh26Yq0v5KfnOEkQea7BUl1T9OS8UYE6hUH16iD/ACRRPse2KoXWYbny1oE2gz33&#xA;+IdefzNba5rV9aQkWto000K8bhxREeSUVCCh+LoB1VfROKuxVp0SRGjkUOjgqysKgg7EEHFXydq3&#xA;kHyvefnb5j0GKA2+j2dpPdQ20J4BZUsllovgolYkD6OmKqsPkT8stR0Xy6lreWVpd3NjBdaveS35&#xA;DpIIyJxKkhEUKLINlXk79AFFXCrIR+R/kMW1g3C9a0mIeCcOTqWpnjXja2u0cEG9S8u4HXiPjKrR&#xA;/IryZDfzxz+qb9+LLpa3QFpp8RWoe+vCtWcgchHHQnoKr8YVYZe/lf5al8+aT5e0a4u72yvLV5BO&#xA;DGr3c0ZepgFG9GA02kkr8Ksy8xTkq9L/AOcfPy18twHWdWvraO91jSNZutOs7urPCqWyoPUhVtjV&#xA;najnfwpir3XFXYq8G/5yR1zV7nWPL3kezuza2WtMhvgo+36k6xxc+/FGUtQHc9egxV675J8oad5Q&#xA;8tWmgae8ktva8z60xBd3kcu7HiAPtNsPDFXeZLzVbRS40oazoskRS+tIeLXQBqGKxSH050KmhSob&#xA;w5VpirBrHROOmXF3+W13bapochZNQ8m6mS1sGP8AeRReqPUtJOtYpBwqegxVKvLV/qVrczWnktn0&#xA;7ULcF9R/LjXmKqBvyfT7hqlUO/HiSh6kKKDFV+l2+g3uuTSeVbibyD56+1e+XrxONrdHr8VuaRyq&#xA;3aSE1A3pirJdFls9R8zwDzZoB0XznbilvqVrJKlreom9IrmJo/VFFqYJtwOxFcVTG4kr+cGnx8R8&#xA;Pl69bl3PK9tRQ/LjirMcVdirsVdirsVdirsVdirwLzFBF54/PPUvLXmu7MPlby3Z/XYrH1fRiciO&#xA;Fi8rgr1+sFi1QQop44qzy88wLbaNHDofo+V/J9oqodfuUWOqdQmn2rj42f8AZkkXieqrJirJfLer&#xA;wT6Obn6vdWel2yfubvUyY5po0FXndZD6iqetZeLHc0AoSqx3zF5qmuNLa+u7mXy75akYRwzhW/St&#xA;+WNFS1hALwiTseJkI3AT7WKsR8+Qy23kmzidI/LGlNf2J0jy5VGvLpzdxM73b1f4gnKQopLcgC7k&#xA;/Dir2zFXYq7FXzZPJDH/AM5DecJKkRppd2zlu1NPjLdO1a4qhfKv/OMX6b8s6XrTa80L6lDDctbm&#xA;2p6UcqhmHL1DzIB22WuKvYZ9Oh8v6cljYyz2kEccVlPrkoE2o3HBeMVrYxld3IGxCcF6qpPIqqxH&#xA;zZ+XMfnPToPL8Q/R1xYzG49CFhJHZiYfFJqFwTIbm6lHxlENa9Wp+8ZVjnkr8otJ0780LCDSb+/v&#xA;NGWxuZbzUuAhineNkjkht5l3ZD66hyh8VDfaoq9O/J6xt9PtfNenW8Qht7PzHfxwxKAqrGyxSIqq&#xA;OihXAGKs/wAVdir5x/5yJin/AOVq+T5IweTpbrEVO/Nbwnam9fiGKvaX87W9n5ifSNWt/qNvM4j0&#xA;vVfUWS2uJKDlA70X0ZwTtG/2uxPTFWS4q81/Mm207Trk+ZdNW5sdQtyI9U1zSCk0tuAtUN/ZfZuY&#xA;AN2r8SilMVSiXzP5f8wWFpB5+t7dIHaujeddLkYWRk7FblT6tlN4pIaVH0YqjPMcA07R0i882482&#xA;eUUo9t5lgT/TrNTuslwsNGIH+/4CD/MvfFU28mw+Z7aW0n0fXovNfkm7/u5ruSt/bDp8M6jjcKp+&#xA;0JOLjp2xVGT/APk5rL/wHLv/AKjrbFWZ4q7FXYq7FXYq7FXYq7FXy1/zkP5N8z6R5yvPPUZiGlXs&#xA;9pFbuGDOJY7dQBJEwoRytid6jpir6Bt/Lllbyx695luY77VbdeQupvgtLQnr9ViY8Yt9uZrIe7ds&#xA;VR+u6nfWtrGmnac+pXl2eEMP93AoI3e4lIIjQD2LHoFOKsBTVVu/Mcg0mNPNfnK2DRTao4MWj6Ry&#xA;2ZENXof5lQtK/RmA2CrEvOv1Z/Lerz6THJ5j1H1Ldde853NFgTjdRt9W0+tVor0HCL4VH2mZsVfQ&#xA;GKuxV2Kvmi5up7T/AJyA853dvIYp7fS72WGUdVdLBGVh8iMVeVzfmn+ZMrhm8z6mCDyHC6lQV+Ss&#xA;BT2xV9Q+XtS1LVfKmma7qt29khsoWvtakTjMWlRecFhDQ8ObniZuJZzsgNVZVXln56+YvNuhJo+n&#xA;6f8A7g9AvI5ZYdHWjTSBHUtJf8uXqNKWqyMWH89WJxVkf/OOH5geafM2sata69fG+FraxtZ8kiQx&#xA;gvxcL6aJs3w1+QxVnH5W3az+YPPyCoMevSVB6bQolR8/TxV6FirsVfPP5+vKfze8jIR+6DWxU0/a&#xA;N78W/wAgMVZL+Zkmmx+ZLtQ0enyy28f6QujE9xbyxdAup2DKBPb9luoSTE3wtxpiqloGsa9oDQWf&#xA;qO+m36cLXTJLsz2twrg8TourMVKtx+zb3DBv5W74qitajumshqqX90BacooPNMMRGpadxPI22rWf&#xA;FfrEC13JXYfEV/3YVWOQRxadcotwbTyzq+rfDFewr9a8qa6rbgSxfYhdx/qkVrvWmKo7RIde8s62&#xA;1joafom9m5PN5D1OUtp953eTSL5qqpIP2CNv2hQYqy/8trDykuq6je6DDeaDeSADWvK049KKOZj8&#xA;M6wkECvEhXibgw7V6Kq8jsfz0t0JPEeWJiF7AnUIqn8BirO8VdirsVdirsVdirsVdir5r/N3Uda8&#xA;7fmzH5EjE8+i6W0Uhs7NFMkkphDu5Z6Kn976fNzxQVO/QqvctI8u3stxFqfmGVbm+iIaysYyxtLM&#xA;AUHp8t5ZadZn3/lCgkFVK/N1vrupTzw6leDQ/JkAC3TQMW1C/J6xIY+RijcnjxSsr9BSuKoB9Oso&#xA;NFDa2kXlXyNa/Db6FFSKW5B+z9baM1/ef8s8dWY/bLVK4qxv8y/ONx/gy906XSl0fTbhbWLSLBhW&#xA;9aMXUVJ5beP4LSAKpRQ55FiBsfhKr2nFXYq7FXzrrD2Kfnv+YUl/E09inl2drqGNuDvENOtvUVWo&#xA;eJZagHFU8T8hfy1k0LT9Qi0jUZrzUYYpIrGO5YhHlQORJMVCoiV3dvoBNBirOha2uhQ2ouimo6tY&#xA;W4+oWZcx2ljbxpw9Vnfl6aIikNcSVdtwo34Yq8884+XdE813Yvdd5XcttHxfUpXmtoollIZCLZCx&#xA;SI9IId552atQtGKqd/k/pXkSw82a3beXdInsLqztYEmuJ7l5mkSaR+SPESyRurwbgMadG4sGUKpx&#xA;+T6s9156uWFPU80ahEFptSERryr74q9ExV2KvBP+cgY0H5kfl7KB8bXSqT7LdQkf8SOKs088/li9&#xA;5dNrOh82uvV+sT6b6zQcpD9uaynrW1uGHX/dcn7a98VQOg+Q9dhtp9OltIn0y6j9aa0u1jWyuqkc&#xA;o7i1Tl9Tu1Jr61tyienLjWmKsv8ALmgX2k3MdWkuLNkMcTXEnK7gUVKxTShiLmJekbP8aV/a5Eqq&#xA;x7zL+W13aJeXHlWK3ubC95PqflC/30+5Ynkz25P+8sx7FfhrQmlMVSG58r6yPLkEdzo97q3lGY1n&#xA;8vXjc9Y0l0agksbhSWmRKVVeXKlKdSMVZ55J07zRpsbWmoamNb0UxI+lahcK0WoKp/3VdKVAkPEi&#xA;j7NseQxVL5YWH54W01RxfyzcIB3ql/CT/wATxVnOKuxV2KuxV2KuxV2KuxV88vdXOn/n15206K6X&#xA;T9W13TGg0K8YhR9beCCSEcmFByKEfMUxV6LZfnT5St7GJfM8k+gaxGqrfWN5bXCcZaUbg6xsjoSD&#xA;xKt0xVPdL87+VPMEgh0S+hvL9Y2mtVeOQBW4kBjyVSo+Kh70xVimu+XfMVtqEF3vq2vrHJc3PmO8&#xA;hd7LSoRWo0/T05+pOQp4KOT9ObUIBVQPnm00dfyySx0w3NxfeZdSsLYXl/FNDe3Vx9bjk9SRLhIp&#xA;COER4jiFC/Z+HFXruKuxV2KvneOB9b/5yC89WNvw9W80a5sYw5+Av9Vt4Pi26VG+2KvW4k/MGPSL&#xA;fTrGy06zeCKOD65cXUsrURFUssKW/GvWnJ/mDiqXXXknzfLx9DUbK3FfVk5xTXDvcGlbiV2kjWWR&#xA;QP3YdOCbUT4RiqU3/wCXHnyZxwvdMeGFma2h/wBLhoXFHkZw0shlkqfVl5eow2V0BaqqZflp5C8w&#xA;eXdZ1rVNbksS9/DZwWy2DScFS2EgblG6RJGPjUIsYoAPvVWfkleR3ukeZL2NleO58x6nMjJupWR1&#xA;YEe2+KvRcVdirwf/AJyClgi/MT8u5Z/7iO8DS70+AXNuW3+WKveMVeA+Y/8AnKC5tvMN7pGg6At+&#xA;ltO9vb3LTMxmMbFWdY40+y1Ph+Lpv7YqgZPzh/5yD1A10/yc1vCwPBxp143tXnI3A0+WKq1t+Zn/&#xA;ADkpDDWTyilzU8eUtjcBqjf7Mcsfj4Yqsf8A5yT8/wCi8B5n8m/VySAeS3NjXauwnWbFXuHk3zPb&#xA;eaPLGn6/bQvbw38ZcQyEFlKsUYVGx+JTQ4qxuDU7G9/O6W2t5BJNpfl947niQQklxeRvwb/KCxqf&#xA;pxVnuKuxV2KuxV2KuxV2KuxVhX5h/lH5T89LFLqayW2o268INQtiFlC1qEbkGV1rvQjbsRXFWHp+&#xA;T/5raagh0f8AMa5a3Qj047qN24gdqtJN0+VMVVJPy8/PmRCjfmBGAepW3Cn71QHFXQ/lx+eqD0z+&#xA;YSiNj8TGAOwB22LLX8cVZR5S/K4aXqcWteYNavPM2uQBltbm9YiG35ijG3g5OEZhsTU+1MVZzirs&#xA;VdirzHzv+QHlLzZ5hl1+a8vbDULjh6/1ZohGzRqFVwGRmDUUVPLFWMTf84m+WnkZk12+AO/xpE7V&#xA;71IC/qxVSP8Azifpsbh7TzNdQGlCfQQn71dMVVof+cWrcV9bzZfP048IwlPGtZHxVXb/AJxc0VoO&#xA;B8yamZDszExlCD24U8P8rFXpH5e+Q9M8keXl0XT55rmIytPLNPx5NI4UNQKFAX4RQfjirJcVdirz&#xA;782PyfsPzCSweTUJNOu9PEixSrGJkZZeJIZCyHYoKUYYqwOX/nHDzs0Jtf8AH1y9pTiInScKV8Cn&#xA;1gr9GKs//Kv8n9F8gW07xTnUNWuwFuNQdBHSMbiONKvwWu5+I1P0Yqz7FXYqk3nLyxbeaPK+o6Bc&#xA;SejHfwmNZuPP03BDI/Gq14uAaVGKvEIv+cU9XteD2fm8xS0HMravHQjpRlnJNKnwxV6b+VH5VWHk&#xA;HTblBc/pDVb5w95flPTJVfsRqpZyFWpPXc/RRVneKuxV2KuxViFz/wArd+sSfVj5fNvyPomQXofh&#xA;XbkFJFaeGKoWVvzwDD0Y/LLrTcu9+hr8gj4qpSTfnwqFltvLDkdEWa/qf+CjA/HFVD69+f3/AFbP&#xA;Ln/I+7/piqlNqn/OQSMAui6BKCOqXE4A/wCCZcVWfpj/AJyF/wCrBoX/AEkS/wDNeKqU2u/85ERg&#xA;cPLeiy168LlhT/g5VxVT/wARf85Gf9SppH/SSP8Aqvirv8Rf85Gf9SppH/SSP+q+Ku/xF/zkZ/1K&#xA;mkf9JI/6r4q0/mT/AJyNVSR5S0liBsouhU/KtwBiqH/xZ/zkn/1JGnf9JcP/AGV4q7/Fn/OSf/Uk&#xA;ad/0lw/9leKohfMf/ORhUE+U9JUkbg3IqPunxVv/ABF/zkZ/1Kmkf9JI/wCq+Ku/xF/zkZ/1Kmkf&#xA;9JI/6r4q7/EX/ORn/UqaR/0kj/qviqpDrv8AzkRJXn5a0WKlKc7ljX5cJWxVV/TH/OQv/Vg0L/pI&#xA;l/5rxVdHqv8AzkG7hW0PQYwertcTUH/Asx/DFVb69+f3/Vs8uf8AI+7/AKYqqQ3P59SV52XlqKlK&#xA;c5r41+XBGxVV9T89/wDfHlf/AJG6h/1TxVEf8hm/79z/AKfsVVol/NopWWXQEfwWO8YfeXX9WKr/&#xA;AE/zV/3/AKF/yJvP+quKu9P81f8Af+hf8ibz/qrirvT/ADV/3/oX/Im8/wCquKu9P81f9/6F/wAi&#xA;bz/qrirvT/NX/f8AoX/Im8/6q4qjYV89kH15NLQ9uCXDV+91piqaWI1UA/X2gJoKegrgE9z8ZNMV&#xA;Si7l/MHnItna6Twr+6kmuLmtK/tIsHWng2KoX1PzV/3xoX/I68/6pYqsll/NsKPRttAdq7h7i9QU&#xA;+YhbFVyyfmvxHKDQg1NwJrwivz9IYq36n5q/740L/kdef9UsVd6n5q/740L/AJHXn/VLFXep+av+&#xA;+NC/5HXn/VLFWxJ+alRWDQiO4E14P+ZWKoj1/wAxP+WHSP8ApLuf+ybFXev+Yn/LDpH/AEl3P/ZN&#xA;iq6K48/h6y6fpTp4Le3Kn7zat+rFVb635z/6tenf9xGf/shxV31vzn/1a9O/7iM//ZDirvrfnP8A&#xA;6tenf9xGf/shxV31vzn/ANWvTv8AuIz/APZDirvrfnP/AKtenf8AcRn/AOyHFUOb78w+2iaRT/tr&#xA;XP8A3jcVaa+/MbieOi6OGp8JOq3RAPuP0cMVQ5uvzWoaaXoQPYnULw/9iWKoSWb86ylIrTy2j+LX&#xA;N+w+4W6/rxVR9T89/wDfHlf/AJG6h/1TxVDt/wBDC8jxHlILX4QTqRIHuaDFUR6n57/748r/API3&#xA;UP8AqnirvU/Pf/fHlf8A5G6h/wBU8VVIZfzvBPrWvllx2CXF+n64XxVV9f8AOb/li8uf9Jd9/wBk&#xA;2KtNP+c/E8bLy4GpsTdXxFfl9WGKof1Pz3/3x5X/AORuof8AVPFXep+e/wDvjyv/AMjdQ/6p4q71&#xA;Pz3/AN8eV/8AkbqH/VPFXep+e/8Avjyv/wAjdQ/6p4qibGX85fXQX9t5dMBdfUaCe+DhK/FxV4SC&#xA;1Om4xV//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:3e0cc7e5-1920-c148-b1d0-72a1db73febc</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:3e0cc7e5-1920-c148-b1d0-72a1db73febc</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:821b876e-9dbf-4897-8082-67c368fb7916</stRef:instanceID>
            <stRef:documentID>xmp.did:7bfcd9d8-0d9e-5a4c-a146-8b80518af1f9</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7bfcd9d8-0d9e-5a4c-a146-8b80518af1f9</stEvt:instanceID>
                  <stEvt:when>2016-12-09T01:46:18+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3e0cc7e5-1920-c148-b1d0-72a1db73febc</stEvt:instanceID>
                  <stEvt:when>2016-12-10T01:59:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB РєСЂР°СЃРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Р¶РµР»С‚С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Р·РµР»РµРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB РіРѕР»СѓР±РѕР№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB СЃРёРЅРёР№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB РїСѓСЂРїСѓСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>РҐРѕР»РѕРґРЅС‹Р№</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>РћС‚С‚РµРЅРєРё СЃРµСЂРѕРіРѕ</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -343.288 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 343.288 li
465.175 343.288 li
465.175 0 li
cp
clp
226.443 282.348 mo
226.276 282.348 226.154 282.294 226.054 282.217 cv
224.51 283.634 222.971 285.058 221.382 286.425 cv
219.65 287.914 216.969 289.275 216.101 291.402 cv
218.861 289.409 221.497 287.375 224.065 285.134 cv
225.129 284.205 226.061 283.117 227.042 282.343 cv
226.842 282.344 226.642 282.348 226.443 282.348 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.19 .19 .19 rgb
f
261.942 68.7566 mo
261.967 71.1911 262.399 73.6355 262.464 76.0779 cv
262.581 80.4548 262.111 84.5779 262.518 88.8821 cv
262.888 92.7932 262.322 97.1067 262.426 101.093 cv
262.563 106.288 262.593 111.512 262.466 116.707 cv
262.237 126.077 262.166 135.447 262.238 144.824 cv
262.269 148.859 263.12 153.942 262.122 157.873 cv
261.137 161.751 257.075 164.656 254.561 167.603 cv
254.219 165.739 254.568 162.824 253.982 161.176 cv
253.127 158.774 251.761 160.022 251.665 162.029 cv
251.567 164.072 252.286 166.143 251.515 168.112 cv
250.758 170.046 248.877 171.635 247.546 173.176 cv
241.445 180.25 235.808 188.514 229.222 194.971 cv
231.102 194.56 233.063 191.383 234.283 190.028 cv
236.391 187.688 238.437 185.29 240.488 182.899 cv
243.488 179.402 246.947 172.863 251.848 172.239 cv
251.848 174.733 251.944 177.122 250.559 179.24 cv
248.851 181.851 246.125 184.197 244.044 186.542 cv
241.688 189.196 239.287 191.809 236.929 194.461 cv
235.547 196.014 232.279 198.736 232.056 200.64 cv
235.128 197.799 237.819 194.653 240.584 191.51 cv
243.033 188.726 245.624 186.41 248.337 183.918 cv
249.239 183.089 250.923 180.672 252.131 180.646 cv
252.084 181.699 252.557 182.635 251.908 183.487 cv
250.454 185.394 248.419 186.893 246.54 188.355 cv
245.284 189.332 244.136 190.465 243.219 191.768 cv
239.667 196.821 234.322 200.855 230.033 205.271 cv
228.402 206.95 226.779 208.641 225.239 210.403 cv
223.552 212.334 222.29 214.241 220.254 215.81 cv
218.398 217.243 217.307 219.344 215.815 221.103 cv
214.029 223.209 212.237 225.985 209.227 225.098 cv
214.537 218.045 221.544 212.083 227.43 205.477 cv
225.52 205.36 222.44 210.122 221.163 211.316 cv
218.811 213.515 216.471 216.582 213.721 218.258 cv
214.675 216.923 223.581 207.229 223.007 206.711 cv
218.858 210.771 214.783 214.958 211.05 219.408 cv
209.471 221.291 207.93 223.907 205.62 224.971 cv
203.66 225.875 201.178 225.239 199.099 225.096 cv
198.928 223.539 202.261 221.212 203.196 220.196 cv
204.818 218.435 206.373 216.614 207.941 214.805 cv
211.164 211.089 216.125 207.249 218.102 202.718 cv
213.862 207.077 209.766 211.571 205.601 216.001 cv
203.514 218.219 201.414 220.426 199.271 222.592 cv
197.708 224.169 197.721 224.571 195.554 224.616 cv
194.304 224.641 193.062 224.205 191.878 223.881 cv
197.015 218.113 202.098 212.357 207.003 206.394 cv
206.453 205.948 198.591 214.909 197.485 216.076 cv
195.216 218.468 192.231 224.083 188.539 222.754 cv
186.634 222.068 185.082 221.076 185.876 219.323 cv
186.697 217.509 188.899 215.765 190.208 214.223 cv
192.832 211.133 196.039 207.977 198.105 204.597 cv
195.785 205.77 193.991 208.702 192.284 210.66 cv
190.727 212.445 189.059 214.067 187.42 215.771 cv
185.815 217.439 184.759 219.772 182.625 217.492 cv
182.166 217.001 180.929 214.7 180.752 214.12 cv
180.28 212.57 180.767 210.001 180.744 208.388 cv
180.71 206.065 180.277 202.597 181.144 200.433 cv
181.518 199.501 182.439 199.006 182.936 198.245 cv
183.251 197.762 183.035 197.31 183.443 196.68 cv
184.416 195.181 185.605 193.674 186.701 192.26 cv
187.795 190.852 188.199 190.477 189.331 189.02 cv
190.656 187.312 191.662 185.706 193.266 184.178 cv
194.448 183.053 195.437 181.588 196.553 180.368 cv
197.372 179.474 198.282 178.516 199.159 177.684 cv
199.641 177.228 201.005 176.437 201.41 175.989 cv
202.839 174.405 203.803 172.329 205.293 170.713 cv
206.924 168.944 208.752 167.377 210.396 165.624 cv
211.772 164.157 213.228 162.103 215.237 161.427 cv
217.187 160.772 219.337 161.024 221.404 160.325 cv
219.754 163.294 216.632 165.586 214.391 168.17 cv
213.085 169.675 212.007 171.482 210.622 172.905 cv
209.393 174.168 209.156 173.528 209.156 175.647 cv
211.703 174.335 213.735 170.439 215.645 168.265 cv
217.638 165.994 219.87 163.524 222.242 161.629 cv
224.524 159.806 227.476 158.784 230.005 157.348 cv
230.915 156.832 231.879 156.71 232.832 156.327 cv
234.109 155.814 235.213 154.871 236.331 154.087 cv
237.24 153.449 238.126 152.767 239.013 152.097 cv
240.764 150.777 242.492 149.4 243.981 147.782 cv
245.337 146.308 246.217 144.769 247.404 143.219 cv
248.522 141.757 251.044 138.127 251.044 141.983 cv
251.043 143.036 251.289 144.369 250.735 145.334 cv
250.279 146.127 249.242 146.547 248.629 147.217 cv
247.572 148.371 246.817 149.787 245.78 150.978 cv
243.274 153.854 240.117 156.533 238.329 159.942 cv
240.906 158.365 243.107 155.342 245.2 153.162 cv
246.566 151.739 249.112 147.697 251.313 147.595 cv
250.314 149.457 248.631 151.327 247.218 152.961 cv
245.999 154.369 239.601 159.573 240.076 161.343 cv
244.173 159.074 247.795 153.796 251.087 150.496 cv
251.442 154.572 251.546 157.351 248.777 160.522 cv
246.377 163.267 243.806 165.867 241.374 168.583 cv
239.773 170.37 227.912 182.412 229.081 184.243 cv
232.783 179.458 236.746 174.854 240.855 170.408 cv
243.11 167.968 245.446 165.603 247.701 163.166 cv
249.378 161.353 250.787 158.772 253.636 159.28 cv
253.849 159.318 253.694 148.709 253.818 147.926 cv
254.122 146.01 253.852 144.098 254.146 142.184 cv
254.511 139.801 253.694 137.472 253.652 135.074 cv
253.629 133.797 253.789 132.198 253.933 130.84 cv
254.138 128.92 254.972 127.463 255.169 125.512 cv
255.729 119.929 256.219 113.514 255.451 107.956 cv
254.846 103.584 254.277 99.1658 254.065 94.7536 cv
253.992 93.2253 254.433 91.8059 254.332 90.2751 cv
254.193 88.1726 254.143 86.0793 254.136 83.9719 cv
254.129 81.716 254.698 79.2898 254.101 77.0818 cv
253.595 75.2112 253.628 73.2068 253.44 71.261 cv
253.338 70.2102 253.622 69.4646 253.35 68.4158 cv
252.986 67.0076 252.342 66.8918 252.658 65.5432 cv
253.316 62.7312 257.298 58.5041 259.456 56.5793 cv
261.782 59.0364 263.197 59.531 261.103 62.406 cv
259.489 64.6228 257.567 66.3435 256.531 68.9016 cv
258.345 66.5881 260.638 64.1189 262.962 62.1916 cv
262.737 64.3762 261.92 66.5881 261.942 68.7566 cv
cp
253.6 176.106 mo
254.236 172.96 253.724 170.295 255.674 167.598 cv
257.544 165.011 259.951 162.798 261.945 160.305 cv
264.526 165.559 259.613 169.975 256.815 173.786 cv
256.096 174.467 254.441 176.582 253.6 176.106 cv
cp
240.372 210.713 mo
243.935 206.678 247.659 202.794 251.2 198.739 cv
251.887 201.822 247.6 205.65 245.758 207.745 cv
243.128 210.736 240.438 213.678 237.743 216.612 cv
235.377 219.186 232.803 222.951 229.54 224.387 cv
228.076 225.032 226.204 225.252 224.613 225.244 cv
222.781 225.234 222.116 225.579 222.57 223.738 cv
222.925 222.298 225.357 220.203 226.299 219.04 cv
227.513 217.541 228.724 216.039 229.981 214.574 cv
232.65 211.462 235.52 208.531 238.2 205.428 cv
242.504 200.445 246.994 196.248 251.512 191.529 cv
251.512 192.738 251.968 195.152 251.512 196.262 cv
251.164 197.111 249.778 198.455 249.197 199.223 cv
247.182 201.886 244.878 204.418 242.664 206.977 cv
240.095 209.945 237.522 212.907 234.927 215.852 cv
233.333 217.663 230.385 219.883 229.796 222.214 cv
233.887 219.58 237.149 214.361 240.372 210.713 cv
cp
262.151 188.409 mo
262.054 191.615 261.545 194.586 261.875 197.689 cv
262.267 201.383 261.98 205.7 262.018 209.388 cv
262.089 216.318 261.63 224.51 255.941 229.267 cv
252.46 232.177 249.561 231.92 245.162 232.18 cv
234.984 232.784 224.524 231.364 214.336 232.298 cv
213.255 232.396 211.829 232.035 210.7 232.065 cv
208.277 232.128 205.694 231.859 203.258 231.707 cv
197.675 231.356 191.97 232.293 186.455 231.467 cv
182.478 230.871 176.152 229.823 173.78 226.149 cv
172.507 224.177 172.062 221.263 171.752 218.982 cv
170.981 213.302 171.973 207.694 171.6 202.01 cv
171.422 199.292 171.298 197.641 173.029 195.428 cv
173.856 194.373 174.744 193.369 175.642 192.374 cv
176.013 191.963 177.682 190.536 177.717 190.016 cv
177.584 192.023 178.057 194.03 177.96 196.022 cv
177.858 198.13 178.051 200.298 178.117 202.409 cv
178.245 206.514 178.575 210.711 178.643 214.838 cv
178.713 219.13 179.544 220.919 182.444 224.141 cv
183.828 225.678 185.237 226.28 187.198 226.76 cv
187.916 226.937 191.543 226.959 191.313 228.13 cv
196.405 228.191 202.142 228.118 207.477 228.247 cv
213.229 228.385 219.11 227.82 224.822 228.144 cv
233.641 228.644 244.23 230.09 251.382 223.76 cv
251.799 223.39 251.741 222.874 252.08 222.51 cv
252.544 222.013 253.338 222.23 253.698 221.507 cv
253.924 221.05 253.783 219.27 253.925 218.571 cv
254.16 217.42 254.638 216.299 254.705 215.11 cv
254.967 210.447 254.706 204.879 254.275 200.429 cv
253.997 197.556 252.8 191.432 254.219 188.549 cv
255.104 186.751 256.184 186.163 257.599 184.949 cv
259.052 183.702 260.333 181.636 261.585 180.163 cv
258.483 180.866 256.207 185.139 254.158 187.35 cv
253.999 184.76 253.213 181.275 253.905 178.742 cv
254.443 176.768 256.347 175.737 256.854 173.76 cv
259.009 172.185 260.534 169.925 262.273 167.939 cv
262.433 170.185 262.967 172.435 262.859 174.696 cv
262.639 179.261 262.289 183.849 262.151 188.409 cv
cp
243.106 245.689 mo
244.2 243.313 247.202 241.384 249.109 239.671 cv
249.109 242.252 249.709 245.116 248.109 247.142 cv
247.185 248.31 243.593 251.652 242.139 251.784 cv
241.608 250.982 242.748 246.466 243.106 245.689 cv
cp
244.873 237.225 mo
244.227 237.952 243.582 238.678 242.937 239.404 cv
241.335 237.801 243.85 237.171 244.873 237.225 cv
cp
249.015 236.694 mo
249.079 237.594 247.535 239.214 246.801 240.178 cv
245.596 241.767 244.112 243.276 242.52 244.462 cv
241.031 240.454 245.414 237.27 249.015 236.694 cv
cp
231.561 292.435 mo
228.407 294.98 226.304 297.835 221.931 297.235 cv
227.139 293.013 232.346 288.793 237.554 284.571 cv
238.818 288.309 233.958 290.501 231.561 292.435 cv
cp
227.115 297.213 mo
230.606 294.466 234.096 291.719 237.587 288.971 cv
239.125 292.994 228.32 299.991 227.115 297.213 cv
cp
238.296 297.23 mo
237.821 297.311 237.344 297.392 236.868 297.473 cv
237.21 297.066 237.553 296.658 237.895 296.251 cv
238.029 296.577 238.163 296.903 238.296 297.23 cv
cp
232.79 297.087 mo
233.659 296.416 238.184 292.034 237.924 294.438 cv
237.716 296.352 234.43 298.227 232.79 297.087 cv
cp
237.556 246.787 mo
236.906 247.044 232.762 247.251 232.577 246.761 cv
239.113 242.238 li
239.113 245.226 li
239.604 246.703 239.085 247.222 237.556 246.787 cv
cp
205.623 243.539 mo
204.111 244.631 203.06 245.63 201.216 245.877 cv
199.572 246.097 197.604 245.837 195.934 245.837 cv
200.874 241.543 207.319 234.368 214.565 237.054 cv
211.592 239.226 208.608 241.383 205.623 243.539 cv
cp
204.49 247.567 mo
204.189 245.51 203.629 246.825 204.883 245.231 cv
206.399 243.304 209.998 241.679 212.022 240.284 cv
214.04 238.893 215.902 237.2 218.385 236.881 cv
220.127 236.657 221.867 237.204 223.656 237.244 cv
220.992 239.97 217.556 241.945 214.515 244.247 cv
211.28 246.694 208.103 249.175 204.709 251.396 cv
205.191 249.879 204.698 248.991 204.49 247.567 cv
cp
194.849 241.935 mo
196.566 241.774 199.451 239.018 200.898 238.137 cv
202.385 237.232 203.608 236.617 205.427 236.68 cv
203.282 238.642 200.915 240.352 198.662 242.19 cv
197.29 243.309 194.599 246.711 192.539 246.109 cv
190.042 245.381 190.66 238.126 190.907 236.227 cv
192.422 236.919 194.933 236.489 196.55 236.414 cv
197.221 236.383 200.329 237.094 200.463 237.026 cv
198.818 237.866 197.508 239.228 195.878 240.083 cv
195.03 240.528 194.12 240.55 193.93 241.329 cv
193.753 242.056 194.531 241.965 194.849 241.935 cv
cp
250.081 266.705 mo
249.787 271.238 249.357 275.782 249.424 280.329 cv
249.449 281.957 249.512 283.392 249.373 285.031 cv
249.079 288.475 249.47 291.979 249.045 295.404 cv
248.769 297.63 249.082 303.014 247.578 304.76 cv
245.916 306.689 241.776 306.001 239.487 306.038 cv
233.723 306.132 228.199 305.87 222.571 305.91 cv
217.124 305.948 211.177 305.589 205.54 305.563 cv
202.1 305.548 198.66 305.576 195.219 305.547 cv
192.151 305.52 188.43 306.08 185.421 305.545 cv
183.169 305.144 183.85 304.485 183.855 301.928 cv
183.857 300.517 183.861 299.107 183.856 297.696 cv
183.843 294.199 183.777 290.702 183.727 287.205 cv
183.627 280.28 184.268 273.419 184.308 266.507 cv
184.345 260.229 183.814 253.947 184.374 247.643 cv
184.572 245.412 183.716 238.396 185.233 237.112 cv
188.182 234.616 188.43 238.677 188.454 240.611 cv
188.542 247.604 188.047 254.611 188.047 261.613 cv
190.318 261.209 190.369 261.695 190.93 259.572 cv
191.324 258.083 190.259 255.589 191.23 254.232 cv
192.034 253.11 193.939 253.851 195.62 253.89 cv
197.606 253.937 199.596 253.784 201.58 253.717 cv
200.744 254.439 199.908 255.161 199.072 255.884 cv
199.757 256.855 212.028 247.123 213.048 246.404 cv
216.636 243.876 220.24 241.368 223.926 238.985 cv
227.041 236.971 230.807 236.672 234.486 237.231 cv
224.877 244.26 215.41 251.723 206.416 259.527 cv
211.929 256.026 217.055 251.962 222.145 247.882 cv
224.698 245.836 227.233 243.76 229.86 241.81 cv
231.555 240.552 235.218 237.401 237.444 237.251 cv
238.639 237.17 239.327 238.088 239.267 239.442 cv
239.192 241.137 238.349 241.426 237.016 242.435 cv
235.123 243.872 232.661 246.507 230.274 246.929 cv
228.087 247.317 228.002 246.116 226.653 248.027 cv
226.526 248.207 226.347 248.533 226.163 248.908 cv
226.344 250.234 226.405 251.57 226.43 252.91 cv
227.854 253.577 230.274 253.072 231.563 253.072 cv
231.994 254.602 220.48 262.179 218.818 263.472 cv
214.086 267.154 209.354 270.836 204.621 274.517 cv
203.279 272.979 204.301 269.345 205.478 267.981 cv
207.197 265.988 210.073 264.572 212.125 262.943 cv
214.51 261.049 216.889 259.144 219.262 257.234 cv
220.381 256.333 224.102 254.147 224.921 252.374 cv
224.894 252.18 224.863 251.987 224.842 251.795 cv
221.224 254.102 218.079 257.017 214.825 259.793 cv
212.206 262.028 207.958 266.71 204.611 267.564 cv
205.143 263.443 201.217 263.783 197.831 263.87 cv
196.477 263.904 188.762 263.582 187.846 264.562 cv
186.8 265.681 187.849 272.48 187.782 274.271 cv
187.725 275.802 187.338 277.432 187.277 278.872 cv
187.18 281.161 187.452 280.556 189.585 280.594 cv
192.292 280.644 194.772 280.697 197.579 280.53 cv
199.081 280.441 202.154 281.26 203.463 280.732 cv
204.662 281.096 205.026 280.617 204.556 279.295 cv
204.558 278.828 204.56 278.36 204.562 277.893 cv
204.603 275.474 204.677 275.346 206.562 273.776 cv
208.2 272.411 209.994 271.188 211.694 269.899 cv
214.644 267.663 217.62 265.465 220.584 263.249 cv
224.73 260.15 232.567 251.008 238.191 253.201 cv
241.214 254.38 238.133 257.222 236.515 258.6 cv
234.065 260.687 230.783 262.769 227.931 264.316 cv
227.059 264.79 226.194 264.706 225.403 265.353 cv
224.35 266.216 223.562 267.762 222.475 268.737 cv
219.691 271.231 216.919 273.776 214.029 276.145 cv
208.605 280.595 202.423 284.282 197.197 288.944 cv
199.631 288.376 202.447 285.534 204.469 284.065 cv
206.867 282.323 209.242 280.554 211.667 278.851 cv
216.249 275.634 220.351 271.685 224.711 268.168 cv
224.746 272.039 226.071 276.848 222.745 279.332 cv
219.407 281.824 216.452 284.649 213.238 287.276 cv
209.576 290.269 205.832 293.19 202.087 296.08 cv
198.316 298.989 193.822 298.827 189.217 299.137 cv
189.722 295.232 189.67 291.435 189.913 287.526 cv
189.959 286.79 190.638 284.511 189.987 283.865 cv
189.482 283.665 188.971 283.652 188.455 283.827 cv
187.447 283.713 187.189 284.214 187.679 285.331 cv
187.891 285.814 187.371 287.788 187.372 288.497 cv
187.373 289.817 187.535 291.131 187.675 292.441 cv
187.96 295.085 188.101 297.554 187.727 300.186 cv
189.189 299.516 190.858 300.31 192.438 300.131 cv
194.624 299.881 196.772 299.366 198.965 299.152 cv
204.279 298.635 209.89 297.978 215.234 298.155 cv
221.163 298.349 227.131 299.037 233.015 299.016 cv
234.412 299.011 235.761 299.427 237.147 299.523 cv
239.568 299.689 239.508 299.482 239.695 297.263 cv
239.966 294.033 240.158 291.094 239.996 287.81 cv
239.906 285.986 240.341 283.916 237.962 283.746 cv
236.375 283.633 234.633 285.635 233.288 286.713 cv
230.224 289.169 227.172 291.643 224.254 294.274 cv
221.355 296.888 219.766 297.282 215.942 297.282 cv
215.952 295.828 219.037 294.066 220.005 293.239 cv
221.647 291.837 223.287 290.432 224.935 289.039 cv
227.561 286.82 230.171 284.612 232.691 282.283 cv
232.178 282.287 231.666 282.292 231.152 282.299 cv
227.611 285.645 224.049 288.959 220.309 292.086 cv
218.621 293.497 216.515 295.878 214.522 296.757 cv
213.005 297.427 211.325 297.223 209.699 297.223 cv
209.725 296.904 209.752 296.585 209.778 296.266 cv
207.203 298.231 203.965 297.99 200.935 297.68 cv
208.966 291.522 216.796 285.133 224.67 278.774 cv
225.274 279.537 225.386 279.928 225.764 280.281 cv
230.734 280.727 235.676 280.017 240.65 279.969 cv
240.754 279.969 240.823 280.01 240.905 280.035 cv
241.273 279.21 240.776 278.029 240.854 276.753 cv
240.902 275.983 240.742 264.833 240.065 264.86 cv
239.209 264.896 229.095 264.549 228.959 265.081 cv
229.379 263.437 232.917 262.055 234.27 261.185 cv
235.992 260.079 237.882 258.873 239.674 257.951 cv
239.71 258.402 239.673 262.645 240.312 262.64 cv
241.573 262.632 241.535 259.017 241.68 258.01 cv
241.984 255.911 241.916 254.078 243.442 252.41 cv
245.236 250.45 247.488 248.412 249.775 247.078 cv
247.912 248.17 249.401 252.893 249.478 254.497 cv
249.673 258.552 250.342 262.656 250.081 266.705 cv
cp
177.493 178.55 mo
175.126 180.718 173.361 183.426 171.608 186.089 cv
170.731 183.423 170.794 177.876 171.418 175.059 cv
172.157 171.717 176.107 168.523 178.352 166.095 cv
178.255 171.383 178.055 176.684 178.223 181.972 cv
178.304 184.541 178.324 186.043 176.723 188.104 cv
175.898 189.167 174.045 190.545 173.97 191.79 cv
175.315 190.427 176.661 189.064 178.006 187.701 cv
177.52 190.313 173.509 194.267 171.493 195.849 cv
171.493 192.104 170.79 188.381 173.179 185.254 cv
174.11 184.036 178.877 180.174 177.493 178.55 cv
cp
171.464 155.447 mo
171.604 151.247 173.105 150.308 176.154 147.532 cv
180.827 150.66 171.111 153.696 172.584 157.013 cv
174.179 155.242 175.774 153.471 177.369 151.701 cv
178.275 155.195 178.068 157.59 175.821 160.336 cv
174.908 161.451 173.917 163.101 172.767 163.998 cv
171.082 165.313 171.231 165.465 170.973 163.489 cv
170.669 161.164 171.382 157.921 171.464 155.447 cv
cp
175.038 146.742 mo
173.985 147.632 172.933 148.521 171.879 149.411 cv
171.688 147.921 171.82 146.392 172.046 144.915 cv
173.044 145.524 174.041 146.133 175.038 146.742 cv
cp
176.812 166.459 mo
175.344 168.46 173.589 170.341 171.951 172.214 cv
171.754 169.588 171.241 167.64 172.79 165.371 cv
174.368 163.06 176.372 160.972 178.147 158.808 cv
178.147 161.866 178.595 164.027 176.812 166.459 cv
cp
181.901 184.78 mo
182.985 183.758 183.757 182.519 184.886 181.545 cv
185.838 180.724 186.127 179.525 187.016 178.668 cv
187.803 177.91 188.585 177.212 189.337 176.405 cv
189.983 175.713 190.914 175.196 191.601 174.512 cv
192.982 173.137 194.176 171.591 195.502 170.165 cv
197.34 168.188 199.438 166.315 201.084 164.196 cv
201.97 163.055 202.672 161.687 203.573 160.59 cv
203.975 160.1 206.631 159.483 206.594 159.622 cv
206.159 161.267 203.869 162.777 202.842 164.135 cv
201.451 165.978 199.929 167.716 198.25 169.302 cv
197.315 170.185 196.375 171.244 195.604 172.285 cv
194.889 173.249 193.99 174.009 193.229 174.941 cv
192.196 176.207 190.963 177.319 189.822 178.491 cv
189.537 178.784 189.258 179.082 188.988 179.386 cv
187.608 180.946 186.631 182.81 185.064 184.218 cv
183.559 185.57 181.833 187.015 180.236 188.218 cv
179.711 186.593 180.822 185.797 181.901 184.78 cv
cp
181.001 179.302 mo
181.153 177.393 181.655 175.604 182.827 174.058 cv
183.805 172.768 184.96 171.746 186.106 170.61 cv
186.667 170.053 187.148 169.385 187.719 168.837 cv
189.028 167.577 190.137 166.218 191.492 164.947 cv
192.448 164.051 193.37 163.128 194.391 162.3 cv
195.392 161.488 196.13 160.368 197.249 159.689 cv
197.556 159.502 198.536 158.91 198.877 159.372 cv
199.213 159.828 197.954 161.189 197.651 161.55 cv
195.401 164.231 191.537 166.258 190.661 169.876 cv
194.322 166.458 197.869 161.016 202.136 158.533 cv
202.765 160.459 199.547 162.777 198.487 163.948 cv
196.483 166.162 194.483 168.38 192.431 170.549 cv
191.69 171.332 191.249 172.235 190.53 173.04 cv
188.878 174.888 187.186 176.973 185.344 178.62 cv
185.233 178.718 185.124 178.819 185.014 178.921 cv
183.417 180.406 181.925 182.2 180.607 183.913 cv
180.43 182.493 180.885 180.745 181.001 179.302 cv
cp
186.309 153.73 mo
185.926 154.249 185.572 154.793 185.162 155.292 cv
184.662 155.901 184.065 156.407 183.466 156.909 cv
182.892 157.514 182.29 158.091 181.647 158.616 cv
181.069 159.087 180.37 158.381 180.834 157.803 cv
181.893 156.487 183.384 155.619 184.384 154.254 cv
184.829 153.646 185.61 151.821 186.554 151.946 cv
186.834 151.983 187.013 152.142 187.038 152.43 cv
187.086 152.98 186.612 153.32 186.309 153.73 cv
cp
194.431 156.738 mo
194.591 156.681 194.73 156.916 194.6 157.027 cv
193.749 157.751 193.24 158.799 192.514 159.642 cv
191.535 160.778 190.369 161.756 189.324 162.83 cv
187.19 165.024 185.104 167.254 182.83 169.307 cv
182.697 169.427 182.517 169.245 182.634 169.112 cv
184.852 166.569 186.787 163.743 189.234 161.415 cv
190.798 159.926 192.336 157.475 194.431 156.738 cv
cp
191.047 154.935 mo
189.971 156.651 188.266 158.046 186.971 159.616 cv
186.221 160.526 185.4 161.368 184.611 162.242 cv
183.74 163.206 183.08 164.381 182.093 165.215 cv
181.768 165.49 181.325 165.226 181.399 164.811 cv
181.771 162.737 184.131 160.956 185.447 159.433 cv
186.268 158.483 186.975 157.426 187.862 156.535 cv
188.659 155.735 189.682 155.29 190.504 154.516 cv
190.785 154.252 191.261 154.595 191.047 154.935 cv
cp
163.663 130.958 mo
161.806 129.885 159.917 129.085 158.068 127.915 cv
156.571 126.968 154.751 126.339 153.362 125.246 cv
152.146 124.289 151.186 123.378 149.772 122.618 cv
148.937 122.17 148.414 121.513 147.996 121.206 cv
144.203 118.426 140.41 115.646 136.532 112.986 cv
132.244 110.043 127.876 107.292 123.404 104.682 cv
119.14 102.194 115.057 99.4968 111.108 96.5647 cv
108.143 94.363 105.113 92.2512 102.047 90.1926 cv
98.2144 87.6194 94.3443 85.1003 90.48 82.574 cv
83.9161 78.2825 76.8736 74.2414 70.8462 69.1951 cv
70.4527 68.8655 70.021 68.531 69.7149 68.1125 cv
68.3677 66.2717 68.6568 66.9333 69.7007 64.8093 cv
70.2686 63.6536 70.5181 62.4822 71.2012 61.3987 cv
71.9341 60.2361 72.7999 59.114 73.4439 57.9001 cv
74.2115 56.4529 75.0332 55.1101 76.1338 53.8855 cv
78.9585 50.7424 81.148 47.3601 83.4922 43.8293 cv
85.9273 40.1619 89.9478 36.1589 91.6089 32.1282 cv
92.7037 29.4714 93.938 26.6536 95.4546 23.8567 cv
97.0752 20.8669 99.3277 18.4382 101.097 15.5295 cv
102.643 12.988 105.157 6.76928 108.048 5.81371 cv
111.288 4.74291 115.967 9.75707 118.453 11.4538 cv
133.597 21.7947 149.315 31.1687 164.721 41.0378 cv
172.376 45.9416 179.606 50.8787 186.826 56.4031 cv
190.683 59.3537 194.988 61.5412 199.108 64.0886 cv
201.356 65.4792 203.354 66.9592 205.721 68.114 cv
208.651 69.5432 211.804 71.1233 214.482 72.9885 cv
216.947 74.7053 219.354 76.5134 221.808 78.2458 cv
226.376 81.469 231.024 84.573 235.578 87.8166 cv
236.851 88.7239 238.274 89.3884 239.587 90.2317 cv
240.825 91.0256 241.763 92.2136 242.768 93.2888 cv
244.439 95.0749 246.044 96.9519 247.318 99.0471 cv
247.854 99.9294 248.079 100.736 248.4 101.686 cv
248.75 102.719 249.445 103.581 249.775 104.63 cv
252.452 113.115 251.026 123.736 247.339 131.839 cv
246.271 134.187 244.711 136.293 243.559 138.605 cv
243.074 139.579 242.788 140.878 242.204 141.763 cv
241.619 142.652 241.035 142.852 240.475 143.521 cv
238.258 146.169 236.041 147.926 233.223 150.077 cv
230.271 152.332 226.729 153.844 223.138 154.739 cv
214.686 156.846 205.717 154.72 197.842 151.658 cv
195.902 150.904 194.275 149.577 192.439 148.629 cv
190.618 147.688 189.726 147.911 188.015 146.764 cv
182.89 143.329 177.712 139.974 172.526 136.633 cv
169.898 134.938 167.266 133.248 164.638 131.552 cv
164.314 131.344 163.989 131.147 163.663 130.958 cv
cp
104.273 93.8894 mo
103.589 93.4294 102.895 92.9919 102.171 92.5613 cv
99.4493 90.9431 96.6099 89.6428 93.919 87.9997 cv
93.4844 87.7341 92.8687 87.406 92.8501 86.864 cv
94.4405 86.7815 96.3243 87.8811 97.6397 88.6828 cv
99.1299 89.5915 100.753 90.2712 102.265 91.1667 cv
104.502 92.4919 106.844 94.1711 108.77 95.9328 cv
109.189 96.3171 109.883 96.8279 109.816 97.4363 cv
108.482 97.1687 106.914 95.7976 105.82 94.9851 cv
105.305 94.6028 104.792 94.2395 104.273 93.8894 cv
cp
196.737 56.5261 mo
196.424 57.0071 196.11 57.488 195.797 57.9685 cv
195.497 57.3406 195.975 56.0022 196.737 56.5261 cv
cp
198.369 56.8152 mo
199.257 56.1765 199.685 56.1301 200.812 56.2248 cv
200.016 57.4382 199.22 58.6521 198.425 59.8655 cv
197.173 58.7219 196.633 58.0647 198.369 56.8152 cv
cp
205.353 56.1062 mo
204.446 57.3469 203.538 58.5876 202.63 59.8284 cv
201.322 61.6179 201.379 61.4084 199.436 60.4602 cv
199.985 59.0578 203.787 54.3596 205.353 56.1062 cv
cp
205.855 57.4187 mo
207.672 55.7903 208.881 56.1072 211.43 56.1072 cv
209.953 57.9988 208.476 59.8909 206.999 61.7829 cv
206.241 62.7537 205.819 63.7703 204.816 63.6628 cv
204.564 63.636 203.091 62.4787 202.988 62.2488 cv
202.413 60.9612 204.644 58.5037 205.855 57.4187 cv
cp
206.249 64.3049 mo
209.032 60.5881 211.442 55.7097 216.464 56.0002 cv
214.403 58.8415 210.276 67.3689 206.249 64.3049 cv
cp
222.742 55.7434 mo
221.737 58.0964 219.189 60.8259 217.41 62.6882 cv
215.523 64.6628 213.698 64.3796 211.061 64.5613 cv
212.827 62.1706 214.673 59.7356 216.787 57.6384 cv
218.674 55.7673 220.2 55.9055 222.742 55.7434 cv
cp
225.799 55.491 mo
226.178 55.3918 228.745 55.4939 228.845 55.5891 cv
229.889 56.5745 224.853 61.9739 224.308 62.6609 cv
222.107 65.4338 220.535 64.9641 217.089 64.5139 cv
218.898 62.2956 220.693 60.0569 222.579 57.9036 cv
223.621 56.7141 224.243 55.8982 225.799 55.491 cv
cp
234.853 55.3913 mo
239.839 54.9241 244.46 55.6672 249.419 56.0466 cv
247.565 58.512 245.497 62.7419 243.027 64.5452 cv
240.864 66.1252 236.076 65.1067 233.306 64.7248 cv
234.225 63.5124 240.621 56.4372 239.254 55.8279 cv
237.344 58.2082 235.434 60.5886 233.524 62.969 cv
232.013 64.8528 231.499 64.6609 229.101 64.6609 cv
224.322 64.6609 li
224.521 62.6335 227.42 59.8664 228.725 58.3909 cv
230.76 56.0886 231.82 55.676 234.853 55.3913 cv
cp
251.43 80.6492 mo
252.838 83.1086 246.081 88.3982 244.575 90.2209 cv
242.607 88.531 250.124 82.0422 251.43 80.6492 cv
cp
248.92 68.7556 mo
250.393 70.657 249.506 70.8327 248.012 72.6501 cv
244.989 76.3264 li
242.638 79.1843 240.289 82.0422 237.938 84.9006 cv
237.52 84.6438 237.102 84.3865 236.684 84.1296 cv
240.762 79.0051 244.841 73.8801 248.92 68.7556 cv
cp
238.466 77.8415 mo
237.079 76.5139 238.689 75.9348 239.698 74.8039 cv
240.664 73.7204 241.626 72.636 242.535 71.5032 cv
244.116 69.5315 244.917 67.3244 247.739 67.5471 cv
245.268 72.0207 241.969 75.6472 238.706 79.5696 cv
237.993 80.4265 235.816 84.303 234.855 82.5925 cv
234.064 81.1848 237.297 79.0119 238.466 77.8415 cv
cp
233.789 75.8215 mo
234.978 74.2908 236.509 72.9621 237.822 71.5344 cv
239.738 69.449 240.449 66.7453 243.659 67.7287 cv
241.899 70.5598 239.85 72.8357 237.715 75.3508 cv
236.809 76.4172 235.964 77.5266 235.035 78.5749 cv
233.332 80.4944 233.315 81.1609 231.158 79.7527 cv
232.48 78.591 232.74 77.1721 233.789 75.8215 cv
cp
230.675 75.612 mo
231.535 74.7854 232.393 73.9602 233.23 73.1111 cv
234.284 72.0412 235.934 69.7571 237.711 70.178 cv
235.322 73.4148 232.278 76.5364 229.354 78.9587 cv
227.95 77.115 229.315 76.9197 230.675 75.612 cv
cp
224.053 74.0774 mo
223.515 74.9685 222.083 74.0871 222.679 73.2742 cv
223.496 72.1618 224.648 71.3645 225.649 70.4309 cv
226.902 69.2615 228.64 68.2688 229.59 66.8391 cv
229.612 66.8059 229.662 66.8274 229.654 66.8655 cv
229.001 69.9866 225.617 71.487 224.053 74.0774 cv
cp
225.933 75.4241 mo
228.337 73.8205 230.275 71.5784 232.412 69.6482 cv
232.523 69.5481 232.727 69.6843 232.629 69.8161 cv
230.802 72.2898 229.068 74.6716 226.596 76.5593 cv
225.936 77.0637 225.22 75.8996 225.933 75.4241 cv
cp
250.875 90.761 mo
251.005 90.0681 251.136 89.3747 251.266 88.6819 cv
250.05 89.3855 249.775 90.7878 248.746 91.5432 cv
248.278 91.8869 247.818 92.4416 247.212 92.3005 cv
246.933 92.2356 246.039 91.3962 245.959 91.1213 cv
245.675 90.1477 247.032 89.3479 247.609 88.7624 cv
248.123 88.241 251.244 83.4411 251.787 83.6575 cv
252.361 83.8855 253.413 91.8782 250.875 90.761 cv
cp
250.688 138.879 mo
251.047 137.991 251.407 137.103 251.849 136.01 cv
252.153 137.254 252.047 137.541 250.688 138.879 cv
cp
251.94 98.053 mo
251.632 97.7234 250.585 95.7536 250.568 95.5134 cv
250.519 94.8357 250.794 91.9177 252.258 92.7087 cv
252.152 94.49 252.046 96.2712 251.94 98.053 cv
cp
258.418 55.9392 mo
257.278 57.5881 256.136 59.237 254.995 60.886 cv
254.215 62.0115 253.207 64.3327 252.081 65.0954 cv
250.673 66.0491 246.082 65.2131 243.885 65.0823 cv
245.791 62.2893 247.756 59.2375 250.244 56.9109 cv
252.384 54.9075 255.611 55.8298 258.418 55.9392 cv
cp
266.313 199.777 mo
266.044 191.673 265.856 183.536 265.822 175.427 cv
265.789 167.632 266.309 159.893 266.047 152.218 cv
265.798 144.935 266.268 137.548 266.203 130.236 cv
266.125 121.507 266.528 112.742 266.173 104.028 cv
266.015 100.144 264.858 96.696 265.088 92.8503 cv
265.313 89.1233 265.566 85.4524 265.581 81.7058 cv
265.596 77.4411 265.492 73.1633 265.643 68.9006 cv
265.748 65.9778 266.506 62.9397 266.292 60.0408 cv
266.152 58.1531 265.674 57.2234 264.265 55.928 cv
263.472 55.1985 262.199 53.7312 261.365 53.3772 cv
258.65 52.2244 254.521 53.5505 251.587 53.4333 cv
235.497 52.7888 219.377 53.2815 203.245 52.8567 cv
199.206 52.7497 195.25 53.1789 191.26 53.2898 cv
189.963 53.3259 189.241 53.7639 187.924 53.1619 cv
186.337 52.4358 184.955 50.8933 183.472 49.9499 cv
181.54 48.7209 179.286 47.9348 177.469 46.5676 cv
175.986 45.4519 174.707 44.2688 173.123 43.2375 cv
169.513 40.8879 165.899 38.5437 162.284 36.2019 cv
149.455 27.8918 136.407 19.7219 123.882 11.1653 cv
120.129 8.60131 116.073 6.58812 112.508 3.73754 cv
111.15 2.65111 109.878 1.45531 108.297 .685291 cv
106.213 -.329846 105.738 -.321545 104.3 1.4226 cv
99.6729 7.03295 96.0171 14.1301 92.2095 20.3088 cv
89.3257 24.9895 85.856 29.6311 82.9454 34.6194 cv
81.2666 37.4963 79.2657 40.782 77.2676 43.5432 cv
75.8213 45.5417 74.3062 47.4968 73.0303 49.612 cv
71.7906 51.6672 70.2203 53.4348 68.9541 55.5046 cv
68.2222 56.7014 67.3785 57.8254 66.6514 59.0251 cv
66.0093 60.0842 65.5977 61.2922 64.815 62.2571 cv
63.337 64.0793 61.962 65.6042 62.7383 68.1282 cv
63.6685 71.1516 64.3487 72.1023 67.1167 73.616 cv
73.1451 76.9123 78.8399 81.0969 84.4805 85.0295 cv
90.6397 89.324 97.3335 92.7219 103.558 96.9773 cv
110.009 101.387 116.452 105.805 122.759 110.416 cv
135.119 119.451 148.873 126.547 161.364 135.415 cv
165.025 138.015 165.047 139.336 165.271 143.821 cv
165.476 147.922 165.702 152.09 165.459 156.194 cv
165.011 163.717 165.65 171.326 165.777 178.752 cv
165.909 186.51 165.939 194.041 166.11 201.812 cv
166.194 205.64 165.992 209.291 165.986 213.068 cv
165.98 216.376 165.958 220.257 167.094 223.392 cv
168.24 226.553 169.934 229.008 172.073 231.684 cv
173.043 232.898 173.888 233.69 175.29 234.374 cv
176.447 234.938 177.389 234.797 178.013 236.049 cv
178.59 237.205 178.204 240.058 178.15 241.308 cv
178.07 243.189 177.851 245.069 177.914 247.014 cv
178.042 250.994 178.2 254.97 177.961 258.946 cv
177.474 267.06 178.253 275.257 178.2 283.386 cv
178.172 287.658 178.187 291.929 178.161 296.202 cv
178.142 299.251 177.079 303.591 177.84 306.515 cv
177.958 306.969 179.439 310.149 179.742 310.423 cv
180.534 311.137 183.671 310.929 185.073 310.907 cv
188.898 310.844 192.642 311.242 196.443 311.275 cv
203.666 311.338 210.925 311.769 218.088 311.781 cv
226.018 311.794 233.957 310.972 241.928 311.153 cv
245.291 311.228 247.829 311.948 250.237 310.469 cv
251.718 309.559 251.535 311.207 252.053 308.973 cv
252.437 307.322 251.868 304.558 251.806 302.858 cv
251.513 294.791 252.295 286.695 252.881 278.599 cv
253.492 270.165 252.264 261.589 252.03 253.154 cv
251.953 250.391 251.996 247.626 252.151 244.867 cv
252.274 242.688 251.957 238.901 252.948 236.938 cv
253.788 235.274 255.559 235.718 257.208 234.883 cv
258.65 234.152 259.858 233.052 260.805 231.751 cv
264.381 226.836 265.806 220.318 266.055 214.345 cv
266.255 209.545 266.472 204.573 266.313 199.777 cv
cp
f
89.8409 214.484 mo
89.6866 215.308 90.2315 215.438 91.4742 214.874 cv
91.566 214.164 91.0215 214.033 89.8409 214.484 cv
cp
103.393 236.648 mo
104.743 232.736 104.052 228.139 104.205 224.009 cv
104.274 222.122 104.466 220.291 104.727 218.423 cv
104.922 217.027 105.504 216.554 104.326 215.906 cv
103.682 215.551 101.372 215.76 100.733 215.729 cv
100.754 217.219 100.153 217.938 99.9917 218.735 cv
99.5889 220.73 100.021 223.337 100.01 225.404 cv
99.9966 227.926 99.9825 230.448 99.9771 232.97 cv
99.9771 233.005 99.8135 236.307 99.9971 236.466 cv
100.471 236.874 102.819 236.618 103.393 236.648 cv
cp
85.2505 215.523 mo
87.3189 219.056 85.6587 224.804 85.7203 228.758 cv
85.7442 230.306 85.1416 234.56 86.0005 235.843 cv
86.5928 236.728 89.0606 237.989 89.9502 236.431 cv
90.3438 235.743 89.8555 232.512 89.8956 231.641 cv
89.9981 229.44 90.0342 227.192 89.9761 224.988 cv
89.9112 222.528 90.087 220.191 90.1524 217.786 cv
90.232 214.863 87.6993 215.651 85.2505 215.523 cv
cp
106.773 236.382 mo
109.432 236.345 110.981 237.089 111.64 234.681 cv
112.241 232.482 111.712 229.233 111.645 226.972 cv
111.548 223.69 113.421 211.954 106.596 216.253 cv
108.5 216.948 107.031 222.383 106.994 224.184 cv
106.911 228.25 106.847 232.316 106.773 236.382 cv
cp
113.788 216.19 mo
113.852 220.79 113.915 225.388 113.979 229.988 cv
113.996 231.259 114.014 232.53 114.031 233.801 cv
114.06 235.859 113.551 235.681 115.586 236.141 cv
118.135 236.717 118.475 236.34 118.535 234.158 cv
118.65 229.972 118.764 225.771 118.868 221.533 cv
118.893 220.508 119.773 216.402 119.083 215.69 cv
118.34 214.925 114.658 216.025 113.788 216.19 cv
cp
92.417 236.739 mo
93.8721 236.718 97.188 237.254 98.0469 236.082 cv
98.9546 234.843 98.1866 230.51 98.1807 229.01 cv
98.1705 226.564 98.2398 224.125 98.2989 221.679 cv
98.3394 220.019 97.5962 216.452 99.021 215.221 cv
97.939 214.592 97.1636 215.612 96.1475 215.806 cv
94.9122 216.042 93.2598 215.696 91.8921 215.918 cv
94.2642 218.024 92.5718 223.623 92.4502 226.306 cv
92.2925 229.777 92.3692 233.265 92.417 236.739 cv
cp
75.752 226.918 mo
75.6421 231.172 77.2559 235.523 76.6036 239.833 cv
76.3125 241.753 76.771 244.96 76.0782 246.621 cv
74.5054 250.391 68.7999 250.357 67.5298 254.053 cv
66.6983 256.473 67.0406 260.793 68.0435 263.154 cv
75.2896 258.345 82.5352 253.537 89.7813 248.727 cv
87.3013 252.285 84.0225 254.489 80.358 256.714 cv
77.1846 258.639 71.5582 261.23 69.7481 264.573 cv
70.5103 263.945 71.5376 264.389 72.1807 264.976 cv
72.8965 265.63 72.7007 266.866 72.7193 268.191 cv
75.9312 266.09 79.0674 263.877 82.2051 261.667 cv
85.6324 259.252 90.0752 256.727 94.1543 255.536 cv
90.5645 259.297 86.3565 260.809 82.1431 263.512 cv
79.5147 265.199 74.3121 267.41 72.7886 270.316 cv
71.2779 273.199 73.3619 277.37 72.5166 280.413 cv
72.0391 282.132 70.9141 282.699 69.3575 283.88 cv
68.4541 284.565 65.4786 286.302 66.9986 287.924 cv
67.794 286.873 69.2403 286.579 70.3594 285.886 cv
72.4449 284.597 74.3682 282.899 76.357 281.463 cv
80.0372 278.804 83.733 276.159 87.7452 274.034 cv
88.2681 274.899 75.7901 283.469 74.3267 284.614 cv
72.3018 286.198 68.9893 288.063 67.4537 290.122 cv
66.107 291.927 66.5665 295.325 66.7505 297.469 cv
67.6773 308.266 79.7393 308.323 87.7657 308.51 cv
92.9122 308.629 98.0362 308.432 103.181 308.356 cv
107.346 308.294 111.544 308.938 115.695 308.377 cv
118.758 307.963 123.674 307.765 125.407 304.73 cv
126.694 302.473 126.835 299.576 127.428 297.105 cv
127.661 296.135 128.478 288.988 127.617 288.848 cv
124.575 288.486 119.706 294.076 117.479 295.795 cv
114.412 298.16 111.102 301.7 107.449 303.024 cv
108.386 301.71 108.968 300.12 110.111 298.957 cv
111.399 297.647 113.314 296.74 114.813 295.681 cv
118.084 293.373 121.325 291.021 124.551 288.652 cv
125.959 287.619 127.188 287.102 127.722 285.449 cv
127.448 281.712 128.044 277.769 127.924 273.962 cv
127.903 273.302 128.086 270.695 127.558 270.262 cv
126.172 269.13 125.452 271.63 125.181 271.853 cv
122.543 274.037 119.257 275.696 116.446 277.692 cv
109.738 282.456 103.246 287.698 96.1695 291.897 cv
96.0596 290.146 103.455 285.615 104.798 284.547 cv
108.261 281.791 112.044 279.511 115.463 276.705 cv
118.554 274.168 121.781 271.888 125.146 269.726 cv
128.724 267.427 127.85 264.722 127.514 260.847 cv
125.429 262.69 122.768 263.998 120.585 265.791 cv
117.562 268.274 114.371 270.689 111.189 272.966 cv
107.81 275.385 104.196 277.498 100.794 279.897 cv
98.4717 281.535 96.3628 283.923 93.7632 285.092 cv
92.4717 285.672 91.125 286.009 89.9317 286.819 cv
91.5342 284.746 93.0694 282.844 95.3794 281.577 cv
98.2388 280.009 100.476 277.587 103.16 275.631 cv
106.31 273.336 109.361 271.465 112.765 269.647 cv
116.342 267.737 118.67 264.261 122.196 262.361 cv
124.056 261.358 126.175 260.344 127.384 258.528 cv
128.443 256.935 127.696 253.559 127.415 251.818 cv
121.507 254.782 116.446 259.426 111.124 263.308 cv
108.604 265.147 105.97 266.819 103.407 268.595 cv
100.884 270.344 98.1734 273.048 95.2793 274.025 cv
96.4966 271.383 101.538 268.587 103.911 266.971 cv
107.133 264.778 109.564 262.385 112.34 259.8 cv
114.994 257.328 118.454 256.484 121.157 254.08 cv
122.4 252.976 124.109 252.385 125.439 251.379 cv
127.594 249.747 127.486 246.489 127.324 244.036 cv
123.227 245.135 118.965 248.839 115.375 251.278 cv
110.703 254.454 104.489 257.778 100.859 262.124 cv
99.6905 259.137 109.789 253.756 111.908 252.198 cv
115.971 249.213 119.967 245.888 123.954 243.016 cv
126.831 240.943 126.8 241.198 126.641 237.545 cv
126.528 234.957 126.855 232.395 126.765 229.791 cv
126.656 226.626 125.215 216.94 120.848 216.835 cv
120.927 222.571 120.917 228.319 121.301 234.046 cv
121.421 235.831 122.476 239.153 120.586 240.342 cv
121.014 240.072 118.099 240.471 118.357 240.442 cv
117.108 240.581 115.92 240.875 114.595 240.914 cv
109.009 241.076 103.436 241.017 97.8409 241.094 cv
94.8472 241.136 91.8433 241.276 88.8492 241.226 cv
86.961 241.195 84.2798 239.733 83.0157 240.443 cv
83.0699 236.329 82.8814 232.241 83.0591 228.163 cv
83.2403 224.006 83.3653 219.596 83.0562 215.431 cv
79.0557 215.199 76.7725 221.288 76.066 224.337 cv
75.8677 225.192 75.7745 226.052 75.752 226.918 cv
cp
129.729 256.504 mo
129.729 260.577 130.102 264.567 130.133 268.582 cv
130.182 274.865 130.335 281.073 130.28 287.368 cv
130.218 294.456 130.947 304.472 124.575 309.088 cv
117.876 313.939 108.253 313.597 100.368 313.269 cv
91.4947 312.901 81.9082 313.941 73.313 311.583 cv
68.8995 310.372 64.9312 309.01 62.9517 304.606 cv
61.2959 300.923 61.3692 295.165 61.6265 291.136 cv
61.8321 287.916 61.6265 282.923 64.3062 280.731 cv
65.7251 279.571 66.793 279.415 67.3692 277.515 cv
67.9258 275.678 67.7847 273.243 67.4947 271.394 cv
65.5733 271.688 63.6177 271.848 62.6578 270.504 cv
61.2823 268.576 62.063 264.143 62.0391 261.939 cv
62.0137 259.596 61.2129 255.585 62.0498 253.402 cv
62.8467 251.324 65.7247 249.297 67.3589 247.96 cv
69.0406 246.584 70.9468 245.376 71.7452 243.233 cv
72.625 240.871 72.0923 237.346 72.0982 234.873 cv
72.104 232.237 71.7745 229.247 72.3311 226.648 cv
74.2046 217.902 79.146 212.876 88.1558 212.721 cv
91.0132 212.673 93.8501 213.064 96.7041 213.112 cv
104.4 213.242 113 212.207 120.488 213.953 cv
128.167 215.743 128.943 227.658 129.274 233.858 cv
129.675 241.361 129.73 248.99 129.729 256.504 cv
cp
f
240.415 122.939 mo
239.62 124.977 238.796 127.079 237.681 128.973 cv
237.57 129.161 235.751 130.683 235.746 130.125 cv
235.737 128.895 236.351 127.946 237.063 127.042 cv
237.615 126.341 238.016 125.56 238.353 124.745 cv
238.511 124.364 238.655 123.974 238.794 123.582 cv
239.182 122.481 239.483 121.311 239.82 120.196 cv
240.105 119.248 240.043 118.224 240.362 117.291 cv
241.637 118.251 240.885 121.733 240.415 122.939 cv
cp
234.907 108.47 mo
230.322 99.487 217.531 96.7107 208.742 100.633 cv
204.061 102.722 199.313 105.855 196.086 109.893 cv
195.081 111.152 194.327 113.371 192.498 113.706 cv
190.396 114.091 190.617 110.862 191.122 109.643 cv
193.151 104.739 196.607 100.211 201.087 97.3015 cv
205.311 94.5583 210.648 94.0202 215.509 93.9641 cv
223.31 93.8743 231.776 97.4919 235.706 104.524 cv
236.608 106.14 237.228 107.907 237.516 109.736 cv
237.659 110.639 237.72 111.555 237.706 112.469 cv
237.696 113.093 237.238 114.59 237.454 115.116 cv
236.862 113.669 236.633 112.076 235.957 110.63 cv
235.627 109.927 235.28 109.2 234.907 108.47 cv
cp
233.656 133.164 mo
234.254 132.436 234.58 132.039 234.955 131.583 cv
235.153 132.598 235.153 132.598 233.656 133.164 cv
cp
209.94 123.939 mo
207.502 122.361 207.432 118.385 208.518 115.907 cv
209.759 113.075 213.552 112.154 216.316 112.733 cv
222.152 113.956 223.904 121.565 217.931 124.254 cv
215.515 125.342 212.088 125.331 209.94 123.939 cv
cp
229.772 137.766 mo
225.696 140.886 222.127 143.901 216.663 143.887 cv
211.346 143.873 206.102 143.948 201.058 141.974 cv
199.539 141.38 198.484 140.415 197.131 139.568 cv
192.087 136.411 189.647 130.797 188.135 125.261 cv
187.846 124.201 187.907 123.137 187.654 122.077 cv
187.415 121.075 187.195 120.261 187.414 119.243 cv
187.98 120.065 188.181 121.402 188.558 122.37 cv
189.022 123.561 189.509 124.745 190.014 125.921 cv
191.481 129.333 193.691 131.843 196.13 134.603 cv
199.294 138.185 203.502 140.545 208.2 141.411 cv
213.112 142.316 218.929 142.193 223.394 139.759 cv
224.762 139.013 226.059 138.147 227.348 137.274 cv
227.918 136.888 230.356 134.725 230.975 134.875 cv
233.758 135.547 230.818 136.966 229.772 137.766 cv
cp
243.913 108.593 mo
242.479 102.774 240.554 97.0544 235.653 93.1794 cv
230.447 89.0642 224.979 85.6623 218.198 85.3572 cv
212.205 85.0871 205.331 85.8611 199.864 88.1179 cv
187.753 93.1189 182.296 108.008 183.573 120.239 cv
183.219 124.541 185.166 127.974 187.001 131.685 cv
188.595 134.909 190.187 138.56 192.793 141.115 cv
198.558 146.771 206.652 147.999 214.392 147.762 cv
216.586 147.696 219.154 147.913 221.244 147.218 cv
223.461 146.482 225.653 145.428 227.799 144.486 cv
230.335 143.374 232.105 142.037 234.122 140.126 cv
236.068 138.283 237.899 136.293 239.366 134.041 cv
240.804 131.832 241.598 129.307 242.517 126.858 cv
244.768 120.861 245.468 114.914 243.913 108.593 cv
cp
f
161.642 118.974 mo
162.198 119.146 162.503 118.035 161.995 117.878 cv
161.877 118.243 161.76 118.609 161.642 118.974 cv
cp
152.621 38.8879 mo
154.383 37.7107 154.737 38.6496 156.397 39.8772 cv
158.077 41.1203 159.757 42.3635 161.437 43.6062 cv
162.291 44.238 163.144 44.8694 163.998 45.5007 cv
163.792 45.9885 163.615 46.4861 163.468 46.9939 cv
163.501 48.2659 163.1 49.7986 163.084 51.1243 cv
162.994 58.3137 162.716 65.4099 162.295 72.5867 cv
161.839 80.3664 161.872 88.1072 161.817 95.8865 cv
161.769 102.889 161.291 110.096 162.255 117.04 cv
162.886 111.863 162.974 106.66 162.762 101.453 cv
162.673 99.2698 162.688 97.0862 162.597 94.9021 cv
162.483 92.1838 161.683 88.7302 162.784 86.1584 cv
162.875 87.6345 163.554 88.9875 163.613 90.4719 cv
163.665 91.7517 163.315 93.0452 163.334 94.3425 cv
163.386 97.966 163.758 101.618 163.842 105.254 cv
163.994 111.884 164.641 119.282 162.853 125.738 cv
160.864 124.452 158.871 123.175 156.883 121.889 cv
155.388 120.922 152.708 119.779 151.609 118.295 cv
149.559 115.527 150.93 109.281 151.015 105.977 cv
151.211 98.3469 151.453 90.6628 151.943 83.0398 cv
152.424 75.5613 152.635 68.5271 152.687 60.7473 cv
152.716 56.2659 152.906 51.7893 152.929 47.3083 cv
152.939 45.4485 152.772 43.7175 152.65 41.9328 cv
152.577 40.8542 152.839 39.6208 152.621 38.8879 cv
cp
f
98.8628 29.3694 mo
98.7623 29.7693 98.6988 30.1824 98.6495 30.6413 cv
98.5166 31.8821 98.1099 32.989 98.1714 34.2385 cv
98.3453 37.7839 97.8658 41.5037 97.6729 45.0491 cv
97.5621 47.095 97.2666 49.1633 97.2266 51.2048 cv
97.1597 54.6018 96.8902 57.7644 97.3453 61.1374 cv
97.462 62.0017 97.2149 64.3884 97.8995 64.907 cv
98.0782 65.0422 98.668 61.156 98.6822 60.8376 cv
98.8096 57.9768 99.3096 55.1081 99.3023 52.24 cv
99.2969 50.1155 99.3858 48.0222 99.3023 45.9089 cv
99.1187 41.2805 100.14 36.5808 99.8638 31.9304 cv
99.794 30.7556 99.7867 29.0954 99.3975 27.9846 cv
99.1456 28.4636 98.9795 28.9079 98.8628 29.3694 cv
cp
91.0069 71.9231 mo
92.129 68.3933 91.0484 34.9592 93.104 34.9802 cv
94.9815 34.9997 92.9317 49.4636 92.8311 51.6335 cv
92.6705 55.0935 93.3316 58.4304 93.3843 61.8874 cv
93.4371 65.3435 93.2593 68.5979 93.7471 72.0325 cv
94.1119 69.072 93.8326 65.5993 94.5723 62.7497 cv
95.1636 63.8298 94.8995 65.1072 95.0674 66.2678 cv
96.1192 64.2077 95.7793 61.5266 95.8843 59.2351 cv
96.0215 56.2248 96.1788 53.2161 96.3453 50.2073 cv
96.6548 44.6077 96.9781 39.1116 96.7422 33.5124 cv
96.5303 28.4817 98.7061 22.7532 101.785 18.8367 cv
102.095 18.4421 104.013 15.7995 104.461 15.8049 cv
105.722 15.8205 105.309 20.135 105.298 21.1423 cv
105.181 31.928 104.497 42.8181 103.708 53.6228 cv
102.911 64.5315 104.932 75.6155 102.603 86.3498 cv
99.0401 84.1575 95.4771 81.9656 91.9141 79.7737 cv
91.0093 79.217 90.1045 78.6604 89.1993 78.1037 cv
87.8296 77.8113 87.4004 77.0242 87.9117 75.7429 cv
87.5518 73.9739 88.1055 71.4582 88.2315 69.654 cv
88.8272 61.1189 88.9131 52.6638 88.9107 44.1106 cv
88.9107 42.8581 89.0289 35.1638 90.6529 39.1775 cv
91.1514 40.4089 90.2432 43.5569 90.1373 44.9123 cv
89.9927 46.7585 89.9141 48.5852 89.9151 50.4363 cv
89.9161 54.2009 90.0816 57.8772 90.2974 61.6321 cv
90.375 62.9851 89.8614 71.5261 91.0069 71.9231 cv
cp
f
168.678 115.615 mo
168.622 114.452 168.269 113.376 167.523 113.625 cv
167.017 113.794 167.061 114.526 167.058 114.958 cv
167.049 115.942 167.294 117.453 168.19 118.048 cv
168.542 117.742 168.727 116.645 168.678 115.615 cv
cp
169.53 110.012 mo
169.503 109.025 169.21 108.018 169.13 108.04 cv
167.842 108.395 167.096 112.279 168.732 111.844 cv
169.384 111.671 169.553 110.848 169.53 110.012 cv
cp
174.024 71.949 mo
174.063 73.3127 173.823 74.7024 173.917 76.0378 cv
173.999 77.2004 174.25 78.2473 174.098 79.4001 cv
173.693 82.4695 173.882 85.468 173.695 88.5544 cv
173.588 90.3152 173.598 92.0823 173.739 93.8406 cv
173.872 95.4875 174.294 97.157 174.156 98.8147 cv
173.988 100.824 174.079 102.697 174.099 104.695 cv
174.146 109.331 173.747 113.853 173.683 118.479 cv
173.651 120.802 173.939 123.202 173.965 125.623 cv
173.978 126.783 174.987 131.552 174.433 132.138 cv
173.893 132.709 168.045 129.406 167.189 128.903 cv
166.36 128.415 165.003 127.783 164.411 126.982 cv
163.114 126.518 162.959 125.781 163.943 124.77 cv
164.082 124.313 164.22 123.856 164.359 123.399 cv
165.752 117.885 164.817 111.212 164.775 105.573 cv
164.698 95.1487 166.103 85.1482 166.086 74.5198 cv
166.079 69.4866 166.02 64.4538 166.014 59.4206 cv
166.008 55.261 166.233 51.2468 166.526 47.1194 cv
167.172 47.5549 167.814 48.1296 168.546 48.4158 cv
168.872 53.7385 168.924 59.0481 169.23 64.3767 cv
169.304 65.6702 169.518 66.9509 169.402 68.2278 cv
169.29 69.4607 169.185 70.7234 169.216 71.968 cv
169.295 75.074 169.452 78.4436 168.558 81.4363 cv
167.984 83.3542 168.05 85.031 167.932 87.011 cv
167.841 88.5447 167.685 90.0735 167.601 91.6072 cv
167.522 93.052 167.875 94.4411 167.724 95.8684 cv
167.518 97.8132 167.431 99.7717 167.163 101.71 cv
167.004 102.862 166.651 107.632 168.898 105.638 cv
169.7 104.926 169.681 104.239 169.681 103.199 cv
169.682 99.1277 168.722 94.5271 169.793 90.5403 cv
170.362 91.1199 170.408 93.2668 170.499 94.1457 cv
170.584 94.9602 170.312 96.6189 170.993 97.1423 cv
172.679 95.1374 171.372 91.2761 171.461 88.9148 cv
171.621 84.6711 171.73 80.4558 171.792 76.2073 cv
171.854 71.9641 171.943 67.7219 172.016 63.4792 cv
172.054 61.3201 172.087 59.1609 172.111 57.0012 cv
172.132 55.1926 171.634 52.4324 172.237 50.7546 cv
172.713 51.1189 173.157 51.5959 173.769 51.7717 cv
174.093 53.1067 173.923 54.7683 173.876 56.1394 cv
173.815 57.906 173.857 59.7244 174.062 61.4719 cv
174.264 63.2078 173.978 65.0002 174.061 66.758 cv
174.143 68.5007 173.975 70.1897 174.024 71.949 cv
cp
f
142.046 39.6203 mo
141.552 39.2292 141.345 39.5408 141.424 40.5559 cv
141.96 40.8191 142.167 40.5071 142.046 39.6203 cv
cp
140.092 74.7219 mo
140.854 74.4285 141.041 73.9602 140.517 73.2746 cv
140.376 73.7571 140.233 74.2395 140.092 74.7219 cv
cp
141.005 94.0666 mo
140.264 95.095 140.225 95.4617 140.577 96.4641 cv
140.733 95.591 140.869 94.8288 141.005 94.0666 cv
cp
137.833 45.5837 mo
137.718 45.3332 137.589 45.1062 137.451 44.9148 cv
137.079 44.3962 136.569 43.969 136.332 43.2434 cv
136.218 42.8948 136.113 42.5442 136.224 42.178 cv
136.253 42.0828 136.756 41.3293 136.826 41.4289 cv
137.171 41.925 137.662 43.1882 138.459 42.5813 cv
137.525 41.4524 139.267 40.6453 138.866 39.4753 cv
137.995 39.031 137.157 40.1853 136.269 40.0745 cv
136.269 38.508 136.65 36.8249 136.706 35.428 cv
136.77 33.8293 135.656 30.7434 136.421 29.154 cv
137.256 27.4221 138.647 28.6721 140.161 29.4231 cv
142.693 30.6794 143.206 31.0505 143.023 33.9084 cv
142.453 42.8176 142.874 51.8088 142.21 60.7209 cv
141.595 68.9939 142.167 77.5735 142.311 85.863 cv
142.387 90.241 141.966 94.6257 141.998 99.0139 cv
142.027 103.004 142.634 107.569 141.723 111.467 cv
140.512 110.709 139.301 109.95 138.091 109.192 cv
136.253 108.041 136.112 108.341 135.779 106.31 cv
135.364 103.781 135.683 100.736 135.674 98.1599 cv
135.656 92.2361 135.561 86.1487 136.14 80.2551 cv
136.606 75.5105 136.414 70.7942 136.572 66.0447 cv
136.683 62.7327 136.877 59.4119 136.647 56.1003 cv
136.549 54.6999 135.964 52.9895 136.233 51.6218 cv
136.474 50.3957 137.604 49.8298 138.071 48.7468 cv
138.475 47.8118 138.264 46.5315 137.833 45.5837 cv
cp
f
181.314 104.093 mo
181.294 104.571 181.274 105.049 181.255 105.527 cv
181.159 108.056 181.067 110.53 181.022 113.041 cv
180.958 116.625 181.019 120.313 181.754 123.838 cv
182.193 125.943 182.711 128.095 183.592 130.061 cv
184.558 132.216 185.885 134.069 186.63 136.322 cv
187.506 138.971 189.389 140.958 191.183 143.024 cv
188.261 142.39 185.797 140.489 183.275 138.993 cv
181.271 137.805 178.224 137.039 177.109 134.734 cv
176.218 132.89 177.48 129.677 177.927 127.872 cv
178.153 126.958 178.85 126.247 178.979 125.341 cv
179.133 124.248 178.821 122.852 178.87 121.685 cv
179.432 108.203 180.661 94.5891 180.197 81.1409 cv
179.977 74.782 179.874 68.5159 179.929 62.1482 cv
179.937 61.2517 179.455 58.6413 180.032 57.8347 cv
180.316 56.7937 180.856 56.6174 181.651 57.3074 cv
182.345 57.7053 183.008 57.6516 183.64 57.1457 cv
185.313 58.1833 183.409 62.3718 183.281 63.9402 cv
182.733 70.6086 182.582 77.3166 182.139 83.9934 cv
181.819 88.8279 181.626 93.6697 181.523 98.5134 cv
181.484 100.376 181.395 102.238 181.314 104.093 cv
cp
f
72.7491 66.3142 mo
72.5562 63.0759 76.0303 59.3918 77.5801 56.5242 cv
78.4444 54.9245 81.4493 49.1912 83.5713 52.4944 cv
84.129 53.3625 83.8628 55.8596 83.9214 56.9206 cv
84.0054 58.4416 83.7457 59.9211 83.8145 61.4304 cv
83.896 63.2214 84.461 64.8811 84.5318 66.6882 cv
84.6319 69.2356 84.5704 71.7825 84.7422 74.3293 cv
86.3667 68.7034 85.5752 61.6096 85.7642 55.7654 cv
85.8604 52.7864 85.9581 49.8078 86.0298 46.8288 cv
86.0713 45.1228 85.5088 42.9949 87.8467 43.5662 cv
85.9288 54.1804 86.4385 65.5964 86.4385 76.3713 cv
81.875 73.0188 77.3121 69.6667 72.7491 66.3142 cv
cp
f
186.321 68.4299 mo
186.044 70.2644 186.052 72.1077 186.253 73.9563 cv
186.169 72.1111 187.177 70.2981 186.321 68.4299 cv
cp
186.063 94.4382 mo
186.014 94.7683 185.962 95.0993 185.908 95.4324 cv
185.771 96.2732 185.818 97.1374 185.629 97.9783 cv
185.49 98.5989 184.59 99.6833 184.578 100.166 cv
184.951 86.2185 185.285 72.2683 185.242 58.3152 cv
187.42 58.8269 186.524 61.2219 186.347 62.8513 cv
189.903 58.7229 189.525 66.5466 189.436 68.4768 cv
189.253 72.4275 189.224 76.322 188.942 80.2536 cv
188.812 82.0857 188.662 84.0276 188.604 85.8386 cv
188.591 86.2121 188.555 92.279 187.857 91.8567 cv
186.498 91.0334 188.528 83.5227 186.574 83.5486 cv
186.169 84.6023 185.836 85.7097 185.973 86.8127 cv
186.089 87.7468 186.332 88.635 186.377 89.5901 cv
186.454 91.2483 186.299 92.8327 186.063 94.4382 cv
cp
f
129.229 78.966 mo
129.227 78.8064 129.225 78.6467 129.225 78.4875 cv
129.219 75.0535 129.633 71.6199 129.6 68.1902 cv
129.509 58.9226 128.919 49.5412 129.233 40.2317 cv
129.341 37.0242 129.777 33.7912 129.784 30.595 cv
129.787 29.2864 129.797 27.9856 129.703 26.6809 cv
129.641 25.8078 129.33 24.8235 129.349 23.9988 cv
130.257 24.6692 132.29 25.1223 132.581 26.1741 cv
132.854 27.1614 132.306 28.7566 132.254 29.7737 cv
132.102 32.8201 132.03 35.9221 131.929 38.9792 cv
131.839 41.6623 131.455 44.3391 131.462 47.0217 cv
131.471 50.5022 131.553 53.9812 131.605 57.4612 cv
131.629 59.1164 131.758 60.821 131.648 62.4734 cv
131.555 63.8747 131.177 65.2458 131.11 66.654 cv
130.917 70.7077 131.045 74.7668 131.157 78.821 cv
131.259 82.4905 130.861 86.2395 131.191 89.8826 cv
131.41 92.2991 131.274 94.947 131.338 97.3855 cv
131.403 99.8518 131.753 102.204 131.888 104.697 cv
128.44 102.216 129.267 101.542 129.384 97.5862 cv
129.426 96.1428 129.205 94.74 129.35 93.2849 cv
129.551 91.2527 129.478 89.2463 129.185 87.2258 cv
128.998 85.9426 129.34 84.5129 129.337 83.2063 cv
129.334 81.7922 129.248 80.3796 129.229 78.966 cv
cp
f
191.169 61.9441 mo
192.914 65.3122 191.163 71.3225 191.176 75.0896 cv
191.185 77.6443 191.082 80.1892 191.137 82.7478 cv
191.155 83.6243 191.322 90.7126 190.77 90.4758 cv
189.24 89.822 190.148 77.3894 190.183 75.7209 cv
190.225 73.7375 189.432 62.5491 191.169 61.9441 cv
cp
f
195.007 86.9338 mo
195.216 82.9172 195.548 78.8957 195.522 74.8713 cv
195.515 73.9416 194.537 64.9641 195.762 65.5344 cv
197.395 66.2952 196.381 75.009 196.353 76.5452 cv
196.308 78.9758 197.248 85.7502 195.007 86.9338 cv
cp
f
209.067 77.6584 mo
209.287 78.9299 209.388 80.2449 209.209 81.3518 cv
209.046 82.363 208.09 82.866 207.716 81.6589 cv
207.357 80.4968 207.907 79.0163 207.784 77.7771 cv
207.728 77.2117 207.447 75.0061 208.439 74.988 cv
208.671 75.7839 208.902 76.7087 209.067 77.6584 cv
cp
f
200.145 83.9241 mo
200.145 81.2351 200.144 78.5461 200.146 75.8567 cv
200.147 74.5349 199.499 69.866 200.486 69.1418 cv
202.077 71.2771 201.168 75.2991 201.154 77.7229 cv
201.143 79.6599 202.41 83.2224 200.145 83.9241 cv
cp
f
202.971 81.448 mo
203.092 80.614 203.446 72.6819 203.7 72.6863 cv
205.064 72.7102 205.778 81.0798 202.971 81.448 cv
cp
f
218.784 197.957 mo
218.786 197.995 218.787 198.035 218.791 198.075 cv
219.478 198.083 219.993 198.233 220.696 198.116 cv
221.579 197.968 224.463 198.13 224.264 196.57 cv
224.174 195.89 220.684 195.995 220.201 196.021 cv
218.823 196.098 218.726 196.558 218.784 197.957 cv
cp
219.067 192.497 mo
219.806 193.865 225.294 193.046 224.269 191.272 cv
223.524 189.987 218.913 190.426 218.986 192.199 cv
218.99 192.308 219.018 192.407 219.067 192.497 cv
cp
226.152 194.295 mo
227.174 196.44 228.255 198.379 225.841 200.032 cv
224.431 200.998 221.556 201.485 219.874 201.323 cv
217.449 201.09 216.101 200.692 215.949 198.265 cv
215.831 196.376 215.638 193.487 216.023 191.637 cv
216.826 187.795 219.519 188.392 222.833 188.305 cv
224.577 188.26 227.032 188.502 227.341 190.716 cv
227.461 191.571 225.963 193.885 226.152 194.295 cv
cp
f
205.779 201.207 mo
202.318 200.778 201.183 197.852 201.651 194.712 cv
202.312 190.289 204.884 188.791 209.064 188.794 cv
211.219 188.795 212.902 188.318 212.53 191.348 cv
212.335 192.937 210.856 194.592 209.129 193.333 cv
208.341 192.759 208.067 191.439 206.729 191.891 cv
205.495 192.307 205.854 193.498 205.829 194.496 cv
205.787 196.19 205.166 198.712 207.796 198.208 cv
209.386 197.904 210.186 194.553 212.363 195.877 cv
213.332 196.466 213.14 200.208 212.339 200.898 cv
210.961 202.086 207.482 201.402 205.853 201.216 cv
205.828 201.213 205.803 201.21 205.779 201.207 cv
cp
f
249.301 143.495 mo
248.567 145.52 246.709 146.854 245.334 148.438 cv
243.933 150.05 242.646 151.761 241.213 153.346 cv
238.056 156.836 235.162 160.49 231.788 163.787 cv
232.904 159.733 238.544 155.222 241.315 152.066 cv
242.739 150.445 244.08 148.754 245.468 147.104 cv
246.188 146.249 246.892 145.335 247.696 144.557 cv
247.835 144.422 249.308 143.478 249.301 143.495 cv
cp
f
239.409 161.861 mo
238.993 163.952 223.279 182.496 220.08 184.821 cv
226.523 177.168 232.965 169.514 239.409 161.861 cv
cp
f
215.473 181.524 mo
218.015 178.655 220.557 175.786 223.101 172.918 cv
225.098 170.666 227.784 166.171 230.599 165.13 cv
229.552 167.318 216.105 182.063 215.473 181.524 cv
cp
f
217.916 171.968 mo
216.515 175.761 212.682 179.338 209.566 181.781 cv
211.969 178.655 214.824 174.247 217.916 171.968 cv
cp
f
228.877 159.603 mo
229.832 160.861 223.726 164.825 223.111 165.707 cv
223.672 164.849 223.954 163.88 224.72 163.155 cv
225.229 162.674 228.233 158.758 228.877 159.603 cv
cp
f
197.692 186.814 mo
198.209 186.57 199.021 184.953 199.412 184.459 cv
200.248 183.402 201.245 182.582 202.082 181.528 cv
202.974 180.405 204.148 179.467 205.409 178.789 cv
204.998 179.641 204.711 180.387 204.057 181.119 cv
202.329 183.051 200.057 185.699 197.692 186.814 cv
cp
f
217.954 172.005 mo
218.218 170.425 219.429 169.496 220.925 169.172 cv
220.05 170.225 219.166 171.599 217.954 172.005 cv
cp
f
216.159 291.327 mo
214.124 293.406 212.221 294.809 209.723 296.336 cv
210.966 294.422 214.044 292.071 216.159 291.327 cv
cp
f
108.365 294.401 mo
105.855 295.496 103.31 298.616 100.44 298.434 cv
103.028 295.329 106.072 293.94 109.332 291.89 cv
113.024 289.568 116.851 286.931 120.327 284.278 cv
121.642 283.274 123.379 282.014 125.091 282.113 cv
125.473 284.694 118.861 287.085 117.068 288.435 cv
114.277 290.539 111.665 293.035 108.469 294.357 cv
108.434 294.371 108.399 294.385 108.365 294.401 cv
cp
f
324.521 298.173 mo
324.862 298.082 325.248 298.022 325.684 297.998 cv
327.545 297.896 329.321 297.815 331.243 297.533 cv
332.872 297.294 334.473 297.271 336.048 297.027 cv
342.953 295.956 350.209 294.964 357.262 296.41 cv
358.632 296.691 360.115 296.219 361.493 296.252 cv
365.198 296.34 368.941 297.315 372.617 297.737 cv
374.95 298.005 379.362 298.143 380.818 300.629 cv
381.485 301.767 380.196 304.836 381.082 305.776 cv
381.761 306.499 383.606 306.328 384.25 305.659 cv
383.74 306.188 391.058 306.443 391.59 306.374 cv
394.859 305.949 396.834 304.667 398.048 301.371 cv
398.935 298.967 399.052 296.224 399.135 293.692 cv
399.288 289.074 398.686 284.499 398.684 279.893 cv
398.679 269.325 399.004 258.765 399.086 248.199 cv
399.106 245.634 399.114 243.066 399.214 240.503 cv
399.271 239.051 400.251 234.679 399.58 233.534 cv
398.532 231.749 395.978 231.926 395.191 229.441 cv
394.734 227.996 394.826 225.619 395.541 224.259 cv
396.588 222.264 398.963 222.076 399.682 220.098 cv
400.34 218.29 399.678 215.415 399.635 213.519 cv
399.584 211.265 399.842 208.888 399.656 206.658 cv
399.468 204.409 399.97 201.613 398.663 199.618 cv
397.336 197.597 394.778 196.901 392.985 195.465 cv
389.734 192.861 386.623 190.136 383.234 187.785 cv
381.11 186.31 379.297 184.792 376.337 184.468 cv
371.612 183.953 366.923 184.381 362.184 184.424 cv
352.452 184.512 342.718 184.612 332.986 184.745 cv
328.066 184.812 323.147 184.902 318.227 184.969 cv
315.44 185.009 305.843 183.802 304.409 185.492 cv
303.644 186.392 304.245 189.968 304.293 191.088 cv
304.391 193.307 304.522 195.524 304.563 197.746 cv
304.658 202.907 304.512 208.076 304.446 213.237 cv
304.434 214.168 304.078 216.14 304.516 217.006 cv
305.141 218.238 306.473 218.017 307.494 218.732 cv
310.233 220.649 308.825 226.748 308.956 229.74 cv
309.037 231.61 309.493 233.884 308.918 235.7 cv
308.021 238.53 306.435 237.47 304.783 239.394 cv
302.603 241.933 303.905 247.341 303.96 250.289 cv
304.13 259.307 303.429 268.148 303.503 277.135 cv
303.545 282.226 303.853 287.248 303.608 292.339 cv
303.493 294.724 303.252 297.401 303.518 299.775 cv
303.654 300.979 303.674 303.546 304.12 304.715 cv
305.111 307.31 311.022 306.718 313.107 306.683 cv
315.907 306.636 320.396 306.945 321.255 303.543 cv
321.888 301.035 322.108 298.814 324.521 298.173 cv
cp
296.886 267.884 mo
297.105 266.517 297.408 265.146 297.45 263.796 cv
297.524 261.367 297.037 258.963 297.053 256.539 cv
297.083 252.396 296.784 248.181 297.12 244.053 cv
297.39 240.74 297.278 237.337 300.534 235.752 cv
301.934 235.07 301.884 235.593 302.273 234.164 cv
302.767 232.35 301.989 229.901 302.104 227.981 cv
302.216 226.128 303.531 224.238 301.536 223.361 cv
299.808 222.601 298.979 223.651 298.244 221.693 cv
297.647 220.104 298.086 217.873 297.911 216.183 cv
297.436 211.601 297.736 206.906 297.814 202.303 cv
297.858 199.723 298.386 197.214 298.618 194.677 cv
298.864 191.979 298.723 189.352 299.6 186.735 cv
301.028 182.472 304.528 182.359 308.543 182.541 cv
310.918 182.649 313.214 182.411 315.579 182.261 cv
320.145 181.971 324.733 181.928 329.306 181.801 cv
338.664 181.54 347.974 181.867 357.329 181.851 cv
361.626 181.844 365.92 181.674 370.216 181.549 cv
374.295 181.431 378.576 180.663 382.141 182.927 cv
387.649 186.423 391.872 191.479 396.896 195.572 cv
398.87 197.179 400.921 197.925 401.185 200.584 cv
401.529 204.052 401.351 207.743 401.351 211.235 cv
401.351 215.056 401.878 218.835 401.692 222.598 cv
401.692 222.61 398.84 223.888 398.53 224.25 cv
397.385 225.583 397.761 227.214 398.335 228.75 cv
398.549 229.323 398.789 230.001 399.188 230.466 cv
399.785 231.16 401.376 231.485 401.729 231.976 cv
402.668 233.287 401.356 232.884 401.117 234.139 cv
400.793 235.836 401.261 238.096 401.242 239.862 cv
401.191 244.521 401.168 249.18 401.163 253.84 cv
401.152 262.341 401.372 270.848 401.446 279.35 cv
401.513 287.179 401.213 294.936 400.827 302.741 cv
400.721 304.885 400.53 305.736 399.251 307.404 cv
398.409 308.5 397.956 309.68 397.233 310.671 cv
395.276 313.349 392 312.996 389.062 312.837 cv
387.054 312.728 384.982 312.378 382.972 312.424 cv
381.407 312.46 380.168 312.905 378.575 312.577 cv
376.674 312.186 376.714 311.917 375.944 310.75 cv
374.959 309.256 375.606 307.181 374.77 305.931 cv
373.498 304.031 367.51 303.513 365.271 303.208 cv
360.717 302.586 355.902 302.324 351.317 302.693 cv
346.308 303.097 341.23 302.811 336.264 303.652 cv
334.071 304.023 330.898 304.356 328.939 305.417 cv
327.179 306.369 326.99 307.745 325.852 309.257 cv
323.205 312.775 319.821 312.669 315.794 312.711 cv
311.075 312.76 306.64 312.697 302.083 311.854 cv
298.096 311.117 297.894 310.179 297.697 306.159 cv
297.48 301.743 297.541 297.595 297.718 293.192 cv
297.919 288.195 297.677 283.096 297.469 278.1 cv
297.374 275.789 297.066 273.684 296.74 271.455 cv
296.568 270.278 296.694 269.083 296.886 267.884 cv
cp
f
347.483 220.907 mo
353.212 224.908 359.827 227.441 365.835 231.025 cv
368.715 232.744 371.585 234.479 374.43 236.257 cv
379.252 239.27 385.604 242.161 389.009 246.845 cv
384.995 245.582 381.86 243.469 378.275 241.314 cv
374.289 238.919 370.166 236.784 366.141 234.457 cv
362.453 232.325 358.724 230.251 355.06 228.076 cv
353.45 227.12 351.777 226.601 350.365 225.357 cv
347.814 223.108 344.659 221.729 341.864 219.783 cv
340.5 218.834 338.668 218.052 337.529 216.95 cv
340.592 216.412 344.484 218.812 347.483 220.907 cv
cp
f
377.963 288.742 mo
373.808 287.176 370.884 283.886 367.264 281.508 cv
364.396 279.624 361.108 277.841 358.233 275.63 cv
355.584 273.592 352.739 271.949 349.937 270.161 cv
347.065 268.33 344.71 265.815 341.993 263.778 cv
340.815 262.894 337.953 261.532 337.723 260.106 cv
341.502 261.804 345.11 263.999 348.646 266.093 cv
352.093 268.134 355.021 270.961 358.624 272.755 cv
360.975 273.927 362.848 276.186 365.069 277.611 cv
369.025 280.148 372.631 282.247 376.168 285.462 cv
377.288 286.479 379.848 287.634 379.92 289.211 cv
379.252 289.339 378.894 289.072 378.281 288.857 cv
378.174 288.819 378.068 288.781 377.963 288.742 cv
cp
f
379.266 270.706 mo
381.767 272.18 384.615 273.975 385.839 276.099 cv
385.962 276.312 382.252 275.121 381.809 274.875 cv
380.037 273.89 378.378 272.841 376.709 271.685 cv
374.244 269.98 371.551 269.161 369.126 267.327 cv
363.179 262.833 356.579 259.447 350.351 255.384 cv
345.616 252.293 340.399 249.546 335.963 246.079 cv
333.006 243.766 327.277 241.652 325.464 238.402 cv
326.62 237.607 331.612 241.781 332.668 242.348 cv
335.065 243.636 337.373 244.78 339.635 246.352 cv
344.693 249.867 350.125 252.368 355.278 255.773 cv
357.949 257.538 360.083 259.018 362.993 260.418 cv
366.2 261.96 369.283 263.769 372.201 265.805 cv
373.886 266.982 375.384 268.386 377.136 269.45 cv
377.777 269.839 378.505 270.258 379.266 270.706 cv
cp
f
359.389 240.917 mo
355.41 238.511 351.501 235.991 347.586 233.558 cv
344.97 231.934 342.245 230.502 339.668 228.81 cv
337.376 227.307 335.199 225.618 332.887 224.099 cv
331.468 223.169 329.598 222.254 328.48 221.005 cv
331.271 221.098 333.324 223.136 335.706 224.281 cv
338.037 225.402 340.258 226.695 342.518 228.037 cv
347.937 231.256 353.233 234.686 358.76 237.722 cv
364.273 240.75 369.678 243.942 375.153 247.037 cv
377.812 248.541 380.582 249.853 383.259 251.327 cv
385.18 252.384 389.471 254.436 389.887 256.885 cv
387.902 256.416 386.732 256.299 384.934 255.204 cv
378.593 251.341 371.979 248.006 365.465 244.432 cv
363.415 243.307 361.393 242.127 359.389 240.917 cv
cp
f
389.728 235.08 mo
390.163 235.356 390.558 235.667 390.882 236.04 cv
388.162 236.307 385.149 234.857 382.917 233.41 cv
379.109 230.942 375.103 228.939 371.207 226.706 cv
369.299 225.613 367.428 224.543 365.611 223.397 cv
362.227 221.263 359.968 219.961 356.778 218.128 cv
354.269 216.686 351.88 215.112 349.315 213.733 cv
347.211 212.604 341.552 210.274 341.877 207.954 cv
342.817 207.795 345.412 209.752 346.337 210.245 cv
348.27 211.275 350.247 212.218 352.18 213.248 cv
356.496 215.548 360.619 218.183 364.856 220.62 cv
369.853 223.494 374.858 226.354 379.847 229.241 cv
381.931 230.447 383.974 231.641 385.935 233.031 cv
387.053 233.824 388.539 234.323 389.728 235.08 cv
cp
f
346.262 238.87 mo
349.876 240.741 353.528 242.748 356.742 245.269 cv
359.505 247.436 362.376 248.613 365.23 250.686 cv
366.801 251.828 368.66 252.995 370.252 254.182 cv
373.494 256.598 377.389 257.981 380.61 260.331 cv
382.937 262.03 386.601 264.54 387.49 267.434 cv
386.238 267.656 385.133 266.827 384.079 266.245 cv
380.545 264.297 377.177 261.973 374.224 259.296 cv
370.595 256.005 365.725 253.564 361.579 250.972 cv
355.358 247.083 348.957 243.486 342.787 239.514 cv
337.327 236 331.715 232.898 327.041 228.331 cv
328.85 228.765 330.475 229.225 332.07 230.089 cv
336.483 232.477 340.413 235.87 344.84 238.138 cv
345.313 238.381 345.787 238.624 346.262 238.87 cv
cp
f
346.251 201.678 mo
362.232 206.948 376.283 215.684 390.255 224.902 cv
388.742 226.235 388.125 225.283 386.445 224.3 cv
384.423 223.116 382.39 221.951 380.35 220.798 cv
376.499 218.619 372.62 216.487 368.732 214.374 cv
365.072 212.384 361.403 210.411 357.738 208.429 cv
354.637 206.754 348.207 204.654 346.251 201.678 cv
cp
f
383.867 281.806 mo
385.451 282.863 386.912 284.134 386.93 285.704 cv
385.869 285.906 384.894 285.136 384.013 284.625 cv
380.651 282.673 377.354 280.867 374.46 278.321 cv
371.449 275.674 367.825 273.132 364.378 271.08 cv
360.244 268.618 356.17 265.756 351.864 263.616 cv
348.487 261.937 345.541 259.129 342.598 256.698 cv
341.938 256.153 341.125 255.743 341.031 254.94 cv
344.168 255.181 347.919 257.958 350.515 259.618 cv
357.332 263.977 363.928 268.528 370.69 272.974 cv
374.08 275.203 377.459 277.366 380.699 279.792 cv
381.471 280.37 382.703 281.03 383.867 281.806 cv
cp
f
339.471 269.049 mo
338.771 268.535 338.06 268.039 337.329 267.574 cv
335.848 266.634 333.532 265.799 332.728 264.169 cv
336.324 264.027 338.684 267.456 341.451 269.14 cv
344.741 271.143 347.754 273.505 350.978 275.678 cv
353.7 277.514 356.413 279.358 359.103 281.245 cv
361.439 282.884 366.065 285.048 367.317 287.548 cv
364.783 288.602 362.844 286.585 360.887 285.173 cv
357.76 282.917 354.126 280.898 351.316 278.26 cv
349.585 276.633 347.668 275.131 345.541 273.645 cv
343.47 272.2 341.518 270.55 339.471 269.049 cv
cp
f
345.034 286.226 mo
339.89 282.945 334.815 279.672 329.937 276.003 cv
326.213 273.202 321.63 270.91 317.521 268.724 cv
315.029 267.399 313.391 265.35 310.973 263.885 cv
310.656 263.693 307.571 261.051 308.01 261.034 cv
310.078 260.956 312.818 263.173 314.487 264.272 cv
321.48 268.883 328.726 272.883 335.482 277.96 cv
337.042 279.133 345.566 284.499 345.034 286.226 cv
cp
f
373.526 192.814 mo
376.217 194.062 378.537 195.775 381.23 197.39 cv
383.251 198.602 385.251 199.846 387.236 201.116 cv
388.073 201.65 392.366 205.236 393.156 204.996 cv
391.574 205.477 389.335 203.776 387.903 203.096 cv
386.182 202.279 384.194 201.367 382.48 200.316 cv
380.27 198.962 378.149 197.426 375.96 196.046 cv
374.298 194.999 371.078 193.625 370.345 191.646 cv
371.482 191.953 372.529 192.351 373.526 192.814 cv
cp
f
344.22 279.844 mo
340.472 277.179 336.709 274.542 332.926 271.932 cv
329.656 269.677 326.01 267.83 322.58 265.832 cv
318.116 263.233 314.054 260.135 309.931 256.95 cv
309.134 256.335 307.873 255.703 308.021 254.579 cv
310.501 254.197 312.969 256.974 314.648 258.427 cv
317.557 260.947 320.174 262.458 323.581 264.015 cv
327.451 265.784 330.912 269.236 334.48 271.586 cv
336.215 272.728 345.381 278.471 344.22 279.844 cv
cp
f
383.101 207.642 mo
380.664 206.313 378.25 204.662 376.084 203.03 cv
373.705 201.238 371.219 199.723 368.87 197.864 cv
369.407 198.289 371.458 198.313 372.217 198.584 cv
373.494 199.039 374.702 199.685 375.872 200.362 cv
378.931 202.132 381.996 204.059 384.872 206.114 cv
386.782 207.478 390.99 209.293 391.741 211.531 cv
389.09 211.805 385.358 208.873 383.101 207.642 cv
cp
f
321.102 275.139 mo
321.52 275.461 321.938 275.771 322.362 276.057 cv
325.018 277.852 327.609 279.872 330.317 281.646 cv
332.619 283.155 335.181 285.751 337.654 286.559 cv
336.423 287.708 334.085 285.288 333.09 284.581 cv
331.501 283.45 329.82 282.677 328.153 281.661 cv
321.558 277.636 314.839 274.002 309.484 268.243 cv
311.695 268.099 313.601 270.003 315.188 271.273 cv
317.08 272.789 319.163 273.651 321.102 275.139 cv
cp
f
313.309 282.074 mo
313.205 281.999 313.099 281.924 312.994 281.85 cv
311.048 280.497 308.597 278.927 307.275 276.914 cv
310.036 276.337 312.577 279.556 314.612 280.944 cv
317.493 282.908 319.851 285.334 322.372 287.722 cv
321.872 287.249 319.851 287.301 319.055 286.717 cv
317.057 285.25 315.302 283.512 313.309 282.074 cv
cp
f
379.793 211.903 mo
376.164 209.619 372.533 207.41 369.075 204.771 cv
372.841 205.818 376.145 208.299 379.538 210.125 cv
383.485 212.25 388.118 214.234 390.773 218.032 cv
388.44 218.087 385.743 215.785 383.906 214.555 cv
382.541 213.642 381.168 212.767 379.793 211.903 cv
cp
f
320.112 281.637 mo
318.182 280.224 316.131 279.473 314.316 277.914 cv
312.311 276.191 310.243 274.508 308.552 272.463 cv
311.557 273.405 313.822 275.371 316.346 277.135 cv
318.371 278.551 320.595 279.514 322.383 281.346 cv
324.15 283.157 328.241 284.751 328.815 287.382 cv
325.652 286.127 322.918 283.694 320.112 281.637 cv
cp
f
212.002 78.4153 mo
212.038 79.3816 211.612 80.6745 212 81.5871 cv
212.282 82.2512 213.194 82.4333 213.633 81.6789 cv
214.038 80.9856 213.479 79.2444 213.287 78.5022 cv
212.82 76.6936 211.653 77.8923 212.002 78.4153 cv
cp
f
326.275 188.218 mo
322.54 188.613 318.563 188.695 314.808 188.885 cv
313.475 188.953 309.572 188.319 308.6 189.461 cv
307.152 191.163 309.033 197.433 309.117 199.385 cv
309.242 202.283 309.472 205.527 309.3 208.368 cv
310.279 208.439 310.808 207.308 311.284 206.551 cv
312.781 204.169 314.581 202.443 316.591 200.401 cv
318.586 198.377 320.158 196.197 322.304 194.307 cv
324.399 192.465 327.049 190.374 328.667 188.084 cv
326.815 187.637 324.943 188.085 323.108 188.385 cv
326.275 188.218 li
cp
f
96.9424 302.785 mo
92.4263 302.82 87.9463 302.421 83.4385 302.197 cv
81.441 302.097 78.9957 302.299 77.1299 301.504 cv
73.6084 300.005 73.129 296.996 72.2754 293.839 cv
72.0196 292.892 70.4624 293.051 70.5259 294.075 cv
70.7911 298.338 72.0831 302.313 76.5069 303.764 cv
82.7295 305.805 90.5582 304.496 96.9424 304.285 cv
97.9043 304.253 97.9117 302.777 96.9424 302.785 cv
cp
f
120.079 302.052 mo
118.375 301.787 116.585 301.552 114.887 301.931 cv
113.815 302.171 114.026 304.019 115.151 303.884 cv
116.764 303.689 118.317 303.225 119.941 303.064 cv
120.468 303.012 120.701 302.148 120.079 302.052 cv
cp
f
458.951 326.891 mo
429.152 325.505 399.171 326.029 369.342 326.004 cv
339.472 325.977 309.603 325.996 279.733 325.992 cv
220.658 325.985 161.583 325.977 102.507 325.969 cv
.950726 325.957 li
-.315876 325.957 -.317829 327.89 .950726 327.926 cv
121.66 331.275 240.244 330.85 357.394 327.881 cv
391.184 327.024 425.183 328.562 458.951 326.991 cv
459.015 326.988 459.015 326.894 458.951 326.891 cv
cp
f
464.224 340.957 mo
434.046 339.735 403.625 340.797 373.42 340.812 cv
343.153 340.827 312.853 339.469 282.617 340.857 cv
233.293 343.12 165.711 341.58 103.004 341.044 cv
69.1055 340.755 35.1089 340.396 1.22465 341.426 cv
.561077 341.446 .560101 342.436 1.22465 342.457 cv
31.4576 343.375 61.7813 342.794 92.0284 342.827 cv
122.296 342.859 152.564 342.892 182.832 342.926 cv
242.703 342.99 302.574 343.036 362.444 343.065 cv
379.075 343.073 395.706 343.082 412.336 343.09 cv
429.606 343.098 446.969 343.625 464.224 342.926 cv
465.491 342.875 465.493 341.009 464.224 340.957 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\716\753\774\743\740 \701\773\765\740\753\756\742\740) ()
%%Title: (flash card2-01.eps)
%%CreationDate: 12/10/2016 1:59 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CTeRFE[CLoJc6/r!uP^tY3o9'.PlDf$euO]?MMq3[V$&Z#6IWID2oo>TI>0"^OG45'9Q:;8\+NbIb9p'ZcS)/mu!'_a,-"0
%ngF0M^\RH,2dcRCrpBa`ohF^1T@B*Dl6nT`m/<9cpldr<YA\meqWhcUh:b%Sp.Vr0m+$:*[r(bp@rB=,4Rhn.X)G^srT3q6]R0P@
%p"*P8]`%cq]<?^4F8u'Z=9!*O^\dWrl&.Km^OG_Hh%qa%hs@fkL#l8$ppXVFr57i-hsfNfpJ:he$PWL,p&"K,+*J^lr[5JZZhs@Y
%:!0)8rVc23:;?77s*_*(riYs=qgIp)IlI;YnF-DVV`;rWTC9AXmp:M:o%hL`Dr,qW(U>ErT3p8)D]W9cj3)@)J$8a[3VKb.^AlY$
%SDo%/q<P4,q3jh@Fq]]sS,[.PN?sCQ:D3YNm.TDQnF(a'DQ9l2S)6?f)Hf/ggJ)PYlg+kP%k[k(YBZ7U]79GKMm#<oq>N7dA8^.=
%]D4jESMt"jq``g*P;7'cCnGoI[lrWU12a!QA\+GEms9BKfDkF(otUM&k.eWZq:Y(Xrh8f;^&QoXs4]_NgG\tLnSc2<r:R\:rUS3[
%HY]%TWUK>CDa/UI\NT%opl!I*nuJB(P5jutr6<E/IsCqK2"g8!hr$<gqIZh0r7*`5r5Hj/HO](0IZ_DElLgKnoCfrh7R,"<:SuG2
%#2@dKB!0e'"mUQ#Ea4MEe'EifEH%G6qYhF4cbFr'jpuCEr:MG:fnXE]F4L5qGAfZ,1tQ'ld/WXk\)[*n`ZMrmHgLLq?[ir;T(8ci
%IsDq7g[/AI%bH1+o!=+\?f:m4NQq@PFr*%j5(EG7s6[)-hq9Hmq8se6JkuF3XW?on9:YdD^\B>XDLD;McbH_lrn4omhgG+[?iK*?
%?iK%dGFuSILY"KbmIdOSDr94arTr[Ms5AI[`h2,clLuUfhj8cgIAupQ:\rNua_W@@)iCJ'r;K1#W82rcNWUf?S&q/nl.sXuY'9d6
%bu]Dk7rHW/ft5ipqQ1d]c1q1J*,gJcCsm<Thj5q\IW/YB4793s4@o.#YeTpAs0b.($?`ML0E:/,kAS,Pol]!WEWa)Pr8j7uhqdc<
%5P"[NaUYbGgP^QDdhh<J7UH-73/CpPIA6aP=2p64IfFWLl(2`7Ht?[Lc+h2t?haRjG<#Qd]3OVShL,.8.=PW%49ZdUs6t%&4nORY
%Y[d\1o?Y2IqRmd;\*n3As3K;Hm'=D'kL]00rR6h=YYO`e0E%B,n,LKVcIZEPp@XKuLX^GhmgjoWfH6a`0C0qI9&J`/r9iIVpkQ>N
%^\R_aj%ZoH)rMad@n?(Aho`BF=f8QTdMgo29L7*tnX,&<Umo9%n>oc>i#/T=g'3ggq<n3N=.d8,h7nC:rq1IRF:U#hs8:+`hS&jP
%TAI5l\UX@ufDfsa2fIT&rY)s5Hl?HKbfWLAWa!U?/h)OJO&9`#m<Gb(+6n6g]Ns=[G8dHJ;;Q`sf3_.NI_mJWjY5qG4OJ>"o7,q;
%CkgONrVuOfeknZ6mePqtZ]Do'466cuIZ/3SCTj[>cQ=?b7[sl,\%D&3e#XT=lr";!k"k>M:_+M2ooO??^Z>D2DpsL+c-p<DCr6&b
%pYarbkBHt&dO*8SGk2GqA6-R&rl6s)>2XDl]5QQ=IkA,d?!g)25K@,bVNuP6b\itu=c\!$pijb!ZqnrQ5'tSII.Hb'eFVi%bOZd)
%p?q$TDp2qqp!']>p<,*rIUV[:+'`oOll$t0>0)eDmQ^U10E1s;^\H]9q27uIV(HUsX';p&II#Y?VZ#:epY3UZ\36Z?,n":!C)42L
%1t#'Akrq8+a7PU&j=T+>F3-:DjHoVro>h\ur#b)Pi#906Y#G9[\e;0@/)cOpDgSb&n7rg:\Qnlq^T]6[g4//jf;H1NVg7hh?dF.G
%/ma+T`[bl<aGUifSmFOnG^+6.ipOd50jaJgqht0B^*kZ*MtCJ*HL^Y"o_A(JFT6IW1nOQmrm[P);gHM]l"PKlnbDbOq"X?'s*48t
%+31.1I#n/7H`W8S*ohTQiU1FZZ)cLlloMZ!+1]7t?/m/2\6d(U0Qdh2U#,^hVt]YY=Vcu@341Fu=`eIhKUJH=V=ta@qW>'+'&^7n
%O2j3d?2r4Hh`j:)/0%?M&RaMl_7oZ7IJ[G;S_?n71U?8dAt&K_]t?<&_3c(::HLG7;U_r9*<1q`bk(JMH&a\/qmggW'PBLun'978
%o6kjQN0jE[3EuL@I+%,s(Nq1J^1ac)>OD=Up76temlUF7&,,so9FkH;%%:32duJ$ddS4)Gl-5c5c\#qom1?a?g@/cZEB`\YchT/*
%r:#+.hr0OOom@RX[+@3t7(_:;X;V&B2e4"'M3M=`>-kugJsfKFJ$^qlc@JG[e(lq:8XFr)\Y/!7"CM.9aF*p;5B_/0Nt.3JI!.3M
%$tGdoVqfo$Aj?0@^E</*n*fW+rr1mUn_V!8]lR-=L\-\qVq=dnB_JbsoS6j>oAT,RG5^MU*Zc@D+.aPCKso%?TDVg8$s#0=]DZh-
%.)X9O*L4Fi+I'aWEAHY$pAa8onB]rplh3.$A^5I3(VIdWgLE$V0o\a$Aq/7#GFOfj`ZP-1pUQ>lraNXsm;[<]8\6\KB>^t@jsKeZ
%e+VXRrS7)!n%7CXIh?1(Mifh<V`ieA[k[=urYs>[Sp#RpUM<#)B)AhFCua!oF$/FGn4)abhV$3pp^c!09gd-&O#i0sfF2N;Ke`P#
%S(dK)%sAod]Ud.`leS/.s"Wj=SSbuAp2?@mlk:\O>;,?\4k^.R[uWQ:&\>ZdAfnV:-Vn@)?JIbnA00D#j=%"6k7UqZgT'5:h:h)F
%k4jblJ+"UBRVql1R2]VM/nQ9m3m*EE55#g[kKA7n"+Klu)]p/Bj8")ph)mI!HtNteF7-UIc\Ob&]WuqYaRYl2jG3Z#T/*K[Z7*,J
%_qN=3m:DT1)n(ghafO`-;pD`$<qk>60Km.NpGPF3lAH1#Y/BQ4c`?k;h"B@t3pqH$*ZgmsgH9]TH+Q9O]WpLbT)?.g</#hg]CFSH
%FF$,7iC?&K_`L!Y_js$^DX[Ke%mT^VHDeF!_E#.&I<No\EM'a>J,eh@j*hs9G$fGTJ#ISe7m4U/2Km?,5F=aO1Li>ed-PB2X-rp6
%T:T2Qo6m5!oR*k*]05'?q2S1;:3V+&^80TZl-:sVI_P^NrUU=JG8Y>jHCrOOo\$pt]@G`Wq_eEOiqp_9LRlpXa4n>bp%/'h49*)_
%IQ51D]<d">\['ni8#N-N2A#A=?$.O$BJn1Vp,Y/1VN9!aTo[mZ+*3_iCD"`[%:XVNK<,Y,U\u%qLFq7Uend9\L,j@A]+8^]WR]jS
%]3$uD[Kfqo)D2FtGSeoCM]H]N8$,A8^%hWos*sqs]+6N@;_C<,d-Zebo$c1i\!%P\:Z#l_qT8bfRsZ845@g]W)sHuUPD(>:/@p5A
%HSG3^mV\JSddQnAB!82hAM\D^Hsn8rO\X6Y)KKO$V\a,>4`XY=?q&-tf)Y,PO>Ss**,IO_m)OicdZBZdd)d=N3V4BDn<;8X+QT)h
%B>-m8H#E,g[ld->M&fb.I3,e7D1:"!rn^.[9W#Jsb+n;f)_*mb1`nt]%a.@iORIJQNu`Kf%upGsa:19qbL9_&6YB35`ikA5NF7]O
%N*hTO)\1J^qqMi6-Vrea<_Z@L;DCr*4l;\-Dn\HLIe`i+^A]g)r/Q7*UF@1qI/*NjS/uqN42(Q+DY:\'f_/3;0jg=.S`kYAF2r:c
%SM'c3bC4AQr6^`GdH5&$4j6bX=!'`LDSE[WoG._bd'42R0HV/X8G->WHN@1KO)N#EVT2/,ZgkHX.)QQJ0^nWU""YCH%oRKX+@b6-
%j"a&8&Y1(/.u_lUa(^F]&?U)9fFYC.ce\HVIs+<,;YQ7<k@sm6(B"`r]]Y]k7h4DmFM'f+ahuBXTKTT:+1(Se4+FR,'`jk@b;1Ye
%2B[LB1QO@He/?`&Z>BDGgiu5H02<*hA[L)-.7/[T<il)'U;a/K%>JJt8bNgdPc.1%V&d-X@35E;e0aG/Ti'7;Emgr6Wkf6FRWZrl
%o?h^(^(7X;cnB+cF"KK>))Q1_D7dEl^]+0%(Y$.]5EEk2&(HHBh]M]6Yo:j.*I6a6,EA2lOjh6mT(br,b%]F6d0t('f@g/MLrY]K
%."b>trnu\cM9q-d?JKNC5#<anWY_NGZ82BHAiuV@@q-u3/<9?i<i9<3j'c)^AU@2KnM(K8NeE]<RWA>Y/X]?RH?7Z.]0g?tL_"uu
%s8H@g@ljR!s#GFDD<^a_]BtQ<cRdpC.jf/sT[U,bZ>`Si,)7L\(:5_sSpV$$mQttLqn;J=fZlJfRYk>d10hn:h'8E.4;K\Sdrb$"
%[&o^UojKSQl-tp];),cKVCrJOa_j>tpYY@bhV5Ph@:m(&m*X)!gg_[UfZ\E<biL:7`uH/lGNI4aF_:'%SDB=;osF*^R%V#);=)Fi
%h"Ub<R#@C*qfolImSg-h0[7(PMGNKM3U@eM[9&dG9:jL/1@L6[4J_M9faHj]P<&Imba(A[9t@`!3,Q7jAoX9mSmk_Km<4QXL"W:m
%AioHtp^]/;aFk`bMX9P=G4!DYjM@qQSJ_b*<_[e,c%tN4RP&Fms#uinHnZ#A1Hi'k1s<G!hGr%=Cg+>O9_DpSp;&TWcA^"%4l&h:
%/+XSa\IE.\Nk3?=Wel^gCY^7N'/_6d5O6863q9OOr2^Rh8LH,VI7H9tYqjH(Zgo3-aUfh<WOD4TZ]@NIhttc=.F<Ku"PreXc[TkN
%KR+)2dGK<MIBVDo4)ddbamC0=^[)\tqtE/P5kJhQ9l@@DCH0q"c:C)EW0L9T1pr,)G94-/=[>;"(];D#a95cGM>r?W+Q=nsrLEng
%rr;h/r8[fqC=_SOnL'8^ITk$G\GCEJ1XaB@SgHF`.iph29;`JTMM-)=b^l*bYB&PAh52QDiT7cqM1J1.:ib0Q%%*UlGbS[XGMMW@
%>q.hlO-,P#+hhplQ65iim>P\=oNKXUX/^/aW63bGT.6p:<&jZjE>X/j9)#O5>ib!EAE?iemW%@LmT1$.8TEf;,;J%Whh@u,"F4V8
%GOmY:,g'PV+',rmG1fgVr)(<Q2S-3.$qkGU6HO^\m$4@@5*l,YfPrS9hL?>'rnX[N07RuMj,qk$1C)83!XAUJ`0OH<LP`G6nJZ_"
%qV^OjVc<"1?AqSkQm+LUE,rbDJ;I_/8O68VVM!i+JP?9;"u$A9'OW-r,8[6Wl,RK4^\aY[#9(Fe10%qIgf\6rg)-A1;g-KW`"V]N
%$`+u)_E?cj?8sio\:bTl?:RikQCi(7NTh[3IJSU]nDPUIElP;&m+N=7Jfc2G`g]dGV+$mlcfR6VaP,EH]-lY6S^Dn[4l;VGJ9Ku)
%K=VNZ2ViQ$^8G!V44-a"0nm@rID.XGL*g!N@<`uWoKpQIQqDbX"Mi-5I,T4`-a-[iTmZ?ui&u'RP<Z&V7Wf8[AlK'-;:[F2Ga(',
%/d75SPVV7`SJ?9o3KXG2)X']p.7*a6<)E6%Ti+-1a4OYVo1YqalUj%\82JSin!JFsG'3ddg>eQ<T)W%#:\i@71CnCSR8AdS-Bq03
%gMJ#O_%omIZl)*G'6@R21r76\QgI;5,\f*:%2Lil14>.R3SG7=U?>Qi*'3dt)b8pdRJ?l=lcRsu[G^JsUI[t#%\qFt-eQo'2hK+K
%l?h!*>/PERmc$a/arOXVGK7od;/%L@Q)[K)L3_OtjBN_\ms`XXG'm4e6Z)M9g-'_&mJ_qKb2MFL76>KNaU.s?#G8&%gMJaQ=]A?h
%)%JQ`s3<O=Vk*EUh\lPQ$PH.V!!9^03DVoBi8OU#%_dd0DrT-)"XQD"GcB?i5PE-'q$2<,h#6PTkH>PYeAXcis.nOpkFW-I58Pf!
%/l_gTW;O2&q/`8#k<e:VL!$"qPs6'-IP+7kX:mha`6UL7F.r0&.TClCmWA#EM)n8Rpo81_4)J&EZ6>CW?GcV:IT&=K'$["]hX4tC
%2lSZ]i2tks1iH+AMB:kSJ,S3<ipUfm&]A71pM\db5OIA._kd<IB=mu_S%o!lgWaBGjAE\2%WSI-n]_m:5(7soS%lIhf8]aJq&CKC
%?;H-drD3I:h7NEBDdJ!&m,bj/]D8iQT)["4gUEf--dH)RVrBE*o`!sQJ$t\:(:?qf99QCV'hA1?pqQL_s7mV)j\_*;fA8oDCEWth
%G2',Jq5uX+Z.5l2NZ:3(<D=NapQC;sG.W=,TiXM)j./GMiP\I"^MVWZ5[_Jf6\*!E!M>U.>]*m<\2nNVkRGs&3`tc-5Q/*oBn??1
%hGDB/GuKW$DB=&TSo/C=p7%1^mD[f4l[E'dB'5S*p:],?qJFPq^DZ-VX(1qd9PUao;``=:B7bm82F1*H)[3!G]9I`8&)/M?a=?H@
%8E-)2PqKm$I7d?,nT6@*S\8(YXnCG55g-Un2S8:gfI*nI0seRSiQp*KgY#2NE:OGpHe:AsB"uUQ8o*0tUT%3^%miD5=^:]s"&#2J
%1k$1'<+PMI0hZp7g2LYfo(>8p\!4:-X'LmcF.6$ej79=#["N8lCtNIbF3J'bC?N&_gPXnB/$=?F?L=<9V_a6AmpO0PmbBC2`@c_-
%M;:@<.CdS"[ThAr8+(%QZF@=Q1O_EMV;A*&mEi5rVIK!"MQr5L;pphWiE)^+H45W*_=lqCaWu[2>_7#BV!O0>Km6-N[p$:OA"#WY
%gPn?4\>js58[==k5;_8@MrQ6]ftTK&,.BY*e:n?<"qF<_%d\@m/aMQaAdW!>FPH@mq+>Hi)O*oZ^m8k.9qa^.,4+1YL!(<VlI"tm
%4'oFV=PW;JpKb8EpW1[_MaBPq(%HTkfstVIr-`X*%ZH$'9<tbU2).</`JqK4LfebMLA(b+Gm]eC@fPp"a)0]&+n=f>"aeOd$FQXI
%Aj=_bBT'&js4s7k*n-.N2U5"*3_.c&[l2?O#R5B7DeQk?p=YP.]AG*6*9S[)B(+M,G>k2LYEQZo&3pUt?sZAf*EVUZ-LLNHGkPT6
%Do*t5DJuEOg90sndqi<p=)V".FR4u^qlnQ;cL09="$E,;a07M<?c5IAGG;R"X20U[qf,god-Ou&\X=T-1'[XOI8YsVMb0ln&8X>.
%$#FkE31H]pd&18I-&ubeBoq&\^im39niY9I$LjL(\Rd[>WqKG:g?PsY]Zag(f']it[tC*U[qp-,^hpt3pqrLSK^P4)2!:h-..1ZE
%fuJaG`B!fca%K0I2+[*d6HW.16,=AC)8bg@;?0(@m<uY]';dl=V8Wu"d$]"r2U$L#mDaui`Ac^KdU@:bU%!n_Pkf-QaW8se5%6Gm
%(]ml\J%VTCoo</iWa\RSD00mD=W?4\buMA)O]_brmWC\Rc6,!n:p_1=1_XgTjW3;J&=a9cbV+Qej23]JbLieQ:&tnR4E"L9Qd&9j
%MFS]k`PQ<k&Gg6>]2e'kh-7k,m:]iUm#m@IN'$M%`\9QC5%#9cf4XP+9(iX!ebko#3J5i,ATK\834=*T#W>drZg;e)9Rt4DYkPi#
%N^Gj84E_/l*/;;&H,A(^";=LRbNa-)[(jjA[^4^UdTJ:&1/Fe<iA(g(/>Ll0=VQ6rF4d1P10%;@SY*BB>6(#5ptRb2Fu+2'>Ba-i
%RjKh5fp%l?lERs<:"?Umg5L^ZNtL]LJOtd6D:p91b3$h81\QqZfJ'44&"'W`:s@lZ!M`*b-7,1qocZW<82UXlhV)t[D42WRq8Squ
%_UB$RShLHHVV@^;Kg!Fnrgl?E]i_7j8b#q8N3_K?(+;)ibJTE!B5ko@r+\6EG_chk0Xqp3\aK1N"!<\]rM,n3a5nUX3lnc9jP7p8
%W=>g5Brd^&1PUd(ibr^E5/C*=k/64EoEHc3"U/+^20=ld!Y2I\HgSj2[PODefXKisO#[CTA:Nbn:Vbd^$!p%CTU@`^Z^8keQ^b'r
%C??h2bBQtPq,9t$*(6/eVJZU<70b8O-Gl:_Du)uD"/U7s-D^p81u+9(2Ysdt)SbmB[&./Sd$XQJ\54M#(lT>V4lddJg3MOY>)[$6
%nMgUc4@3!=746P`U[bKsHfthiVfnlkDCRcr$r>B%D;XQSf[ES<#@Iumkf5b>2-Z)FdJbKK)B:%:m+<D3_I73>FgIElj3/,Wa3Dk`
%%AZ8%;GbWVR"/5&a5JP6Wk$P"cYgp<Aseel?O26t[dM07G,(74752O9bT00.!u%gML-5YTi^#7F7d:IjH#QNLq[,k:`SK9.oZ,(B
%"<hH#U@!rbU-5s&A+.i#ZUlo6p/o:Ugf1YuVK%.(/%#31TdpZ4kjrXMO.Rs[Z_;+pNe!?`Y/82IorL')/-:djd+E.fQOuZKR;!GY
%^n?pN0iEa1"urnO5$sF>!Fa$tfs]QImF<m'9TV65D@1^@@2=Z>7NS\=)[To1bpuJ,H>sp:*#%\Z:p?GO:uF`Mn#j5HdO[R"L^HlT
%pmNl\B3Ail<2%R:3>CVt%eI:P)ko_>!j.kkKKrVFn]b3Um:MAH`AC&j1ur%C=5)>o6meRqP2+\;ieW/V^s$/Tc]8BRLFKF_IT_[>
%Uck1rXT#1BT[sAK<AVJbgIj@hKp0!+Ri#6SeL-)Z2_3%[K390Al;Ib/iI7<oC%gq>].%=J0.dF1D+:%0kCKaiS^P\<QZG+GNd"7Z
%(%8bE[eH0B]H^tf0TR;Ve"jVrU`?%QBEj)s@#iB#$1ql:4bWUkG4pU4C9L;sc;4S4a(?:u`d4+d<,(cna9YQ2NH^&;VW.5m%Y8?7
%^1Q:L*?Ic*krDQPm)"dKc.t9p]0a,V[<=m(A&BYa!J_fP!%hWu6Ak+6"8S+%nqmDZ;c7;+=l588h`mYl-#iSCVYM1i-(lJ:^GC-@
%4YW/[V;S,YAe"ub-8iPB!?L28#iI=3`CHi>i9OUfQ**')Y^tPCkBZ8!;h,]!Ic4_R;N`8@mQfJ#WQ^p3g#`9qY*_&_846J_!4I[X
%jrF!s%_FPKB@G5o*^)t0Estb)XNP&-AMYCKk.no$^n_VHFC,V1bY=GAA$=oN=C=ZU^)dEhBp8qHXNKr#1R>0WY/fkGS8%k6[/@G[
%dc$!=cba3<WU)fC)37;g?X47/&"bI'I:R8k,.CG.A(o^IJ+L\8MIA!N6^KLgYb!asB$YH_$S+],\N.!fFjkpo\ls`t=nG^1]2uXO
%*!V0Z_[G8^E>Uhp3a^5g>Sf%F8&>C$&)GCPAqZ#,RuiPE8#f;X@]s0O9[jfVKgn:7402%F1EoGe2_\%dbpEC3Hq1\NHe>WE)CD:I
%@6'I@IWgl9S[ob;#k0:SK!TTeVFM%jG[<7!IncS=):RUU<UXt:r&FIm8@^,q9;_,6('u.;HhBH`c`@t(c)qtMFt^N<k0Xb!<Fk4T
%G\6#pf(KH3&;qPj+f)?qkS>K@\[Katdm3aq/k!:9DMl,':?^/LmCD8*\E;JA7qS&bOkP4,WI<+o(F8BA0BEBc>hWL=l"4*4Qrq'R
%O1-630EAR%iIA#%Jq4dVFA87f&b7nm&0]mbJ'\\`I6h>fK-\-t1.$SI+%`ncI#'Q[bfc\?Au2pH*D0>i9X9BZYJDK^]rE*(@YQ?W
%LP1MH;dQnphRb043BQG%$SKF>4^P*q:;U,VQkqY#M=kbZ^:5nf9,E;9JJY6)0GT-aVs4n(0$@tk@i!K'okBRuADeoq&At80$Re<2
%Ue,Vl?'K=:k"&U&lmK9'pR?+SH]eGk$3P7kFhd2%S(N[-K?-5/"qGH+%`g>QE%ERd1R22/()d<>=-dT5S(_Q+E?!,kjR0?@Su4,T
%L-%,(J2X8#/OD:PL/D;9H,I0X8MfO*#)I`;S#:*HL-^M])-]3/>XD&%>9t``?UrO3KX`20k.)<Q(VC;Q7^sdc+I&7&a6cn<q+Fas
%"#Zb>NXJbN)8cT@*T$L?F1nkr)HW;BR"Ieq$sCR!Uc_2Md5+G-MCu(Vi?fKMn\0(R7MgjE_:Bpk]co[s0t<7FA!<9/2=?ior*i,L
%l^BouGa!)OXLsc]ZWR[*'bYGoEK_V$-_H>O.!PehT624o[_%q^H_GuT,>!F8pRj.`j9>U&?sE:)jA;mMiJp0r>WFQnS>^'ug65J8
%m.33b*Hi+F-(aO<ENVgOQP*UF:AnGh)6,G_!jXS5#A/Fin#DrJ=3/80aYYr9F'(]?!>nRYK1mfbK5uK3Fr>Qd-?SVq0X#Y1n'#4<
%1a>qdBR(t7aQ2*nZuZ_S(LBO:Ecr_Lc#1m'j"*kZ&(4Z[OAH7ODD5>_2C2jGP?X1.cW:j,0R,:E)5-Qt^i@`MjfGEk&&XnNoU6B`
%7"/[aHeC4ZbcEL:?*GOg#&3'jKF1GnW_!QO-pUDU":ath3c7HZ"3!*MOus>h0b]eb((-FOV]_PMeS'f[AYa\BJCKnL2*okA#+Ker
%ZUDM3_\PQ#gcWoP2\!g4aiNMUfN#PE4s0_tTq+b`OK]1a-aur6K4(?q%fqFI3_Z5ZdAsLm7eqn$RMg2UHW[?U_(#1s`b(TrKfU[#
%I+V9Nh!hBQ$oY#Q=VT3Z[kgIkjcCTR@$kZj\l,K'Bte>negceIKPNg[Da&rKNI.2NA9e^#cfK6_*=tcr?F_"2RO2.'6IMs)5FC&=
%N3j0j!;"^e6?lO1Y/6PK,<g`KRmgYg%RW.MlI-6]KFlLhR=K!M$6&1c>8cZbMS[iE.R<P]n/b7g2i^s,H7GpkIN3fR$>XsOi>1>u
%RD<=oT[;_-D#p*V,?JK.S%TqCl\TltM*1uqr(+^gV.NoK.b7RIfe8,&G,&2R%HSEN&dF8)/5fm].eZh.rAY5'&OfsM+uoJh)B:+K
%89UjU=lqc:06qEl`'?3OJH2^D.GA`4"Is(;<<8$C*IL(O",kJiXm"ImXt1Q[=g/4B/!a[W9paXV,U78H(nA[.BenG-hkVNT]dsf!
%6WJ%_1%W1C)9Wl$EI:-`.[-Kd**5Q9KX]!`%YMI+6X^a9.M:pc3L$aic`_UcHh2Ie#GN<g@q>G*h,BeJl#><keCKloZJgF(#*`r0
%(n@VKa*ICrN#q2AM%JZ)k_3T5X>7,Z/<jfC,';u+I6l;J/d*9t;V'nW8U_U0RsbhPS0A(QoGWjtl*DQ:3!N1me*Cl:W[8K,baLV:
%p>DIFGGI=oA^?RQ3$e*+p6.rPl9`*)`sHO*X]rh_E)@`P50X'MbgS(-h7Q4cT4/c[`ukK[*m@*P$W<[5PoI^M+K@'`kP%uWo`T2U
%K9MQ(2G5QMK0qX%nejnd$WT31lW#TKh\ae8cGme06P4]W73T'h"B+M+$;p$ZK6BT%:m?NbUpf^36(B[`k".lQ0HK>'Z).c,J[6EE
%KoTVq3?2]AA3Lm;>#cW6)6AB[b%u]K]/*FI^r/t](5Z2S\a@Eq!lFUc6C%`W9%,/%M`L"G!'<G_%tVL5,-U+\/Ls8++,?,`-)a?d
%cf<PKLe/]N`L^QYr-BbeTH;Fh^<WLn$6e=^O>S]Fn%68+'^[qg#,W-)qWg9,E?I^'F*cOGVZA%H;\ep3!`K1-N[4=sJcn?])W/>n
%(ek<9!dm%l+ijn5;++Oi+Ju#aWZ#:e"WJ4\Q&h%gDU4g`@!OGCq57gTCkHg`C,,h]d:Rrsb"pic'8#=a6-@o"p3<H1(%jOj-/I]O
%dKPDClO0AO\5cR]G%G,$?Tj!8VKp4Z8e(\KN:)Hta9o=/?Yn?U2W^J@7WGk'.DR8N^6ODfTJ06aR?iW%DInF4oAMU(^EAoA_`4nG
%[Ed8*TEmdb@'?G%,_g9l;o*F.mkKrU;j%LLnUXbF<GUTp`B2'eDQE=5E"D(d<hu*ongFku&E=P]&+6lp%mO*<M`554L@T*4<U$BA
%A@jk!Br]egD-s`?;G:`cKdc5=!3U+6@b1.-)CI_`SlZJ#?pnsma'k*E47'd!!1ci8EP'at9T><=T:*`!R5kCf$E?G3[@7>$%,_=4
%3N00t;*mfRBZ'+DG*p/rEWN^fo7O_EAYu>+1,oNBReR$(&+@"VR%+ZS/'*0I5))jl$)'%V=>gYgm+2!\Tb30Qc#nb`TXPU:e91VF
%fg7Y=f?!`D0"C)'Cp)-4j[RatQVFl)q"OPO#SO`QOk@ooelC'?,V.i<Y,I($0W!R/8Rqu<R&KSMGU6nRWGIH[=bsM*CJs(N]B0,$
%$KihdjKX`gb"s<!UYJ7'#<kYUEb#;4fkW)dRC@?%h<:rVWj%J6;RI<**IprV#E,fE*nDSOdNQU-#_><"&%2b26>23=no@ipe3j;'
%V*Eap-5)^^ii99d,Z-\Ea7SCMq5Iqhjj$`a1B3@anq#uqYahHfr3uV($N_-tZqR:h[\4`,\t$]Q6($>LPi)_Yjh_cL">dB8n-r6&
%KELb`P-XGb4.qH[_Sk8pIR`<-mVN51Zq1'((aj?Dr2`#oL'k[Fe>%'4N0FbkXs.e<_:=ED>Lk`gF3J`>]d.)^apG3phgkL7Ge(8c
%r+&geZsM1E<S8H-124Y4"%iOolO?_>VdQ#MN5VsZm)4r2<1>QT+U&;3*5sKhMId+rp^gqec5@T0g_<adi!msWcjjWsk3ZS.cVht;
%gd[GKn.)9a2lSY(*]Y6r&[didir]>B)[PB=;ZKIB/19HD=-8IR/gL0pOe>&kZP4^Dn<k,NfoSl8\:AsrrL8(0KUT]4@]/"HbhnkP
%F+CD5.9D&FkXcTbkRk8>9HY:U!O=-W+iL7LE_2g^]5lOD29^HY;;_r.%W8:L+,:F?kKqN8H!@pI=rgk-_f/O8h=#@sNJog=7mP"H
%l'2<0lDUoNR!"17SMhsQKqE<nAlEN.Rn&4S?LaVb^8Ij?M<>oWQn4g0aGOGLhM%bY=#UFk.]5r]Uh9WTh2#G?FE4Q9&5AGr#6kLb
%76/&(>Uqi#"(^hR:)@fsgd4ge^CXcF3c),.MdMgmFoX>'(jS[oK+>DINOTk[mtZ$*igQ$?HKb"#96*RFpXCA+k13:H62[#N(@H\H
%]HkKWVnDGh+mf52DA8mk)*j$qMK;lg/oGeS@(Mq]<=eDdIO%P*9S*dc$#O]:>K8`-+iEY3(i1+0H8_G/0LOc/FOT!A\H#'BeGW7(
%@hg"$44jjF%T<'I!8=^=JYF15?%d?$*J]c<*T6Ok_['%gPjWFAo@J]nA4[74\D>)O/k<?mTs.]4[#J0HGWA;:0WfmKdd[qinG[Z"
%AKV+8N$\TCfJ#[*#::VV#Di>3.a,sSm`>L\&53C`aT5QLFqB81</cXQ4<S3%/J4BV\F&N?g+Aol5],pE!>]W4gqD\Mi(,'Pe%;L>
%k'$)7_?jPP<VNZs/k$ZkF\.l[pSIp2i9%K-@RrS#d)r$J5%aoT9Q(9`4O5h/<H$Y>N9@>X!4Eaf/@[&1?+B7_5L=g+=rU-aW6P#Z
%YE"H%#!L''R0V6=Or`t+H6m(q,UU_kF"W"-U7b2!1")^pp_#Mp9f<4,L%W'[l2!)#:`]n0!Jb&/R5]X`D0SCg>h.u)I@Q'!Hd2i,
%)I1X#Am(l35`Gr!-nHKn'g_L<BVan_h.5qq9e3Ft7J-p%:_5i8%E;NT$J+@==:Q-El4[n*9i:0W4D/S)_'d%rr$oi$N/Di"Nkc[f
%J=M0U/n8=4%,2/>#U,s983'&*J9a^7%eB!$<1S7[2:f<][H-92'cE)R(9sn%a40Um.CJJepO2:_gh7If-e0Ck2X#J/m>O-"ItuGW
%Uca(aeCH_qn:@'RV!L:rD>(#+J1aUjl2UD<^\mNu]/O*riT=59pNNfIIIkErhnFSsSY*BZ3Gt2O"CW.hq^T;cYs8X-bLc$:9IV+h
%Aof(0o<Sg/`%2lO*"^$5:pTsU#c"5,o<'/NfT$jq!<oF/0tYc4ZA=CZEdA4XiEo.2jk'`k3VJqAI2'58KjA!hgXZ)l&;M^q7,J\'
%'EhaDfA"Y`HA1$Ioa([?P#oGb*!Css\B/(kO9:*q&qRrm*P#lfKpY+I9%_87UCSWL4TuJPWtk'%IqqUDE;t#p:_4oUaL?_fLOE;H
%1$9ZYOVhFN8,Al$fDJi.:P#C6'fn_)OEYjK%j>>d*.m7DQ8fm)#M4>Da("u5WqTB+^,^O(i%$8?gu_l.:PW?)?Jt;k>:-)l9LY$'
%2G=oB]9p_NI*(M6R=Oe4qdjhE)cIm!4p<nH)SB*3LAiN;*`D74G7FW%9@nSj+U1$0R?''UArPkSp9#SaH6RTVfT)a_)J?X:'a!FG
%+j\$"DpIVX)*g;O@p,-U'qCa[iH6,mXl1Q8L.0=GZZql=g4I;s[rY<X3*:LagfP>q`aLfT9%H36@?5Np=0+kqNerfKZc$?4\d(dS
%nN<3,GFunRYg$O"o@P?3C`PK)33_ndnWo8YKGWb]2jAgRlo\haPnK_3pugpP.0Nsml)OH\h([esIPb\([:D6KckNi@/8$@%qjWXt
%KKb9MSN[4WVOVg6;$N5TFmJ"TpPb+LS8d^PaL^!B&T/i?)-r-0Nh_5_HoU:Z#S6usY*k6hZ/'.rn?ApZoDhD0P`sj$N70^Un5U.[
%7!iS'9^`TO59dH$g%M-Y*UEJ+#*8l.8:I<1!WGDgiH[#(\LQr%"DS"=1,]i^+bq"V!._)9N=kXkY/K-C"oO*;1X/ZpHGY_YZuouS
%/=L;N_T7_Sqe+I#\'98q=76C)ckD1Z'ZRmNaZ7X7Opg#m[*\lp7CR.$<gr;kh,2"D?n,pcj'4X6oJ<g#@AbJt!953o'%N%G=(rFH
%DZDq`_o-_@A)G(-A2>0V%G2X)KZb"%!*J==BiLl,LQKOZbhB=X#G6m)j#e@&3"0H[4rb%,,$BO"E"[Q,_g5b(_n/Bh2b'0t`*;:(
%i3V>D:?KhDibR#d_Hr%9)jC]d3kAHSGVHRp9()"n^]<E";4crLR"^8!A"2m?gSZe[FYoM!7T-8;Z]L&]c9kUG*!M!!<.u1Td27/%
%V%ic]_B943joYm`#"Unh2W.B?,=CQ8.a7\krkOSiPA5$8T\'GV`sEW?E4?R!^EtIVF8-"GkY,Q-FQq`N(2piS=aV2a&opoeD1YlY
%)1<l(>b@/j98Gq1$M8R4[bek5',GRY=X`6M(2qctjFm2)"aM&YiBf(`34/F*&_)U!kCgUc,pgo7%NciBVKh:3^16[sC*Fu@4rn+s
%<`62W!Z!h[Vu1cbd7?fdQNLjZ3D-$jTQp55P:gA<A.gSE"G*Cj1E-pb9HVWPi5Af54A[7uMB$ZP,J:?m9sm=T,@ed7!W\9(5sQ<3
%-,A$>mXc[s-?R#k[Q03h&Nj1A&d/hgSGG9P]R/fo<%t;q03.qc6iZD'!O`HAHYVc`W-^0DTk<3q',1J;1p]sFQf7IJEUX/.$5B69
%NOTFF_sAfn!a"$HZcbMY*"_A4N9'\#rFQ_7"j&`;G[X<4Jq;QK*"h9lNnL\t3"N(LoFeB+FL[=C*1IdUJdD6aa`4nP!rB`B6WQrW
%:C#N7IbRl@8*'i@e:@Wci2OWCMO0ZO0m4%%gsX4/&R-`I"tCV[lEOm-\hL-f*@3:0@7^J#H7rA(b::8:RqX_'4QCfLAB#Rd&$^Dq
%[lj)!#]tV0]SD?Z'@S`;RY9>m.fP(a*CO[=TdC$Ql:2:0JZ!]`!&oLlgh;?rHNoiKbY3>a_`VK:lAES6bq(9u#"KSuX[sb)`"PZ0
%??P023YN4@!Su':Dp)B+(fY17Kb+.aLbZ6@31TpS=G@gKE%/(?\Mf].Nj_/_j,d7:A4(VVFV:)*cmSH^o"#/3inLjX/ncV$\X/^G
%[V@ic48SW$\60sF`27sYe0;;T-:OY6h8Q,hGDVbS:T*6Ks6V4I1F>Y$T9pQ",(#[%+/q,HeK0)Z=o"fQ]ioXnc!j;uHD[u?o5f(V
%!+?e;*[!r6e2PdZjF#86ND2ZH86Mtu?D9\JZGK'T$31abQW=A_!VON:/Q<E@VK<f\NtX8#:aO)%Gu`-I1AuOpiH\1:`GFD2ijS\,
%5+YYs__GfrAXIaU5)LY16o$'\6=uPY0ulOOPVnR'KiOYG()8dg,qBRIA/kX?.p7:cWsQL.g:'..7O\]"r7`MDK?LDGnn;#U\ihp,
%Z9V#`;,:9LN@D\0K6/Y2oqHOV=]AeHb>9=kY/XOMU,.:CT<WWCa$!8G!8b'.IQ@rPC73q?]mI3q"9_o$Ri0oAiaoA>M%5$89F'N6
%G<q*f*8)a$0k0j9QnSJa?HAo[87KKqaD9Z*&)8BZNQiDDI?a2Xs4Zs9:>LV,Bg]+B#Z0/ih?CM$;`$P0qe.@"6W6^>S!YgtZYT>5
%?/7!T@F/g[,5*8>OOXXgd"I>)m[l,4hm09HL3m@_@eLT"[!9$golH]H73.%<\1(Umi\1K@f\$E/ME;BN`#>FOHc\E&mXmk<Q_Q9N
%?*M@N0hX:QX@'s/[#%>i"pnFgP/K^&Vl%gLnCbH/O7QFFhWRd:6IKik`D]V!3)6p05Y(pQ#5%-cIp/59_tN>8>q?=/&s(96$DjW4
%,B2Dek955PHT4H>I_Z9:_#fZpPBVl7hOS%pJ=T_AL/&dFk,@LLLE7*0[6Ar6$j,^<P"W-AA"j!`M:EP4GW0U+X0r<B.,G$h%Si0N
%+tA^6g)QuSSW>5#].?QnbC(Vs%/Z-@g,3TYfh>?cik#eqJ"D)hF:mTP.o6d2f9C[6TqJI$nD*-)>iP&#Qr7m&SJgX-NcrR:&6Vdf
%<:SN+dXS%,+8?cJW`N=sW4r.I]@7i!b@E'<9,e:7ghhbWb3FhhJc6+U<u6XY*E2L]Wj=a7O=nea7thZBcs:P<adPWb2$N??J0eV5
%_fZfY%;<r=SVINqLc6c][%=nrrrGstN-%r7Na/lRl'\P;WCHCs$2V!bJf\`L$uHZCK22N;ScgK/_S;4BKQk+2msEg&eWUtWrPSiY
%&Ho)>@ka1,ZaULMU=W0!&^JZM&VY-Mmm.hCZ352bFE(0]7*PoF#R_Th@coA\3Bf:BP8VqnO%(TE@KF4PJQMgN^oR.\D0CC\C8OF6
%ON@cMG-o?"-=Z`TC%41A?nWocEdt$E"8S!$2j+eHlR:&i_`KSUG@[`"GG>/(#3T+h$WQU,\o`ujdr`B=pC_OV,'*B'E8P3Qo3$G!
%Ga,1`-A5-L@+<A./d9aV)NVLGQ2O+A%@[HB:HLiJgs7e$m[soFh'RM!<@`a,?\7YJ10`23qc&9f.ko?q3o5TiO,SH=&`_Ig&outA
%$@m@A=UZYlA7X`'IV]Ucd;[H4ifIj/9mr)4?I+DBO#,$GB-O-:o!.QkScJ6iAA%u)&QrRH:['2#Sk-^5PW[E'LgW\_CrW?Ra\:gt
%`M!uu&`8JsC+?UVY#s=gKP5u9(p286"hId_JB5Yb@[eA`dsL"lSqEl^*>[.mQn/B,)^?HcgGgi]+21Fg/6j>T;d]],#/*Hc2'=;&
%k6tlKG9u(5GkER6=hiqe5*(>!6F%Yn"T^d+i>q%G350,u0p/f/%_"e4]rZ'5kiaD:4X>@+!XkSV[9$E)O-kJi3l1QkUkci0quN@^
%%:TK21P.DROG6\<+FBdU'Acs&L/5j3aAB^E+>$2FFg6):'.!1J_n!K.QM@1S-JEK9Vs13^qmVUf0$ofo1eSB^Ae=QB-:6XOQoq"8
%5'N%-D--&&g`;>8dLh5P%7U"6AF52Q%IG!RO2I[UcG4C@(D4O04=<Z_(lA!S<`bW-+%K]2#r"Q'hJ,J%Y]?6)O2tVlhD*-#%Ra,p
%>$[bQdC!'jZZh\TFujhAKIep+6bp4E#(I]RYL*Km4sQ"g]i5]m3"KjIi/h<eM*=I)($$4QTD!8V+*mU-p"q![&m]*L<L94DZjFs]
%eoi%Un$d8Y+?`RXP4R1B(RdI:45(:*3j]!W@Pq6U;dTQrYFM^$nl!Np\QL$].KD8TkYHc%H;T7:&>a,Bs4.7eO<$p2+@D^\OO-YQ
%4K]o/6ZF:aK%0]hU`?gbHN.[7&J[S*Okb>-@6K,9i]t-BWe8C68)8#Cdce6ro^J&+AjRpG<+l*ZPC8,&ps6_SoXD$=HN!F5ld%c&
%,Q(L_hsi@,^A7?KLUUXhgS\uiOmL,<p?q<,?Tl1#]_U*MhYc40Kn"QmI/F'qO.Z#5,LJUIEb.MUkY4V$3FEno1C)_jE`Si:!'f&&
%rj]c()>dl-DTU5kjN$b(JQk-U+!WB[AM!+VKXQ'c`I*U]N&A7(nM*;MA3=tj@r11CKD$/:F>_@Na#lmF!RkX?Et=;k0"ge'7X5DY
%V>Eg:_:I[d']F$6_@4?V`-2X^GH,6%*M[+d'1deD'R#R!Ab!T[I$Tr9\&*'7/IAT?>+B*s6?QOcM)hMp.ie1d%]88ie5^^h3j&t&
%Ff&[0D]<Rl9ZPCjg'c@an=X5*Eh[%ZibLT2NfaO/76'lY,86555%ou(TZ[s6</ZPCaQ"/[1#N&2NJ$9$M'mC"*-6IV`c"Q0S-Q_^
%:.*`p?oQ*Ug0UD6)`JJdB`>tf%,>G\r"e)-#jfJjEMbW(;!VRKhOOXo&K;CV=.[eX,??4QX5`d*]25h"C5dGlqhG^^MUVAb%n>SC
%:CPYgE7*?^,rCW7/a"oZK,e`Scl)SN2S612_^/=mf#`mJn<bl=N-k5hoJ;bPpZ+gu)-[Zi<)!oA:N+grn/.q(F9j85FHUJs^D/<>
%fM:JL@>n^Kr@JB:l&>bi?jpr]rq_>aGjHo:#(J?s21jGQ0?1[Md^ZLt"&+G7,KPer-k$1ijMdW7acgolKAPCI%J!uRPKlKgo&9h"
%]9!gBogUDtD`Z]2f<8?`[Y_[;(G`4#+`;68j7OWC)r/CJF0O_RVCnGMF:%)=NGMG.3cd#gE?rg^bf,aj\d4$6T_#B@_QllVGo,aT
%l4$W2c<O$jB-3J8R,,Cd(Jdi&#&c6;/r3bQ'J14:>/-49:\B5CAT:+6_,rf_7s,t+L(Jtfpkk3,5YaK+MK'`_.;m`l>qW:D'k84+
%@L_NRn9ouNSu@MoU?U5E;_aQY[+L4m0qH0Q^@2hh-5P!2ckNr<9&H9jDGGb'@4?((=U^U*E'.Ni#"^Nt*jB1mKql/'?7dR_dJ/YN
%"[t/S2pmI'S;!o$$ilN_TU5`U1)<)/r!I]FB6n%XFJZ7pM0DrJK:<]<G3I8+S!\WDHOae"^o)Q"B]eoXNsd[^orb,6-3f61=1\Nr
%)<;[ja-Dr--%d\)A""g-,ODNb;IXHd&RHRTS7!lV8n-@PJGBj'ENSL;]atem2k7]SN5R[OY+:Ri4r5!&]s&))XI:HVLpKlM_+":W
%R60u2%V`p>54X/6,"D//!(c)m#1!J]LM<IY"`-3J&-o7*YRn-7-jDcIIN4UFqkL!t3P[L#LiF`(r]@N,6Sgs(VDA6-4$r'q;p<O!
%1:*rq''40;+D:CV[,`Gu%e=&8[d.cB#DiLa#/p&U4PW'sG+rF#b<\K(2mnN<pg>*Hb;=715rstlSLeU"-"*50Wb9I_PlJQ7)iVZS
%[:jq"PMk.Wo*qI'&//*k%9r0fhQL<+DTENlnamqC7b&Mc6?!Bda`nV5Ykf6+3'8fe_si$2D?eKBC^`rac81F:j'u>-L7<E/Jn,]E
%41O^p1#1,EQ.qR5(dakHBW&'Diu\EAYU]=g/drh]"KbEO$ofEM7rSigT*F@B(M[AX5]O]e/.?db9R.3X='qEU_CJ<U`E!eW0Mi;*
%,>.P1)IOEN$`Pg^/CEl(SAG[TE48Rk$kcAHmPCUlE-%l<`@+F&cdil*0Xe7Y`.^uH:Jp3WST%Vm1!##f9PIQXiDQK+c6S?([[E@K
%,[?5`b(W>&e[mAQFt3#7@Y$rY]OR5oGpO%locoeL")rqP@8I5Je:]TL;$`ZbP&j#"_O(]'WSB/2)7e=2oYI"tpK6du#T^@&O9]^(
%Vd?od6#,$K5omUpd3=C!2k%JhD(t*)UqM@;)#-g!,`=Oi10h>.#(u^fo>[L5hUK3J(k\a=R]_=[W8_ZBnHGZuW%PC6lq#":`/CWF
%5&,$?F/P03Wo,<cl'3^-b=4(X@!)&bGRL,$fY5]8LG2h^Vm6EMrsJm/`9_,s?o47&$m^!^n=]V=nQ]l,9Fr2\i!2`8'@+5RJR.@i
%m(egMm(18h5rSe!-FeUc#1OR)#PN1HTn44#3#$Oo#<2-AQs1G0DIAE)O]ab+n0b`Ik\H_0G[hD,.T^e$FMngU''-jt_b+:k^e@J3
%G,5BIV^2&*S/KuOL:2(6"#D,ScZk"XZslE+>oDir=Q9Zj?s!l8<\CbpGboLeU;pXd4h!*GFAXuo5+]"\Mm"ZPUqiI`p&uftdPk`B
%.=mVX"slkq!X$uj/mT%j_]!Bh,8WOO9K7P]"W]:a(t^AS9gVB=Q#\/QcG#7(EriW5S+Hp%!FQk<l\,X)Hds^(J5P_M4d/60S'jc=
%)IPOBkfjPT@(^4t\s5_i<"eGd$OLbXK*)rMQ8-hI!9RK/HcZR%%p0Oq-5_8a<If&t!atqt>\%IKi8Qc*i;YCck8s915QD?_F_\c<
%=#]Cf:AtV6JP#PIah]E"J+$)0$i^>F.%#KmnN[s4UqR;;"<;f$rhZr.%O!@[-g'==^+fR>Tel^,9HA7.inrp:mbnBq,OOi1BB!:#
%F>=X#DlVYf[YTD6R$[ruS;;Ynn`'*`rl'>f(Bj7]<`@I>*>d^BM?tsIp0L9hPmQI-`!4=H59p.28qS5G3-+c`(VIMIn9-Fs^Sq>D
%GOYTh\CIS-<1tJb".6+smk:Zu"Yp_Z090"c,^=f1A_Vj\pjh<h/.,MBrP_!Uf9b^En/n`P?"e`,p05^+qo]3iL+-ecq5`RuaTkaH
%*o9@'[(i\oD/C?$^\g>RU_h`lPc@[rF4t!6.htm4p/``Z'&8oKQR+[Z>+P>Q9X@D*3U8>b%q(Rm_YT0@#`B_)^UPSTl@S\q-Y9UX
%6Mm6m:^[Kp04A$0Wt!ci8uV=thHq<RfUDF2;F1XunGYbkmYrac0*u]*#>"`M]I;OK(@a'LMl[beH%/tre$sGX?`&l`N:W/lRfdFZ
%`4o][.#n?rA.9GL6:QV$(X&"VZ+MmYmqgBjl_M;NXg`rS(FNZF`L664q&k.E+T,g)978)2q27a?g$Z`Q4/]jcT_tA&OUT)$Mm>`k
%UA]`6(YM@-K*UB(E9PR+qh9RUoG>*rOWBAsCqgO;PL7L$UNU\>qF)?MlNbllo5hn&:%Uif"$*PY^O0pNI"U^NT5]$M:CG8ZANqhA
%^QZ@!:@jB;(_^[[o8@I1c"E>LaGS&aRGl!hR#?*I?h0e+m7Qo<2J6h6MI.^nWE2s%`p>)pb;70lm2G5pKB&;:SlojlpuT]9D_<$E
%9]PlQ."8]9QSBn;.<'%[KAorYT[jpuYA,mM08a+;EPU:IU%lT4e+X0+?T&g2+qKQ<4GgRHcP4-!TE9Cqi:r#FkK%Y'?bR?M%A$.?
%.E*"i,en.>8%q&UIN`+li^32DBlF1C)Lu+W<KR,V^btB%,el`c!hg8Q^Kf]n.>KMQ"'>sc='SjVL$,i/"j8QC@q2IDr2-,6\e+g,
%b.:%Rr<DUe4MQ_08E3>6$R&B161[_MB(hnnV1<@\S9]Qlb=,h*4MP'V@ICu'MlJgTfS/K);?dTHo*YRj=b>h'!d;/IR=6Hi<tS-@
%4:sY/S`pplG._(II^t=>Sg'PNeJWs2B6C9DWuYH4I^P^"?5D!C<[-P!*_a=6FVcFg4d^\TobQMq0HScDQ_!?,gJmVtd4_=G1l6"7
%M".3#K"R']bl8KN?U;W:l5dg+E*Xjd!Q"B>d,,Y2?TN]UVbZlB(Zh%f-i-90JGsO3qLr%=Y9<[q`2>79qPAl@JIBkD=pn.dcS*U5
%Wla2p"n$k8Dh:&qIds*%`e*B?ZaK);cA2]ALm>gbd4`mM^pXBl0+Lro?h"!QAV^ZP_Xe/&^@N.&cS&6k!6=$n:!M9%^%2*,9dn5K
%T[cS9$A.;#^NA=(3HO?YV3J]#nGGo<[iq[<"1S:E'#;_/K#8Zu^ET#cD%Z``mLi1[7))WP\R12B.>?dt7)(]C!STj3$N[0-$dgV#
%pd<g?,15)6E^#;.-0Y"ooS`%?_Au%Z*$lg#Ut^U6_[531^`?$qkXZ#K?e.ei=rb71:h).[VI(0!06C(tOs'h]SEG*OmFfXIjqknZ
%q07\g@>.2s^OR?Bb<0kDE`k`*OdXAHSbpV)_<1+K9(:"]QW6j)Y@Dd6?>&]Fikk(jqj%'=Cg/Loe.HS)OSd&kRG<#.SD8>`ll;h7
%+L5RFd[AguHS>'G8UT"'lg($Q<o4HKVm"o=E>-X^4#[(\B(R,#Fru[WA+N<L_Z>KJcs6?nLNc)jT.eKJnm0W<N_O89@Irm#]MXdd
%G/jRfQS1<886'o3ng1JT/W7`;gSleL?R36l+>,dj&45W6`Y[CVQsfGQ7[u<MB+j+9H"GJsI$"M$2(U_7R1mp29&[Co2\?J4(k3YZ
%%L1f3.mKO1HpPr`ca*=mZ(qt(GsU?"B0cpNm(JX?kEr)^*!8TPE;+rYWG,qUKu=,_=P;G<mR;+Qp$0K/i#M'n?$Uc'Gsj`te+TM@
%X@3UfHG\B&kuZ;>Y'eCs>]KJ3IpddGgaRSi*uQTfSf)m#1Z1*2_VX*Y`o-//"WK-lB=_D-]>6Ti>;'4?TP%$NH^s08e[sBbFfO;#
%;1)S8gPL5Bn%np_YNN^#b5$6O/:qnSklhhs9r#GO<6u@"]hU#"@H]$1#8mALYd"N/2$eM\5iff.4.H^=piuo.B.K=to7Cou<rBh[
%4-`HFjLbb(\T3Ha:WN0sRWllDR2:62,bmL6nP%#rBmHV?m0"pmi]60DE,I-l]<soV_9*.b5gr>]&V\XC<aGt[::GRRbS6RGD!)'G
%"F.1&G$hM\@h1n@c`FdHk\-E;Po%_Z&WJ$).YlX=0:]\2\54^b:0uf+VS.ANYH/e@$R[V+$TrBIo#e?OT<SL7I#[(m-h$UYJs-uP
%QGA*9QNFUBT/h2]U@IB:PF"*?>WC"hGs?7G*gZis+3DXJ9HD?sKp.j$QMmA<=8BJV(BlIuEb+H"F7M*L!gb8oH-)Mkdu0E63`X%N
%Or'2)\3DBe=)8bFX@TNL2S;lWC/mrQ3M&\3#/[rlLV"O]H:],<o1)XJ7e//KH.hnI]=Tcf149?)$q=Q8(D+"Y,;6AJXJVU-H'_b"
%N4`+\N3QdO4k@;+1\.-68mcj]+W,LHOjX#jOI$OUWlhWW4%P7!q]b)aGX0Q-]S&FW7LqglOg2=!#^Pqd))GP(H-r::\25%Jd:5Th
%3Aph3XdjF*iruI*)8U%bi6Q!MEI;;-?_ZaX`lhm"RnfK5=&<)&Y+5]6bHt"\10t8Y'eF_VcQcJtkgRbi*9W`L=4ojI_Kbh)(<a+B
%NgFI]S?@7P8G"$N#s-r%p+=pAff>5YQ&O>J\=ADbO5L5*IHkQN]C>;V<n+EH>[I0Eg0in,4tJ<3]E$TH@7lrDmKBCQ_:rI:[5.o'
%pP!sGJ@B`@fQCak$AXl;BDPo8`;t<)m(5>!bUkF??*]+.rCXd3JgYT'3;G0DTPA8#H^B[frQ;dba-mnjhVFUG$.dqgMi8J#?%Pql
%`67F0Q70jiqq!;u9l)m-b$D/UNI%-Om]o,ANCC?]*T_G&gEdVCp-lHKjWadT$+=-dLpm5?D&7aOb%j;OMhka_F)gSV)eemPeLghU
%>e.Y<G.Be7)N/8F`3ApWZA\-Ie5Cp0\"U?S1$esr"4[4%?l-]:p;O3CpeGUQdGtAcK:qADY1o=<RYtF[Bt_pC0m;U;b,gLbH=GBp
%rI`rgU-n+o78"*[g1OSp0QqDX(MD98^+aMflCo:)7+)lH>mQQb$Vk"&eO^>@?j=tLcA]>"]*$jSKY#Et)$?Z?6A;-;F:S!`4R\e_
%dHMi=K&-^$/m<!ecFAu#:61Hf96^6\9L5K_\2*=Ac;_A?_BN>/9Y/#@,G5Pk?/VoKju`1u##IBpFJn<IK1-U2EM:@GbCT^80N`EA
%Euu[=_a42:%UCnE16-Jeh<Aa56(pA'JUCnQ75]Z6Ys"9&hWQ"7gdRcV@F1hb"$[WE'<+^t>R\2;U1Ypj6(uJ5dc!t*KeB6NB)I6I
%2oVd1B+!JTA:&Fi\P3JB?$7bAl$D=8,mONn0$^06i[bmSG7Ip/MJKnGkgDcW\fUh6!T]d!:<TM@*4mF;p(Odr:/<rV8T\Sr([i'L
%8G3hFF4)5J]Ut]lpAj,F-]2.+\T>b/?V[5Oj&j:2Yii</ZRR+ho%`KC]0V:SXIMA=#Bd2<,$I1tLkWHCg^Wi0UVLt`c_Um8Nef_"
%&MA&dbSn]P_-V1k^h(A:Yl<H7JYS#5GGPM_HM51+>%9"[F4D'`e'6mtV1`qU([bNLJO'q(\U8;)PKo`2[P-FHbTi>?^q"O:aunhG
%c=JT0MTkc^"LNGR)Vhk7!(OB+F6P35'DL"(#q$+@@Sl53q9Pm'"'CL&MO8]#l<N1FWJ`bq`Ng&kSBHWjR+Mdf/u9QQl[*GcC7I;N
%Ae(U%_OO9V:cu9oDSJ956(A;`n*\&_bK(ClmaSd8?QbRAl<Kd:Og!!>$rlcVJiOVScKR-PF&hTYo?*RrJe!2-@*VdF4f?8iMp_T4
%l@h<d/1Kq#E:-s:(]jncY"B%<^N/KMCOn<AE9C+q`0Ir7Y=,`JF"V3RHJpHUnP^$$0]uo+k,nC`F"U9,9IU0e/k^](ae6QUCo<ej
%FM2oR<&n<4_9:b?#u7"Kg'\YW6C\E4bB\-Y_7E&74.((d-=Z-%_OO9U2oMf6S-o@=RDGCd!W82jF"WlBW`%Eb4-1?eNe0(Mni1gi
%S=+F3ES7`Nk$57q=*HX2C&jTO7lKtWS?"-n<Yfa/n%6\Wd+V(1H.FUl\WH)scCC@ro,]/icD:LQhM!s+;?H6;3L@AJ/N@f(c^^L9
%p7MEfk`1L8-SWFc-LNb$F-kfOSpO#!4Vt#/DBih7'@G:*>hO0qb@T+<m?Tp3$23.AE+[F%dU:Bq6'2rL\Y5K/o%[4=`LG%'CICJ)
%S'-\X<\cY-JeUt*EuNCRV]hQ:g0E4IMDCPhB*X^9l2rk#E$KSi[(6)d*6\e//h+anr.6koj[$#[)I\!dY-J^Z0'O64c4]3_Kk^pf
%&\PXo>$fiF0-=*V4?.=52G#&/`46H+-b9lP6:tp-0]u?l$ePeQ"T]"uBBEI5DE*0lSBIpNj>Z0,Phd/0^+ea0;_)2ibdh7MkZU5P
%@&E:MMAPD[@MuJ=lnu_f1BB/o>c8_\s12+k6JQ&D&0e?'WGbYs;SiM2KfYQ5,U$_qk7[=*!dRW*66[9$_44/ZPVlTVcDAiZAscuO
%,qb3/!%6pa-!\[)S>iBhBr_c$pI4qf$Zdr=dOo1XKn(K"`LP+W7*BmgcD?n8.[Y9G]f)BR=+h>lB(/E`9,&N7^d4M!W/=-O,%m49
%8a4BgbH*C)I;nAT4d=;B-cP0Qi3T&dEuFMD6TB^?,1ma!i'Nr\8=dq[Mj*oK\tUm-mZ[YUGlMU','h4c2HLppBsHg;a_-hRUq'#4
%,Mde,bh\Q%=HpA.!9B%mGGtQA8sjD2/p^de$:#X`b;`eqLh/'^Cq5?+p[^,1NE/?1lhK!\<A(j.d1tVZ$S7tqMAKVg.]_EO+j'ti
%*#&QOP`)me\r22l()4PLXB]FZ+Tu+7=E9N+grA?p710-bKe=(MJ=m^]*[uhKCelYk.>D)DUUBGTO@uT^)]QVS$]mNu(@1C=*G1g]
%,'.63L4EbcK"-.4^%]'g,&i^4qa?GP`"3\*QaJD9E1kn0R;pEqQ.F9g\8X;\iXBJ=j\gJ1=erQ8(p)J:`edoW!"4\t(PqfTh@+<)
%JH5MF.jH[BW'pn60$XP]q]`s178)!6q/?]W+NS$07;3NS@%f;'Jt"-6jhe,>"`mQ"1;u/p@_tS':KE*(&MEVpoq9,iUQ$U6Pm'GI
%^6,AU`'O_QBKLeJ(C*[?Z?XN$e$>kf#$c7eo#j#o0"DT+f/Wd^J/M1g1]8mJ17:c=WEC:@%4&fBr"dR'f8r4<L*>Bq&t;hWU(;Fp
%hKJ@9]Wg7e2D5qXP3sk<6$\Au8F:Do]EKo8X#F!`RTQA,mm21+(g.V!m(mn(7jPXJe(s!uE"mR-'Ih2#`<_MI(O80K=0b0.&pbRV
%lB\:FdB60P&Aka[U>'@Y%\?m*r3>D>RHBf.=d6L"DHB?0PM?plj1^W1!dU/%Ijt-p(2IYB-uP17Kuq"^gldjGbscTp2*:khn_af0
%D2^!Y/VN=i%X)&QFJ-GsaDGpnjCGaC.nA//."S&"L!,`O=j4<f!NXOkD2F)LT#,2Y6%+>^jK,e7$c%I&88TM<You)D6&LM0I8JXL
%#e]nRV6g\lRUEMA2E5$5d2&4e8mDX=nOh`?#+obc*?3s"/a0%(nNO;4U?RLDE,$Z75.TdoAW*E8%)`O=/__;-VXLebMZET>A;a(E
%hQJcEW+Wu]#E:=D6,XBe[b+&nc%X(o=#FbH%bp7U,RW9qoCIpW(3LA\+`d_Y7"7;nCSA7+6(I1T9uoRRg>"B'Z<lhW[E(>DV7Vi@
%C.79,E7\.aU)qgl0P4fWA$0\.'3`>^a_+T9XbB[&FJZ)[>_,$if%NE,5"KHDBC_22S@'K/+Q'k2efm*l"LVJVHM:>'M69lUT>ajc
%*MDG'[FlLnY%4r;ADliW>d]TE>u\3W2L*MHbI':p5uan1A^T#]-K,RRRTa75kD?#NHHR$HS>;GfTCRr9[`HJqMV@E<G;.OPq75$+
%5qTkoHXHEPLcq2-4;L"1qOk:hS=N^IUHqZ0\GTtHDHb8@m#\l!dfMfY1*,PT7=rsSm2!?G@kY(Ac\%`'fmAj0O5T>"S)PnF5l/8N
%roniLfMi:C$TTfc$;dGSV@BQ*TVb-aD7"V#VF=l'#:kUEd39'52L&r*2]uF?Bjm[3!2<5[0Ng.&IMlsGrVD=5=r&bi:su(5#oI>0
%dZTu/Y?+'EjrL"TPQiKM/7S+mJk*e\A-X(@8E+"`+[U*l%F.BMp)f'J*E9BW@aYN3g?C+93"mlg4(1*%7't%*,DZUH>4_hMDjJs0
%85*c)=D5`O'3DEb%Z`K"?FG3gn\RSM"Q!,8#),-t&pAF*g=X+nd"X4[BY.3>#-hugAs`u)/5W*8XLN3p3A3Z^]=-&@ZQTbBg$WRT
%@%Qc26uaBA"`Cc+NE-AB-9ieiB=gNZ0<DM9=#1?7g$XrlTU:G5(EIU.RDIV"ogPEkFuVL/&C(?W(Yl$KEYd??U?//;io%7)V6gk5
%'h[f/2`mPO-g5/t0=V^<Zbr+@^TbrmO-H2OFp*cQ\RqThH`!5@P,)KS*Q-J1$DQ54aH%jtm-k'jd*0e07\=(V"flK@Iek1TV(e7T
%1!>2=?50_Zd_QL*0[.gP.6/^taktkIi0S#I95[gW=YMTSbnTNMe(aU4\LcX805tuOb7<^X$t`XA6.GMj`3QlhY312kPmmfR74X:C
%@]s=Hb+eWb?&BG!=em034J)A_e<U]:ZH"uNPd2N+Ra*<C<9=M`fGO,p3a&+879;!#fb*n=+GoL9WSfC>ZJ\Y)cX9:@m$S*B/-41I
%4sQ3oZcKSQK1D5,,AeDWZJ?*;(Db]lMhj#!=dUW<3YmLP$,jf,Toe)m@IEBQO@@Yk%`@4d?%Okhlld($m-ad1Mo<!c5_bgiA;RPL
%DB;HD]k1'c+]!]`.CtirLFg76D3+@ti5ndX,BNuiKJ;(XP",fl-)OZ>A3B_p3^fkqJUkG](\UsMB`d%qaCA(Q,@.g#a7^W0^2V,e
%TZK(DS2usU<S(PjU*Vs6&^B*_I%Wd*p_t?QX_+91(3(n"(+&%e]Wi3n`KZEB%RJ55"<=-IZsDqBAZ`0l,4fG5)G<hc=VbZ:F)U4"
%-hisVk)B7fS?Z=kMmYbd>r0M2$SG2aOiTVoX2ZLi3@%PB_Q;7eUVFIS'uZN-cSEV)\%'@QkQ\V/opSY]0RAi@1ejXmmS1mO#jBT[
%&*=;jA9Jl9@KK=O6Y:'8:Jh0Q0qAE(P2T+(Lc/%!3n(]=dq,f]'VY$K,cTl04LqtnPeE-j"?;?<OQ%N84=2SO]!<tQ%W8'J:OOsS
%9NG9.&i)Z^/hX<(fB2<;XH@m\4&=k;`)1:+GmXl2"BZ/r>"Fa>F?6dK\`)lZ%t-KB\-*s.B$R8R09H5VCDhlh$^Yqj?prPTrAq>;
%EnQiG7m!^d'$^k5!%oQ%WMiRSJq2Z_>4C1NQ&'4d&G1E.FE'$^ph<jR]$Q&s:<\ISY/q:!'q#oPJimbd?<XlGoPW=gIn<QJC-"nY
%Enn[(c5Tt4f5W!g6+k=j#FoK5Hl+j$(5kFt77KiAk_mn>@RZUto*%<=?6]WpEAOK7h2bf`\nHQO>4K"6ab_?RS)&f+qKgO)_qR\m
%I0?A_esIQgPFi1j*>Y&>p(ObH1^sgH-k&THV6,n"5mcVk)+#Mp3bs&tPp;U_g9/E53>J_B$'`Y2JUrK"'jcJ\01_J)9X"W^`@e*Y
%q"0#p?0t#+%`SaHc0#4eV'&S/('[Z=DhkAtA!f]G1KV#V>d2s!%E%ZY0oZfM^`jBA]K+Xh-,"(a:khio#U\G/766G[r;A7O+pT7m
%--.q*c.>RQA@9TVDi06N83bPLnqcRjp37pmV@cZ>?^:@N]_CRU%:#r4$VJ30B.\Na>ZX/)@#EXo!aI`BLFU6r+TcYdmg(r`o%ITG
%/b0ldD4QLYY*9`He1(s<#$85X`CADB&!Ojf_H@ZrOeeeNOn=X+N`[5fcn&!H^f^B,(+o=&,ra2[Jg7\`E)o/O?EOckOD&3p.'@A9
%RMqUD%+^sMd*OZOHe;$X'l?nJ3f1esI[k_Aj#AD7=D*'tT7n[&N\PqF[/pX%'hIN+IX2]J``.N*T/-3g&M]J5$^;Sdq.bFRa73A$
%9b=ec<?d*`WuH4YMJpp>c%\Kq@=8sK(f/^kK;+Kqla-_B6nsTYJCY@X!=9D;O:85rO\&"XLLt0G!Leu&,D_u5((J8l<q+4V5Y4ic
%eZB]+X8![jl\Fgq*&N-Kq*3M]eVMUGFP&m8=j&!,4#V3lQtAlSZTGgfP-X4f1jFVj?",5U0%+F)M&Al[0N1mcB:<D<8a;o2Cr;*d
%FU5N/&'d0t9a/3VB;_gCg*t+OK^b@]M)<;c5(.&5&("_L65C_pchZC^M[]Ddr?4\qfF9Y;B/6Q5R;`8`dm2ic&'s#c"MtR7JpJ.J
%#\4#P,d!ZN0s1>g&!*Xj'!<7+9)u(h$+VFVJGC<.n:#um/n5YKCN(5DLqNNsY]VQQI25V9*X!ohEaFspaEP?2P\'&R&na8<9Dm?2
%42k6$I?EOKF(Z[f/=)O6\?&3SeUbkb4h+6C=(^<!V;FECSe-NS/FC9(KleGD-j9*bJ]g:T1'tWG'U/4k')'@s$A9H>,kR1V)"ut9
%BR+/;T!UtRfQJfJk>IpW'5V^k/kXpjC;+B)g(@IlTe*2WMoA#M,]%.BH'mNShF1mCA&5!>a?%Y4iNfXp``C5[`;/^X]Xaa<0#s$\
%#:n/(P%Y8KkaLYUVV-)]Y'%lubENYh^6fE(J\fAO0SFih0!SO2Ys:YA:)ZD5B[4,6OppmQ/T4fT+;dqFI9J01NYoEL--kM.>_1%.
%/@aFU$e/SCpW7R/MD#oIID%2CF*rU"FH%jF*?j?1e=3=q,a\`JpAFDNIQst9]G=A^h*JHUV@):]6XUD,M(?K/*GjEBk'IptNT[##
%2C4=#qbWai=)c[kAj`iJ3`M/+<qoD@:sULj!#f&=<GR4QdZ2DBa5TC3R'*)tmBPLLN!%nGh5aim&TiipLWWZ*hMgZKYdt>3-'rNB
%QtM&tm>#Q\/5dWgcVVQ6l'@7`!`$_7?e0V4[tT2\cFJunGR8FY23rs%"%*uk=MS.e"*PJ2l3pJ-91&Ni.?254#nfT<r>7INL%hfu
%=B(iu5I!'U&S0/chY'X,mKU#mWb%^)3NO4p#SY@l(k?)0*3`)K,$%^/4a+aVMOZ5Eki9+;Ys%uo$e^j"o^RW''n$Q97nM?$'SOPH
%egO&e$V5EgeY'!<IQ\.alIJ!bHAj+.7fdNfU6$?TKJ%SqN@LdT6UlaE<O%,t)BL+h1ld.I'8&W'bW=E=7A1f^3;%S(74ZMBE;9T"
%JWS?rn.$`s#r&2/EEHVE6$Z=`S$V)\,n(jtguDiom*Asr]G?dh[9T<sbE@g4M"%X)#0ObfId$2XPMcUq"9h1?1nSus,Xm*KIcM,g
%#9bn:b_':XL/^$;\JscG=8_RZNZE>KU<q4QM>\\3,0#ZPBld$edM;<c)#]DaQhH">#%!(7dk3&.(2DF[/q"i4/Cljj_H5a![=^i^
%49,*@G0f]iUGiL"_Di[\(Qs*Ko;J(8VjkD0QIb6=L[)UFMIIBLdDH<CFcDDBEVi*4'#'%SFS8`\`Aha$,$`a2IlVi(J;hrR)nqh:
%@HbNK&IofM&Ka"PN);o^R7^2JUJ`D0&jMUtL-2iG7=Pp)d$E:dmSZZ#W#Jo0$0f@$9N[G*jVV`(FK_DHA*SCPRj#O`o;[]aq?A%e
%$<me/(:2X7mU^Dq4IR-+c!kjF9;J'"lMj5[RM^&rL89Y,WGr>$nu8pZ;?T$+dH*>1r'd.<'ME_"JQ(jn8Fg';npW-^Y=$hr!>gh3
%R`..@^*>Fh`A<+-i9Rqe(X^"KJ?Ase'-+h#Z'/-LaAD+p/;(=JUjsRYQ<6$e3A')kPaqSBhLMke)@,eu`TSW]0`jUKLELSW"%J[D
%8-Lth3/<VAA_etqVLQ%6&AEBqpkeiBb]EMn&NZW9(kFZb_[j"@!$/D5r3.ZAW'iSLh-`WbmADF9+m))8(G8gP?*)<6]8=[+/PpQ(
%>l\-hgmA$Ydd#pKY"qqpWKK;k&/lP96f(8aPQ<Rn?MY"DRg;K(p0]X;P?Z&&5m1Zi(-Ls#$!cG=F`tH'*4V0408,SC$\M]B.1L]Y
%>fMmfKle-a#cn]fO9!RgOLrSa6,<Ii$>R3TLma+3*(e(3YE6,^$.EnP^cIPk*1;%D>T4"[b(-!F:rRL[R#4!Wk8-9/(s+g_"O.LM
%C/]mm-K5A6/\]4fn"L$S'4T?kn0uGfdT,+u":65B`/Dt7)V-Z_`B!R9`ehID,<"":j!f0E6h=/ZTNZS;5%//o/?kmV4]lj,TOE(U
%Au#8pDtq5JkHZcZ>sLYIi?*]"ib5e79>_J6[gj^^3,^9<3HM>u8-/?m*BKUON9#4flU4-`2A92PHsHBA^bX$PGujI@5qm%=%Nncs
%)WJSWZ[',#lg3P$+M\:s87jmmU]UrYo8PjI6;L/E%WFur9M6!0Z:r%cL.Cp%]pQ3GY&@iUmqO>mgLbJTAJ8QUEA8O]!0MXTs#W#C
%KtNZ^o^MPtA-X?T"-,;cCt.Hnr19#>?I@l%lZ"0N>`^^>aSgW8Jjb:dRtFon=j&qgD/jP0/OmSI#fhhRP"@i;nMBo)-6g"67k'(]
%ZWtG;\Pl=+!?93.Ai]_0=1oB886S^n6<$gmTJFW[+Q7\Xp_#T]i)Q,_K+.eo?mD(g3g6i:Tg@\g/k>h*Z6*k8Ok?L*'cL0b+W3"m
%"&<QbqdqKR%dU2D`=$??P"SL>F(To#FI0KomoG\NAWl,q6;g[jr#P,1f*k^!Ba4uP.iVROCtg\M+mplj%/%:(>fs#Vc4-kneY+5Z
%dNPd\!WCZ>S.E?%l:!<B*U:`<@TD.aQBJT'b-B0E4;hH->8D1\NQW!3bpNRseBDM%Yi9)#C=e;p1Y5%5\D@oA;LipN^8_m#>ni?o
%rAI'I4P/fNO\+raPnQZ28Nr+hd`(`^M8X"^Q5Vij<XPB5FjS^H&:f8Xkpn&UcXrr,`f@tlh=0GN<M`LUaLFfT*_7KURXIT)KmPd-
%P_5=GX:k]G<dk%6R0$X^fuVj5-fR">ElL:RCquL38&??%GnL/%=A]<B*Nh?iBd)-g>t_=7/N_qKF:*SXj=e3#9Od\_q;L0fTf$-G
%-lWmK]N't3mlje@TVR[?be#MV=[6GPjf&Y3GV[,!r[QM7=jR3)DI;un!9q`E05%"'_\jE-g,GddgmfCL#-WbMJXCs'MFjBB65<BR
%_%)(kKbEdXY>,'(]8RuNSNIW84Wo:Xa@irmM`OY#X9&m,(<-IXmZq!H8?/0b?Qp'Uc[FT<)Hu0l[0r9]>E/l.LAP%(Ll;nuXF(St
%UsZ',o-%RC%?B]74RAh?0NCh,%b8]b;fk9MXdHOkE>LpHMaM6Z<S@t+S1)=iSsTVRBZFe>\7"Z^C1.f>iAmoqRXP0%WeKjSN!i6*
%Gn5?SN66N!/*Hgj'PiE[m#rTi@BP-dH`mJrkD"Vj$o.(q:hlR1j+-65/VN-I,YF)t2CBS3_,>>PFak[fa2tSK)=9&^[-g":h[QFj
%L/E&,BZ%C!&Y3^#:uRQBFa%_`</%S,8>e`7-@-gY@GsB<*o+S&QY>Q5PSdg)[@C9boYkV.IP)3D5!/CN*@a/V3gHX`]9?06*iN?\
%]gNI1!!DgX>qrm([NZ-gH>Q8EEE,:qKLk"<2+7D8M2T*K8(+MbnhjkQmLr'1Wpf@+og$A#O1Y$JO!D.#&-FhZE5GGbF]Tc<'%IHc
%;m:pBIEeackmZHkEF0)k61c)Tl0=g"mf*!eE(])qb1g#R,SUr!L_0J-OV\'90^ADQNkNF?_AZ$8,r>!="e]6LF<SX>`.ASQl^%<4
%'(g"'Ll_U5V<(B9/Ah;?gFZBT/+qPW<AaE!n!h%i+5.^r#C&Bf>ibVO'Yj3SUIC7#3%*^_'7(]]c6h*Z5Z0(O81jli:g+9P9BtTK
%R.b4RfT"dpcl$<\%Z.r,-WiItQp'\>UYBi]R$M*T$\u5!J4_lb`d8rF(FDg%("tV^WE5WJ(-RA%L5j06`1m(sA6GDb'GJD9(Ji@m
%&ahcg+.%3rKOC+-X:5'+JmD3sC+-+ObdX6(E[-6FW"t-K2Ch*dAY@nSFc%BP6OBak]cW6D!g\Li-<^g]O;=R_m.6JlP_.?M5SRXi
%8o)+Qp)bnj<iuh4rD`Lp3=8EOUf&_S?*uuW>]m;N@3nh6Ueh]a)@`e-2Po`,[N:p)#KStEO4a[47T(c&P+.h;=PdHU[(?D/%?8"i
%bN:5rn<\&E7;iZ'a5jX&Aa5PYK;>"Joi2Ds3?-aLL^T_G"n>;=HB=YTX1MV@,hS>Qj20WrOEj?9>0CMf"dlrie%6D`+SHg=p7hch
%ft9&5Z)bADfDWkRJsZ^(,gC$h+CX%%4qFrk[Z9-QOTUhOW1f<;+@`$pT$NZsn(1VljZ;Y:9,giNUEbrI-7'p`<0k%;/^0EcA+h)s
%q,W>h;5;qjEMMN8a2a2r=Dh#<EtBKW"M^%]WuZB-=$\77?rB>:$2fdL0VbEWF8n;,39./BEL8''&^"Db7l(3Z+RZQE):k]n%)EJ'
%h2b8Zen[;S5himdWBZ6;K2fD&bk.D]93Ip)+mOYR][<4(R8-EraQW`XchMZZ>*;NLS[A/5G%F!A/>e\t4Db@TP=PEE^Q?gAiBHpf
%g!Z&>3SZ,U8C>Yhl3Ih-S4!R(>TC9)T'DGK.H7O@>+Up/nS2;D"0%tr2@Ro'0P7Es>=9aY\'<\`&Wb$Mc+lCkYpqlTdrY#KN&/R]
%LJ&9O/P2U"AaYlq%=aQ--q1^9_=Y*],9ea%gm.)Vg=A^%=PI>DL&[kWL^Y\_OjDjgLZPQ77oD&t`C\o)/nQ&])AK5W]K61TREr6%
%Uo8NuP5p,pXADu[048EO,"Qc["*j"+UmQ6.UcLM:j/*o#gi!fREJ<0j\rU[+edH>]>]]En-Pe0Zfe9)Zh,Xlk3_`nlVI6H&>_GOc
%%7sfWQjkl&M[DBk?m+.3;^,4D7.tXKH->1M"9h&k$4$eU7*moSB+;=2(1NTL3dcYt0kXj.4L#bfNC07A4>_1X_Wh=J2N64m2p2ML
%;u1L4BP*-7\VN$'i[Ua]*X]GgJ(ToKQDZkJ'pCJILr:!S<u-Dmo5O%A7_X"27?D1.'@Z*[EcC+Po$0#1esu:J+61F#"$WXb=S?D2
%iAGH[3<hBQRi"Hur=g=g1Xi6#-a'>b!N&l\glcUm)E@;_O&PmL<Q!&n]u^r>/6<4^]Xc.>Up%k'(gpX#=]X\NfX_ItX=N-qFqUSq
%;7J'hK2`4T:1lE(gCR7s[TGoC(GsQV3hm^q`%",a(BU9)d`Uj'nE"hR]Oi?r>*jI]gl,dEe_`7MWb`]oLEkWnIN1phVf,J_R))H+
%00up-4Fb4NV]DQkeO('(B"C'eF0_'[F3kRsX'67)Be:!T!u[Z[j9TuQM45uM!m,Z4V.0'.e?o?*B!/WD#+i;N[MBM#V;8JBS5&SF
%k9/nl>,sk8/jUec2;FcO+%('J.D&\T=KNheA2m7)`Dn&^cj8@'n<4iaH;GaV=;o.I),VN0iim2nR)"3u%7\.bQE('AHc3NLEQeb;
%'7Sb![NNsiY!nkslU[^8Lq:es,W)XcR_=#=(i)O-#JqIcML+?A0T&7Md^:9Y5D"l$"/b'G48u1r=2[LO`X$8P<b(hX&3L2j(oa]b
%3X8H-d&M[FO#VMXVFuT-_@=n]U9u-t(#5ADP2b&GWRJ_4k<lYK1/EBBFe-6/YmYO9@ZKTmNW\S'-CSC8P)"jEFB&;sg!g:<1"3I7
%Xnt_o0HEH@r#ur0\9H!._^X8K8gODL#YX:B)J;%Gm]CBFm31l5adi-hL%='Mm)$(^Itb.^JGh0D7Al5W#lli&&E!j?>^7,0fY-,Z
%W?KUU_U]+l!N+AboV.-FM9B8o-\OmO:1&p9eIUL>RE%3c!5)!*ebufaeOj+Lk^dH[c-%?eO];q;00589nM8b^pHYP!8kYC^'%;ia
%ircaFSYU433'"::8U28%*7g:>!$l,VGG7($Nrt1<:Xp9I??M-"1^=705'rb45>1=cZcZ%Lgd`o[>b%>uT3/gC@1O]/=kHVCeK>)O
%-U2,k8Pb.8E,B>fAbar><6fL#-?=HF+jp<bm2rs'\K_(/Vsn8(\VTqjM!<g'Aksus6ITJJ7@YCNFYn0Tfd*F2TQsk=B]@f1jmf&%
%HDEHK@]F-g03m3MUa!kaI1]pD%PVrU:Tl:oVIZmeJtg6$k6^q&'P2F%9rj%:_R)IHg!.-1k\me1X<$+^c97pucN]K6ZjS?US(a6m
%0+S^/GAMH)=FTV7mXKDm.5ZuE,8Pp$b>[4;FM](_ZFEk2kqJFA4Mm?P`pOftlrdDGQ_`sZ';j*&lY3pUb@f>i'@.0E]W.D?E(*>s
%0&G??P'9'?]C2[g[ce=i!cRY]=uTqiJp'`<0,Z0F*%=c#eDqJ=,_oU/;EOi8P*K1Ag^8WlO3lQ6<jQPKiYI0Bq)9X)!=p2t3Y!GR
%)9&S#R9,rJTO6;>Mg(%uB(lN^:?2]D:_+ItLEfCmY]+mZDOUgo+`K)+8m&Mo:V188Vb0Wd?5%q'T8jVF-$%\`92o)t&e`1pRkM$<
%lF!o]9,5i'nBs.?8T])Kkj'S*U@_F-QUU_*'s\Ji5<&,h@7N0oJc#M3O:(!OjC%FGCW8D7MtCE-.oskLf*b>YdK#mOJ3',Ej9(I#
%6j^@c`&+R7(L<kj?^OihU:_b`OB+??L0I?C(`O$.:F.bfa`ESj)PdUnb*O\D6M5RQ8*_iOeOWmWaMYKA53+<:?%GodpEh8>,_P?8
%KW3Oe>_D9(,[S.KZ%Q9HLcQ13=n>$\d>(4[2'N4G_#p*R)0+.uO;l0\kcLLVM6hGJ<fY+@+P*<^<J46IN55q>3=X*u8-LR%6mO^W
%PfO4hd!TC;Lc*RH67NVL3/M=#LT8gA="L[m`H!t9Nke;&dmGdi<6-srcmJ<gI93gLn$f^gZGVPT9iY#lk7"MS:3+,7SMTarqT=Sd
%"[a*.C3g*&?8i[+acKJ?-Tr76VO72[Oog#YmPcG"]n%Ptaf7tAplS;:E5T>>"p*V1pNC_Gk$f;.[UluU9,d3$Lmg5?'Oq-/fid5U
%s._phGUiNECI\qNX1PU9HgN(EC\EXSQZtER<\bJo,iiC6Rsh7g96mA9Jp8$r&b%#sp?e>&Qna@T<h_3;MhO*sd&S_1(AB+d$+Sbd
%<kmjq"%h=cmF?[)_82K[k<f;4Ze;5?<*VA:P,-EGZ@HUM+[uTp@>mb>d9.o01'@MPG*!P2e3dmNM1nr>9u;=A$BHtr7iDSAEu;iA
%6\pZaU]@O:r_)D3WcE(La*6]tG!t(I*]/.?Q7W.P9[?qh.6EZFfr-CBYNJm<T0RF%MPZN<DI292X0WKpVn@U%Jfs=6T\_pZ)rR`q
%Hf$7)5)].r6TaM?\-8D:&m':X!*21t'T0IGTqn^-@i`J))_8Yj*5kR_l]klZ(Q+<WXD\BSOSa$rOA><?KIn4m,'nXiTrq'9EhB`J
%4agbdg\"+sq%@[lGd\D$Vb&]a]o$B[Q8gnaLS1MBrV$"`$1h_k\t"']EcGWdi3Af1]Hkh9/M/^3%?!KF#KHtdr+#d>%Y@tFW]:36
%V'369E*keQ;A,=",K.rN?#LIm,h5#6=P2HMAgG(PD\5SaJbK,JpMN]GgfD#M]-?khlGXA/M'8G""/@6+^4b[VA09"OUPSFM7B>+)
%HDW?a->?WSlOVRU0$(-^-Bg2F<Rn*4gGWh)&d]h6Km!>0k1(b:k_Whu7S,8O\cmqp"_F&2V`#bEKEq$!\FXd3;5fRN1op$eB?<03
%GTb%H'YH$dkQL?]rBMD1_`h)WkaXYj>""3GE>Z9=0F1MlKbQp72_!r1/;`(?;d+S`CCO6<1=CDuFsM:%U_%)L3LnkFXOmWh=it>t
%RP+a6Oc\P@>>>YNBTR+_LdGDje7BV\C&oK+#?/RAAgV0''L!rn=N2%"QQmk3(!ar5%ub![,L;SO0p3Bj;&'d#QaOmZ$unR"&%Uo5
%-0muk`l8ELB@3BJ)4*f$lrrFc4Y7d/O!\ulHLZcG,ecWuI7[]A)m_(2&kam3K>=0-)Du#tFW5+]n/+4Be#;+WM'tmq5R9EDo$4Tc
%]]Q?9/0Q/>r]_%4.-Z@=nHD4E-kg5N8<I4XjFFM!TWcKhs+3CU:,=dV<@3VWR,MhT;^ctn>EME5;MW=I/!D3/KJ.og%@Z=0*D]OI
%DO/MfOt?Da@Dep##Tu;U!_"R$#&!Ps(_Zl\@*U1O%aJ\/j^K=5Cc#+I:PD%-OP8>U,\P7EZQHVH^nW3t!N#'dn>e)/qO&6[JY!<+
%m"A=?:s7K6apSmlQm20.Qp&S/nYFKE$j!sALrD1D9,5fQMHb3=MNX/UF\tOG0<SYS]S"NnaT[L,9.*@`Yu+7d&1A>3H!r*H:DisD
%FEK$D?s"d*Wte-naGJYk[P^Z3E``])%mUur0gpcn*#Q/J2VVVZ;qPRO<S3-.Q[fo#,8[#(H]$:^B@U-1-TGg@PHaoH\u;.M743t4
%+f#HG'`0X0*ahEtI\u#/Pnrdjcb:E[`t7DMSAZC.Jm'4ebpUDrMLl<<3/d\Ec@7SXZm).tTZhSB'D"/621#WiOVE/gl5sXi='d=r
%?LUX`Pl:ZH5VNe82h>2!+;(+hcLYm<\]f$o>D.Sm&f$\>fLcj;'29$g*5r+ESh,cb!)sGS!uCuQ!Y%OXpdeWoAX%M'N#X$'(F@c>
%3%@e<[s4W>^_l)-A50I:01&nG,=h8ic&-C)Z*&'9B?Co.N$XC"8uYraIZ7JSN0(,0CIJ^PGeFL*L=qcb1De;DbDc%U`M3_@(S<*l
%MifBF+N@5kT[slQE06sC=&C,H-u"V3#?b!-8!5-+$OsH;8YW"qj2C+9pN_ir'cIjM&KqrI#)%_hi%,ji":l8k>hGfKg2TT3d'>Q/
%^5?9SCaB'rj`)4HhC1gO9O:>c6s`\"2^79#G[M5M(4MLl>+>k%,kT2M_@/UL?n7b%a@%bcfqVf*7Pe++Hn$j>1:759^S=W^fh76r
%LJYcFD-^8S-V9)`6nk'Of-B'QA?$an&!Yp;&DJH364B<6SiII8]]*O566R(g%#>=&#Vs?hl#>WiFFq5[.rQ=>c!&B80toD(X5Y93
%"JWf5jt7%\Z=lcA5kGs@>nste&kCb3`gN1K7J1#VoZ3Co89/L9]+1?9"No(tVgBBN<[_<uXjK9@4&Jh(*H#c:c\Bi6.=@8f1f$0p
%dXBJT.c:&L$:t$oI+P0&COrTK2GY+XW3?R*9gRkR,h*_$6=dN/2<09S8J39G+Vc%HWF4[!D8e3'$2J"Km#O4FGuT@b<S2Xk!G?p]
%TQC^cZBM5G&7L>J7gA$(29leG&+Q9eW%,tITM1lVT1=^+`Kq\XE8j!&TWL"@C157_Q1t@E$6i3`?;MnU'i&0'2@?7t:_[i0r.+pg
%2eeq-AG?eJ:8SV1bt%p>^&_pie^+BpgA'MMb.udT>SdZ?6roBdY+\7S2$)5@?YGsDE:aVMp)qNqU6q[N3E)@9JiHgZ'g\d-V?JWh
%CRbS'YmQ9Yi5S`$Oi/oinNclO&B&-@$'MqZ,>_kK6B^@<3uGh(gVdi`3Et2!4j!@cmBGcq^5;WC-7I66%%2bUPr]4lkEhCmQHbiG
%&/;>rlJ@+tn/2cW,.]L'Qee!.0Uj%S"L^'6+p_27[B(B`La/%]8Q:@?>$O1X2-Xu380l&6:ZC[$&iI%ei5\fSaI/;pD)?n^6$t^B
%c@8Wr5X?W)_RTFj@NC$l'IsM.YUUVgo5hs!<Oa(o;q_C'\7Q]=E)fXV6`(9o^g*H@,!M)W4\J/^ltB:o"`GuA7Zg3;/i:YF>Z4BE
%6k-FuHN=RMfO&T*n@!1sTE<k(5ckHlRXe,+7ad;$(B^bP?1P3Pdi#+oEQ,T^Gs-eQO`IN4&]Vos^*uAM)B2B?7H)K;9&jkqNd%3F
%B:*Wf)7@W68Mh<>3-5MQe`<ZU'Uu<<,4ZKpA>PNQaGIPoA7@P95b4?o`AoAcFWsL<&M*?!idU+aT)2u:[0[\%4UJWB3&O=g4>IBj
%5n.X%Rm_!,H;AhKkk2.j;AEK_#EF`J6tRkJXY?Dae)3p=B1DYu6;DS6mB)3\M:D8FBTL55,kIBL#k7'!(Q"#4N<:AT,(at=_sg3%
%oNI3sSqJLWA;#;^K(LTD\Rd4ug/k].l^E.;j!8#$9cS`*k(]t9/B'"m;[3C:ZI[E`:+]pM.H(mp'bp_!B1FDf;Mp"V>!olLi(P9H
%2$aI61ehLUqLL9OfQr8D8N\H@4-2ENd4tb.:_pSFFasOt3^bM2rc-EjOoPs:Oq2[VU/fj@_!=lX;$Y*[5>lb63t,b93(e94G)NF'
%pnXHS#iYP-BS'Hg,@1Z^4E-,Zh(#1;QICqj,e9^)#.lc$#8?$M-l=\7feLK`A-c;W3GMFXaOuPCI?G:eI0B`?H@]p"'+^ag^_gX+
%A[@<18a.XR.flGrKIu!Q#f,KAc&lDn3;8-3:*gO4[r16eI>1)^SE`'XNhC-!9s9;q:N0`5L_g4.GU'"hUIgj^7W7:,Tjn8SUc9,Y
%:3D`H?%b`cmt5qRg"t!JJGLORKSm"J/J7@FHPc75R-*jlBs+EK91X-0^/<U[+e"VRg`(]&W\1RXAV"J8)LJ7hcCFD$\T^=q-NP+S
%R0t]ib"f'i"ZaFTf2?)_APVM3]/8\oHcj<:e566%#Js68)oFBX!fJCH*-47*3#;f(5O,s"ApNL<GYNZ,@_\XJ.tfpNRp^J@"EURo
%>Q`k."2J.l%N0_@'IS^qQUcm@?,Dp=Wap!7>=UrhJ<prG,9V+Ef]@bl73V\c>onV6ZP*-EeVJ:,>7Blh-t1R/>u#!bKQ.?@H."3g
%%UDga]RW4C@le'9,!5g4k=*6Tj=ht!.S/h.<SVW;*J[9p@ET6giTh7o3NDVG3^ClfZCVR6=cQj7$!7[@CBLc1q>ch?_NiTN&-91(
%.o-5uBOKq4edC(>Y]<V_MdSUTN*c:UUDm%k=^_4<WLPO#P&3=#b,LCuO=3"l^4ZrSMPl>0:=o9ZT5;SW\EpOE;kV9D)i4!6"Or+H
%,so.SqADOYOIcX<"K4jZB_&lgSkY&`m#2^%E^]_L:1->kC5E:j0ZPLn@X0\Anu`M>lXn6!ck[8SL_!m6dPImg3[8g?oFXP7@9@RH
%/HF*!?(rd<Nae/MkLbFp8`$6Iob*D"AoSA4+?:TZOH+.%j>7BHF^)YD\&u+_%?2@LG!U-p?q<b<&-eV/^qENAUW:a&;(%#?`<D6k
%.-si7TTM<,hG,;)8PbbMn;i0`K>>=-Fb,gE7@R=3EmhjVM6:7IUb]ai]"fM.;XN>6aJl$D[o4\q<&B/3DZN;PA,pf\?oV"CJY<@P
%h]rN#$S6<B"2[R%aAM:MfD/omO'Nlj2_!d#5ic)j8o_p$&LE9OD^a[gQ-d,WK3XZsK-5)4U[7+Kj@"\8<WU:`6rG9<*Z@!I-Rg[U
%ATh!dE4,iTqDd$>#*,a=>.5^4NWo,9.El`Z.J.jZ$qk*Oj-7E>fY7UZGa;N<L-(uq8nNZ:DCO]Uf^U4QV#i_R!%+pR.I&knQuHc"
%3Tt]c_k1Cu-c+t'b]+gT@-,0+,u5)M'FWp1(514+G_BbIOtaoqLJ,QW$7qT[ZaaogCn+2tfO##jEUlL@DaCYJ.:g\`N7:m>=6fp%
%4DL%K,)o)I6Q+61V1^0%1`\R9j:dAFUZjk0,P2ML?QgiX6n!q5Dal)GL6NLj(l'n.o/T2)1@fs'"dpNmPA5o];LicXB6%%;i/<e<
%#DDXO]XZ94<Jj.KjK^R\nN4&:Yh;WZ3lqTI04-u&;]\bH7kO^4n1s?3'ju"o"i*JA\DdiAA$Ft^TmB;(6]kSq67tOB8S8+!Y@<C<
%qk,\o;E2fZ:2()5SGY%m5"\7u<b"oPnAM`qn.JKd4?f]oUM/YLV'X"l-\ifg=Vain8^%0h)c!/s,E%bM*!I@1^ka@h:brf*,*8C4
%+Q>dsR"@>Q35nfA!U<-&##,oRGsr8dKK4Rm-A*4cGZ'Ht_M>&-+\58un>(c['KhoTag3+?_\ef;+Q<G`*'#Ud$Ph`AdOEj`,f&Ah
%?Z*L^"#l`>Q2ElV-QinL,Ud>NMW-Kt@"o=pmnX(O'>Y")"cTP$S+m=4E8eTPnH'npWC4T#=0QX1EaiR93EA+"N%oF.$BGN$X@V<t
%.K')`-p27WNoG_U2i[of"XZ@q?+`E/VpGDD"tN5hP^%>g#S2e6^OQS#)ZHHBiDcV]an5ahE)`s)Lkl'CmO?o1nT,+e_rVdG*Ln17
%bB5)Vd=0,%:hXf'.:jcj#r4L-lm=aE"q47W!a_od!$Auh9GQqVF!9uu.X2`lRh@)^Wh+-R`8")>.8m6VL'\>10+CJAX>u4J#X4+&
%E/=fP)7fn[HkN'=Tn-#!L0fI_:CNaQYeVUeG#9N('#WK?%QIaXSB<-3i"=Ld3Netf59kN=(EhWN7W/dHB+49$Z=OIH]ST!gM#cDN
%*N9%s:k/cH2uQ/B`T"?#'%q0\he4A+1$i@_*"fger@J4>6iPB$=$M5MNNg4s2QFWC2_fJ(QoD+/Xpb@B1Pqs[RYa:HOPb[E6i8j:
%!e,JhIT=%!h3JGYmtS&s\5BVO;RR,KVdSBqm%/go4T];r%h9CcY]%O&Ljjl&:C*j-FURP_!\>\8;ZuLb$2ON&Hs5IB$-e#Si<A!q
%M()SX!B=aeO>[O6gFImN!pc=tFuW&-lFT@%jZk7U6SL*FbneYbjW%!PlKnQq+gnBdkF6MW)&-_7o1]i3X$)@34TV*\_^tos<>Q,K
%=MT:h^lEFX+0uj]?;@4H-U&.KV-d\ZHU2I%M!s7^4i7iFM4&A]di@;8_HIM!VYK#aMh>9n]a7K*_`d2HhHjt0._)sS@aTqt9`taR
%$YXH3c:LIuVXT/<d11sd:1>GPi-LS<aUt0I8qXePb4A%C,VXF`h(2F:NN/Z.'X<3'CBaCNG7pllA46JCL'u83(Fr$#Q6CQQ$`FmM
%7.6ca7KrF]3!nZ,/"S[o5_<Z=RO?JYWuGa/TaC<e0Q.?BRq$_B*$#l`6?uLQ#Vb6QURQe%0\lns2tW:fULqJL:p=%H/>0W\<M7!'
%'2-"_H/B4PLT!t,8`0m;8D[TjW=C%hK_Q^-;3AL'hhXCP"d1g8>oYUentq/#SZ,0:[-h2+D3!Zd.M<.(O.1>Td%$pH!V16:ha6n2
%mDbMCp0d%"/ct*nhc8$tV\p>#iS[lAntoMaY@**$4@T<Ni#LDNj:-nRA?I>B2r[0_3)Ul;!$i;1-D(J"&t(JF"iqVj-&sq0$hFFH
%^VoY3A.='K"ihQ:27:tcj,GB\^s?WnI?[$JFB-<M7as$*D["1N@YP^GEe381TR@#W(*%5tW+Dc%#`^i\:duU7i-6JKgQqs$9a#u8
%(lUC`9uXOEj6`AdcS?>UMO.d"VS[R&nemb]"cbO()=1:A]FcY!r+X";"p'("!T]4fO]J5BhOos]_LT:U!b;6CaI=L\Y\hALVYG5.
%$Q>0e,,jElSHF/4!j`pu[MFs-N.$qBj@rYb+O88p]ZD]0F0Pdl\&:SEL>u"I'tN\o%*#n*c0Q2[DmV!.J9Y!Wc##ak2h`JX"E0\!
%?tNFNDjguaeWq?7PQZ\-TbuY2$+?g"GQ[qIT[+(`S*[;.qH!f<$Hh<QDZT>sPYU-DRfgEpMS(0h=lHuL^^-okhG)<b!Vd_oh..3n
%ls#%X"KNc!0,1u:"l^DsFUm5eBm]BIYZ#A$&n$IM9j,7lq99P`]*6K8'<"F,kqOlpi-(l%I-)1H[[X3]YdRulTPiESbb3dj,;7t=
%L=tr*38lhk9o96+%'>,)o.?0Y;):JL)/LrsD-@X_""]/!+u(,HJP1OV00m.+b^&0!faS"JlVYlD&/=MY@!70]N%Ds7`Z%aG5V]m-
%!W_I2AiH-d+Xn:@2psVbEhJfU1aTstSmupgB*<e=$JJ3W(^uA#T\]B6S8gS[m0:*l,S_7Z>`f"l7I<PG#DA*@C,aRS%.Kb*KH_:5
%MV8LHQdqV$FsEq$-))*])^V3Ys/3*WFFA-OaTAo?_eeS>$JUPp8^Ko&(;75@QH7knI^mUu+Eq$PXo`e\+U\/@_!NHu#HeDO2[Dsb
%;;?%c\>Imu\/QbYL*mK=[]5a>$JZ*.(&6Sd\/T/t6<Fr3RjaD);$,M^$3N!+Tt?_O+<uI*7VA7<bL#'5i!LG3k\cWo6$.fIGI-9O
%@,:rJ<<ghKJF;RrO'0VcEX#GR=[8[mU$!iNp42R#ppol7+Eo%sSWARLGD!bF@?0+PZ8h"[Rfs1TkSeD!hT;E$F5UpGqY-LR.u$Q7
%-q_ke:1)@]rZuMBj@;]1(Z]K1Cqsd>jDHl684r5"`/0EtS8[0s%Q_c*Vo[\1.`m9c@`[BN$IT3!2]Gpe(r4r]c85\d))(AUASFnj
%]-/`2Y?_lL\pTXW]0Pd2"bO(%[JgbP:7Mk'i,6?d3H6qfi,2Y_\N#?EGLM;!7FZk"?.'q>F5Ur3N?L&JJ\+bkP2hu6\/V/,WZ!F=
%]0V1MW5.4_RF2*'^8j-81^[^9PNF\=E]:NQ3P/+M],ffr:gHqp6,Hn1T&'OZ)ru[rUhnWeLX[hp2c2R$IY$9KjBMjbK5mS3WBjt6
%h+WCKD3!CG0BKKLMVLoi;Drt0E&Y<A'd@YUG/GV`'J7;k-BJK%;2+'Xrhk4T!SpHS7s5FOQ&r@4JP:U+F4<%C3GpcQ-aA'XmNDXa
%(("`"N['d:kQG&d4bhX\Pr39^/6GtH`,:g:D[[Bcpf)jHS&DlJgDEq":NHMSQEcU;7TF1TS0r2fh*tM>FUtLFF]Z-L%>1/.YrIGS
%Nn%EuA:I];7[l?0DZ.8!kr'`<FI+P@ZjP5U8/sg1Q4Vk;//OgNpeT#M%=M+d\r"4V$KhEFoGfqn"e_?27h1@7F4X!lrW8\'B_aJR
%k9^l_/f#nogk>L?J=pt"DP/^S[bnnb!s5Q[K$7Mji)e3T\VZ,PWOU_OLm"S77faKl'tJ[aEgLJCrkV)s#W(rf.O[4f&8&GfjN\sU
%(aM&n=FirEOPE9#nI1PL+R9"dY(5;1.junh2hA=[j'_u/%B@42,?02b6YO/bEH_JReJ;9B=Z$;4i[28j=)J[f%)X8r!-'5?'h/*)
%LRXh'C]t@eDYgpmkdWn:7Z$Wc"pfG(<+s8/V?%k#BE>r/@1gsf"E+(ci!'P(9`taqF8TkY#W2<nA6$W)d'r3:%.J,7iN1\d7@dNf
%Zu+T,J\4]RQ(7"g^tV;X72VP<eP_eCf^5+RjPH=_eeAR8S&,b9=[I!.?;qT2^f-u)M$r<dePMS9i-&+ZD["pnZjq<d'lTR\`Go`G
%i3qAc#"M,:-G:AdF91.)h[?OQ5o$>8_T1%be4<uJ@_>k%CcB>*;OD=L8PNaSPRte%9*)p2ZV=u]J^gWR=J7R(fnP6XnCaSX1PK<>
%m7UlrM,LuOG&q'sC=>dW^hhI_bI<8DCpth.%>qGcM@m;:!bAo=&eHW!ZAjFo,:ghn+:tP>@ZT:^&i_Ui"ka(a65@.RXt&\C?Mae7
%)lnkO&-:J(p40nS6+0'fXPc+[2CaFG/D.I-1*W'tA<?2jP1+K9W]h]L2U%4I'3g!'K8`&("kdLoA1.OX)s0UBr%SH0L-5s-9a\1#
%b:N)nODR>%`.hE&Cst?$bY,q-*X]2^D"CMB;GUb(J\=Gd)oacaQpEM!BNF)9Bc\"*)oL;T$H'dh`&@1%_,hB`gGDihYZ$?pg4g#o
%V%DB,&TUFt!b-Mt^D9g8q\>R76>SHZ7qEdqJCpHU"_&DcT&Jm3Li&k/_JOk.%Cci1k)-D1!.QW"",r4)OhtKf$\WBN_&N`W#hoV<
%j:l#gfVW6Bbj>SN2Wa3)4A@!-.;=cMmNisgE>>At^,EsNBlO-O$m^FOnScMenuV"*d'[:H!]O2*D:jm\UnR;3TVQFHD5JY/&n.d'
%$Q8%5YDmaH6/jo;2Od)^*X_)f9bZ8"%:?_I`Bg*sCf<5($rr1g>mkGp#-X$Q,0qss"'qBGrNNI>2\?4E_HWk`g-mb?(Vn`m"P6UX
%m@mb?$EIJ)'[9L_8N#L2n7$8a$9"uQg4WRaCN]`X?)5Q/+_m@<.HCQ/9n7&a!R:,@W?b<*e8Vpc&c+5=)22+N:sR^d0h9\>82T7)
%.%5;hC:t04D1JRiVg:UBB<18A8D;S>$q<=ZO*6)K%4i40ej_=s_A*6j!pQF9NArZ*`5'`s+:8r%'geDfKeU(dJp,Y2]`ipE0]j:/
%+i;i&kR6=k$D/=Ha$_N<ZROC^o7@-/Rf`JLr2no1;*uKBf\$t1"B6.jc:3(<)(,PO_KClCYh>85bU=9ZR[k9P80P<2X[8?@!\p1C
%S,jrCp_7?Ee!u"r;^<,G^WbZBPN8>Q>'?)*bHo4h\%.17[Xq/0PRW<KR]c^&;s4UZS-tj'RKStN&t&$]V:?;,RhErTf[Ure4"34E
%Jn1&Ti4OeUpWl,Mif<.4flY]Y/trX)8TSQ&2Dn&Ah@^s#7"/*S<d\^%*d5'1@oGp!"U)sV*P8;>Vr62ZC&LK:`bno\J`k\<'I8Yd
%?A6BG4A6SI'H%jOR6_.%6pEcO)(@1]'*j3,@M;%72dioL?ic4@_IBPV`)*]f0Fao""XnOG=q*haZ('aC.OK=;bPN7lRp8(7J<J.b
%TMQ(9V[_0*8<p.TM%)4V*X[bkJ5%TBJg+nu_1Plu@M?9Q,sa8jJ\MAY&]M\3<nh5;M*:0%5d?0_\6')qm@5F%/jZ`C1kN,6:i,pA
%UB!AqM0V?O`4,u.%<2s]LOs!Ql&=q'@Bo8nR_s%<SmelqjHu_sn3Fs1%1j8/M+p5;.);pGfHalb_8m\F;</:?hb!pSM;T]K#^G"o
%*5#ei3,GB#MmX=6fM*Kj(#tbMQ8*5b@07&c+Pg!9&d0S4SJ;T\k/!P)@7.)OFeE/1V5)rM"iH'T<RYahU,@n0$kFsufGIkL!t-'b
%H'HaGb9ttCWE@fG0QLjSX;3Gq2fgZhUp+g;@0+9cbR7%0$5g3K(1>ee,icfk(cEC5P\2[(Cm)OW-gT!mY_gT#T+qd(-ktsT0edF"
%liM/i9*-Gk%]GYMKhW*p>[*ViYgEL[\%ol#fY@Ij$JS^?)25psq?pEr*"!Y7.)e"[i/B)B7KS8QG)-j&"V`l5;8p4\/];XT]-1Sr
%KqfP%:tX-i;%61'YT7`c",AAt.#=Qr^BK<#`S/?pTWh!*k/8'i_Ib__$Br`.Y[N=ghMFR-6aPdX*s.0+0Y/[amEEXIYmd-J,@K.(
%UT9AOd!18X,-EN5YS$I.gRE_%K+J1^3cf;R`/*2i-u<pras%**2FX]dR4a31VDeA"(/WZ![Y4HETs3Kg`Fp"FRUl7Ka2Sm5:mJ++
%CIctqQWatHCsk=h(G1`Q@EiBm?pVXVR?SEeKu,/e"P_ND:tU^Gebjs77dM<@8:eV^"ds$3-u=nK/R^nQ1RK$+NjBMP8[<[Z:tW"o
%.l)E<C69/]8YNA^Keh6V*"&/UPuAMrfU)[a=9oU!fu4(\A.F;fA9fUk@DdQ6K+fYL:gdd:5[b=oTb[e=)t!EY#S]0XGCo$@TWk+,
%1";1lNDc!LQ(k)DFr=_>L-6ah*&bK^%5s)a%20E\(X1jB8^h2PTf)JBQRNpJN&$1+*b9uBL.]O\"9O@\gNSL/m0(mk6fSG(!"fYI
%KFL/CPX$)uT:e(S*LR4q*trB)j']b>ak:'C*,H,&QPC*Kbp7a%`PG"_W6>VlClYct6Ga(_c*e66?,:[hZ?oS#'0^rN!MMQj%4sit
%E'=:V6\2I](,afR?E,EZBVJ&M7*'?6.M=WjAH4,]+CW15"OI@,_?P^43/59SJYO@M:tSkRpsBf`)_QB<G:cYDA5;(<eccaG+N1"I
%6$'mR3JWM,cs\NF99SZT$6-5t?7TE6/U3!E<\/'S?VgiRJV?g/i4'^A2CMZY`PMf_iKXd%D"NMh,/qER&I)7`'akt(R]1*h@7(+i
%;A2HWD5;sK4J8q;[:$4s3>D00.hjnE^R!W)_T$f#+`BYT':JTb6=CO]6b=$>)f6.l[=H*u),$i'fSj]Mh8$ls$m_0NRA^!,[W<'t
%n%e[?Ai=.,f^K/l&Zl9T2GE/LndGpG\]kDP</bUU3.UA-"N,uJj_!#>&L30oC4la'p7McF(TJNJ\T2N/4'KE)co:IUVmKUd?jD'l
%[kS_9>&I<$1)0(+7HTmYfNHENL4Po7,&InD<H'RV#hW.9NeV!pM>[PV]':&9^gC/Fq<!_mB!GcO=37@C@UE'j*$Vfoq\o>XH%iu0
%!#JbT(Wb286u9rr'QaOkVdRqZ;M,dqf0j/F9nBu)cdPhukV[`i/Snj%Hc['ZaD2tV.?;RW+XEkAiI/Mf!DAsT*sTBT+t(G=[kTek
%U$$[PPbJ3&?A6!l!%NW5%U(!&JTa`g?Y"1RXD:3dP7XHbf7Zr-Kl\8t8t?$)*OLF)U0PUB2:X:?C\!Fj@n\SZ.IR:K[2%^_#j051
%igP\moI@_#cqm/"\0c,2l?P#_Xss=Iq#PD.?4GHmA1LN?%I095^o_)[3-E3KL=*5Z!H"Ab'QntC9cg&h_mQ?i)*mI9X>O",^aL"t
%elag2"1>#hJ5EA8f$lG@ILA\^$FOOK%aRZnP^MZK!48U'6>XF@Si%6C`1C$iCC7DaIApo2j9p`f\cB'kOu@:i%Va:D+KlL"RXUn8
%d/q=VPXZet`#;5n*E'k\VT2NrAq=Ab"rp;+5SA($=@>T^VYED0KnK\]29hIRZN\)^5r=Gcp+Ut>49PgikO@#b0k]Fp#\8bX<eBcT
%Tb`nt%-VH#,-t41WspIBJZH+d&h\.(;&UgdmK&l#A9&&mF\nlc"_op6SDm.?ct^Eo#(E:U<[WG4>!Q*jZ\C:Q6**fg"/^V!6m.]@
%'!Ib&aM:leC'(\lePFSml#"`(X8P"@Cb\hhC(fb29rh+@E2.=R<KkT/p--Hp-C>nq3eaOC&gF\NW=DtA;*_-1'88/8"f!!gEJPg.
%@oODiP<r4^JZhL^#nd9t/.7-rTHsUQTUGlZ^^CjKg@3c3nC3\#a,-.GKLF((@50aLcZ47Hf[O6F"r3SqgqlXOEA>MXW2L)/C@W,"
%b"u>X,+o&?_bti`Q+B5WmW&:0&Jup=eGU\\e-Z%g)j3759?n*Jl/I3u=okU:J&>d,^nXYhlSleF?V/J+*R]O/:"Cd2ee`#L%F/(b
%0ehl@Fl3^e\o::.()1o+9j;0LK=qjlDJ]QOQC->O%X!I8-<.S)3-m8q%#)7oH?gH_RP7l@.ml%iX6>+l5ckgt/c9=>feW?eU'2nI
%IG/JJh%G,sF#M,?T9c-B_k)V+i=>K:*%dVO8V^NQ/An$UrS]#EDr=Ah2B8qL'R#p'[qIICBYY3_)]GBu6%gc-SG"EY.-*3?q#tQg
%&>pu;06?P1j=/N4P15b`PMOh`8mK^$VBoJQdA@Rn%;p\j:WOW6ILBs12EOkf:p=XhcZ2^]Jk[I4F]++9B-H25)^844-sSW,dAH@>
%m-e:1+P+b]W\_$H.)%hHRoX>b_jX>,i6iE<dq"MI3)2c.-En&a1+bc?8b6=+37A!J!]`_YV?mW`SZdW#9nX]BL3f)s(r6AcRN0(u
%kYd4NEgLNlU(Ou#1tPjroG%-/N[hil<3TQ^MZth?SNn&!&I?+m%rgdqfH@H;Q6n*P6kik:Bk\?:Q6qu)jN]<<V43[kOpWa7l"FlP
%P\0Omp]MD;d^;[jD2"7XOssjRd0/h;CkW%kF:m^EULqV42,%^//0LdSC5C=!]LOPN`JLJ-A8'C!4D>-NAda_tWtWub7["lXk?u_1
%2(WH,@CJ:jUl1tR/<HYV_E'0\1gO',8OT'-8/"9>0[:qHXVS)gdRAee'Jd6FEMkECU^?"<M_Hr?FO_iNMBGXVa8hA46b4U992Z%0
%&4.EDdP.!!ZiqRX'eW/KUT5)_;uC=YT?h3Z5+4/[fkE)&d1fakT;R30;[b+hjT7NtnAuA*)X*N,`sHd.'t!6PE&;-AEKSp`M1f.!
%<ahb[gNYI)&(G8hI2JX)GclA1N$^5r^p>U8UYEFf-?2$'Es!+Z!2G[,kgL;R1a/U0L8Jq;'O/?Z.Y8FqYNs%@=EG;!>D7q]RlDcE
%$W8ej.-7Z9MH5OP_hk6V+gkB[U0HOuj<[JVSO"M3.S=g3<$2@$Sp*"FU9"-G'dC5pHd(E@PrgPeTdb5Q+fGPdRaBdP@iFWRM#uPD
%5_l6#"CQj3Q+Z?u"q?QrqU2g6Tuhul3*--8VV_C&'O9iWBf3^e/2VXlWhe'!0]aP[?j[68:,_$C/hiu?ig`3MKI/i$\>'B<D1i'B
%oUlOBF;F3k_^$T%fNId0JjNCa""p/rC(2J4A`j7IFDMr:\cd^6I'+_:'E0u>RsZ95d%jK`0tRp&0PP)D`YfmU.;qcb(#n!\!<V9_
%%[oY&!A^]hd"LDsV#gc.\gT9.$k,0iLmMO96d$ut?pOlq2M<Y1BS^ZR%4#W;N"$(3\oTK.5gZ<>"0P,.H'B!tK7P?NOP1L!d"Kl%
%K!'t4%7ld#"pjk0AG#f5b?d76JUV6JkMH5Wqu;-AL[`i4Y?sgr+=&.Yp%cl*TDCf[os$]+,4oO2htFP'rpoSLT7;p:<W:aZgXe*n
%ZbCnafB_bOX7I-sr2YmVc)2Y51i9u)iT#u*j8UbUTr6/MomcpQVu<iVS'O"mnUII]MuM(iJ,]5<-iJqjQd&#!Vi.oX3j1!&FXtCo
%D;rL!F\W^5hb03SY@U[_m/I5n/nFb4pJM22=/[!-6m]2G*2Ll`]5Bn6kU/SRr.?On'^a1U+W),T*Uc.N6'K[9A9)-7&_^kF;D_M=
%k0'/XjFF2PoIa#uBcR"aQQB<Yghl90Ciee<rTS71"7f.e+G]H<a[L;_F>=?cM+32Dplc?W'V."dLTGUg5X-Xm$BhkkNV]P%at!f*
%?'AbZJtA@nl1tMp&M3k.8fSp@?Q&Hckp6H&Op7,]:i:nZI5F(]cMG3%8XEJ(b>mG%I$W%[?!m>dftJ:(,Yq.#,*Vii9'Mq#3F7Rm
%e"MHcAEuU%<ZlD_/:*C^=QkU>l.EkV`2^aY&!Tu.6m"l'c:;a+j^W#ZjiaO>XMh54bicJ%qasqpP#ru*kj6<R"0qMXNbq?/q]eu>
%"8N<m:A^\d44"QoG,"UEomh]>Dl(,4-B0JQ=??.AL>;7.W'fh?FOEO/m!U48Wo"<;M0k$OHoC7X-7M,hPC4eKCF12L#49@m3Q_YM
%^?M:6l8!?OS,<&Q02*U6Ku#SQ9mGtSEE7`%kU5V@OIUh8UWp(I3U=u@flu`HR]r^Jm5m>FJ<l&EG1mkgI+6-l3)Sb0X_s`)=5Gmh
%[No.Fhq6OJLc?YBB'NgkW&i$k,-`QLm=\ue,H3,1mN'4:)097@H8$L?O,Q(V&h?#6_Du?N/>U4amF.S3P8@i^M@>4B6se%:pq1r\
%36%+o-T.(RGGTEMPhlRK?F7p4@Eq2rF$e)GFrBZkq,3&&&oLA!]+_"c[Zn6[$'-hK>!Y?N'[^sid,q*0^=*;B,ojU=-sZ,WR^_G!
%rYA\e/f_Fe*gk,1H:c^rU(e9q;GBXK3K`&+68"HWo-k+=<]>XW'ooa9`YNA:8=bh4d3hg2:R#04-Qb=5O9U-6TCE9Hk/\c<osmu3
%DgIXQ(GdsCb`P+:7:#a<7"F)%60>`O:dcY'HW.(DTG,F<Y]5JTliLaeD@3.ok,XMn0Irr'Q^r0GXMh5DN)aW!5@GX>.6Wcc,.kBB
%)$ug,geX08n"J\@pdMr4.687JP].-Yo%uN`kHcJ+>h)!h`pbB&1_o&m]_r60!'W[$Lkq__dj*N49R!IL&#?nkAcS.3cpQBUF)afG
%DKG:!k/6V8<0cP(ChGs(dP0o3i5c/@`.$L+iD[[Q&3G(N,25PoD/7jK.ag5:?8'!<m<*2XEuq%LKBFXX@hM=B*`n]PIT"Q,Z[_2&
%B]Ib;)VJ5j3f[`UD/08aE/DhTp_.A5=%Ys[!t1$-"u<+:YTQ!3^eVFOPO]<]]GfBrWQCF`9<uQ3jlD7:h`$.nfnZVGd_??K*o&X:
%i1O3lGL[-uEAU\KC[1glp`]l99$8Xk0a9hPpV-0.^5=M"4Abpq)2#KsLpW4;#*WcG:*/V3c4ru&ZM"qL2iT=GTm@fFAK\@;M+3-I
%^pMl$_b`X\>REb7i\\cs$*>YCbZ./,GP,@"3U%^Nb(;NHG'(>]YJdOLb`?XW[Y;h(BQKYZH!H^5V4Ykbm:-C5<n(X"HCW?Q='<]1
%&KMtHHeA^LL1$bYWe&9%PR2VHoLTRRY:KeXfmd\&K35h2,=Ie@6,)*ZkV.DEb6Z&I<+$P=D[gKr=)q1k(.mSmmhqTn)40-B9FOY7
%&R8:%[(-d5R!m9DUP^H[gM/,7`h`4@A\XmsM7fs*j'mBf2C!*6@X`kdPIVgDf`g*,.[O?1G5YF=;jjMU`$0f.?q/gp-r"8C>"@g7
%#J&]b&DoR&kHh?&cOfh6dhD%@.\DlC4lh(7esKo$@ZEm6F8<ecU@V#)lo8WuIEQnWmhjUac^BLgAQ`QH:m.E8QJT87qVA$XMjt$2
%:?SO0S2["iAFq]Iqa+/J^n<hE4j#3mI&rEU2\'U<-'g"b"?BO<Z">OIb"S=of7q6nV^,sSi2!X!rfomsU/tCci@Ti@(^!T<[u%Y+
%m@\5_HG-n(ejC'e2OJqbAT&c2.Y>::*WRAe@OZ<:1>iY#XGU"pN.b:EF,3F>,/I,iFd`c5"ms+1<)P0E.>U=S6pe"b?N[Rq3ZGqV
%*DVPeW50VB)67jTpqfEAOPI=ZA*!a8Y90?BEi&ElSM1]/"&>qG96PI>.,P[Q'P+]CH),QuCS]u`CojW&GWL.'l'`s4k?Os(@c8"O
%Dk,907^ei/ac,nXON\1GB"A(l'J*tZW0?aXAKDT9R`U)e@H*7;V-$/5$YlK43*J!3iC&e49Z1urU_mmFZl]r9g<_YRU]OdB//c:/
%1;DaZA#R?t4MjCQSPioI72;I#`#0ir/?X?BN&1HqS;KZEnp_VH<5!_aeR:VqGidC2CY=GY96BKFAfdAh&Zqs!;`=u4j=W143mQTL
%A(<6#P;-oPDKOEdate7iKAFXEN%Xb.\Se26[5[40k9!4k28Q9:%ZI=_mHuTLZN]c[Q`a-V[Ms8;Zf0e"![1%f8jaD7IR_!M$]_ZZ
%/T*K:B<a)`/FFHZM74peVO,2"PeCIghg9_eefk\h,UV,b#efjTi*qq:Q)5`sAeQKJ;!&$,Z<ScA@VFJ!<L+Z+gragF0HXM\%uPnX
%g":o35%H*BogtGK392Yh%oX+8KLS(TI]%oL,aI%N]Ntdu2>)OR9eOO]D#5O(N9@\#Cf[mB2^L)GnU6#B-Y[Hc@2)k2N24=7nk;XJ
%Z0@4&jjUVOeoMVCOdmFlkE2bob#MU0SaX0)fC[XLFD^#@Y"^LH;_f)N@d%'gh=6-SMR5#^AJlLbG!$i9PEe2Xk#9R&@kC3V:m%cX
%OcrqRB,ZqC+1C#!K56lnl:r^MktrV24M1^JqF;E)l+]26m?$g'c:G[9BpDF7kXSqk-OMKObi:#!iC`?;?9pk9[>7VC@U`4JqUB0r
%R4',66?n0'F)TCNmA7o5b%+_?bFIg+e3r;4e<_MG2h97V2a[-t6M:fDf<`/TJEERDOU+D69'O=-X/1t5"6*-u4P=b.R*BfA`(L>]
%Xkk\VUAeZpD"hQYfpJ)2Bk8PCh)dG4250T[,$^rUY1o5h`IJQReB>e[P\!m&ZP&0'p3gm[7L_o-Q;mL8g,Ou.(Ki(n@VCB-F4,Ur
%/mcP`TLWt1@RHKNAbXJZ5!el&,2Od6"I$B5.'PjIq5B,"B!I(7i1l=:9,rqJi:ZheD""0iTV>X<Wo"6W/696s@fD54&[EhWN85&@
%GS>nCG44hOGXXt(Vb.Q=SC3LV'D9X^SjOZtPF>GIY)Yi%;-EUVWE;k]3Ore52s>Br;,IAdmMP)!;VbQ+\=.AqLJElN)^_TQ:$J-!
%/()?FV=(neCaRsHnUlZa`Bjj.pC1PY4?)ki!`SkdkolN_/<8Hhn-D1<I">.>D4=5S.4R>VPc\$7>GDQSimoY&\>S6^opa%#a;WDK
%3"\0e?BhrW$2aRT88c9q!S_m2oN7+/<cD(`;WoVElQD)S$T%u>?QW:OI8`TVK/V$/R&.k#`aH]ZUDDDB<qM3r_(=l=/sL:j6t^]`
%T`:E>;:I33-efP-2][V>!8N4[^,(.dG=Q'7E%3R-mETe<Xeg9sUu![_<Mcfo1Afhp4T53W:</VnE!r[8jq(K9,e=fpM2AH<Knr1b
%rC)Z1-qYE-h)jsK"K8J31rUN&l^VFqffaG$!;7k?"@:>M]^_8jN*]bVd?UY.YO0]q5SrF$lQK@@U'ZG(ZuKN*p[/licW4d/#0?f_
%94^.97=d5=4(F._2+eXu+J*sb/T9dXM%s=W/Z?rR3o(^iHu.*&?]aVcA"."3"i=At;c37]C(J9YWu06pYoi;cU@OHsSnp5a8YQF_
%^YBjII!Eb"ITi7R]0$Qm'nUn3:c*'dV9n)im/k7n9B0!ZLG5gGp-g&a.`L+f)a^o^*!GWb4,GcT0*F']0(-ZQ\5IX7OH@D[L-g!`
%BI0'''7Ek)$Q)Qt@eC<b:P`JiUW\X7h"ug[,fdhGfk@#.9dB9Z.@jT^&`j!hV"PLfR%!_&"@m32S<BGl[M"ahOWuA5$!/:;UXj#t
%/4X<(4g;=rRA<gQVILqnPLUq!(c$0'L,MYeI*-AQB3/4CJ#FL(]),gT6QoiF]%[P@Vs97/@c<U#<P8QhN(X#$7`N'?E[VP6S%*Hq
%\,j*L&PacMoD&K,,9gU&,p5&*6(Eg=YZ&nO;J):eAVH-?-V?%U?BUnA2MC;-1_*)k5aYq_%&7/_!K+[$N7'VAk:r$[A[=F[c5$"=
%LL-7OY'F#u9T9PsrLY-1^dQDPm>nQgVIbaX$i_Da80?bYKoMQ`aHI6j'<pmN.O0LUe3*SU8?85-[GB/mNY]B$?uhu5;D+B(m0S!8
%]J,eN@eSI\M5FqsjFig?Wj[k_N=JpAbj9O6;*"]1j?0YeKt$:jdClY89@@`m+cVM7pqJ8eZYAGB!?%;8;i+$^L6Lt<+%7.L]b]FR
%n8FgF>s/db`?Zf,UtZpER>Ap#Q%KZ`Z*=n63/d$dla(O@-)r`\..L'EFh45s$b%qJ3U_&g\1"PurQ)o(,dlE>/obJJ:u?PjZa:-8
%.B!<j7!4$B<?]R5!&Z3oi[(5:c/o!g&L#:u-uAcj@`h9^>+9[$/F!g<J3hnh?];j1A=GXZN<4Crn77*-Ku).2i@*Zh-kFG<8J3)g
%RUJ@XQ%f@Sq#D&acfAUu2rWAepLsJ.0MI:/])q!QUm8g:"bM5^G$7<nDC0*4WheuN#Gi>WnWPEXe_C7pKh`d`<*:!1OGQglEV"[2
%*fDr%_Hj+Ff*t%QR7u(V34$*H3l&JjCFAWfTi,Jt5<?ihF^et$I."Bhq`7\c<DFX>"9<8&/S*Q-7%BLoHl>emU0J+rQ&36=]q3=#
%oE5qe/FOt-^20G"@>dU<pbH+Q=ZXqYY[ds:Hd*s40.++T2DgQlUT)..3@WWQ6t/HeWEBHlFr:J?B>'$smr]6fBe)r</ZA#f:0_jY
%ZOm@<#:[$JD^N-"b'4MH_n?gCBVQ]0FYEuAW"O\7do<l9lm\5q77X%Vc]Ud'd2]'%(o3lcTLG5tnjZ9??7FC19D3eI/5U605.\"D
%8=%goFXG-eAe%S98MJONrJk$F+j%C'*jV0Bdo5(NUg`N\279+;;YrH0BjA/;kW("RCM*!-_FjFKZ,r^W&kJ1'EOM%)'F53dH_dVL
%MJNTmLRFBdoJ*%dF0T@QWF2G:4c?*;?4LVW)W8o#8NAT>Ol@`_K@@5(Eds`qU<5+HVrN'mIj^(t`rLis&`G.2A`8e/1TnL3FS5VU
%UflF:%@5Zmcbu4Ddo7,q",PYaiatuF?IWFe&AZ;l83/FU()*6;@\(LBi4-E&n"*+J7aAUmhneOl1,3hb-KT)\PJnT)XAu+!o3Stt
%e)upj_dp2_Nou>s#<5PI6sGQj(0-o^)R,T@QS@Cs))l@F?T!Mm1b#[B#-/<1c>3!eNuilu,UN>HPerg[^j"Vh$PAe`_N@2*4nNTn
%pJRS^p`]^uU>fJjb7k\TaXSinmk@Uk\.XsST<"!:A!RXf]X9=_e]9.2mZ]:G.l.llBj\,U2(9iT_E69U[IB_8rW&qu)c\3UhS2Jq
%<O5YZr<]9]PO:2gY6c8[l*nd`Cg:I?`hoc?2^YU)!E>oGeVVFXVoY/f*bghs'A(GaSXsP%PSui![15%;FU6UK31?isG9?o^-KT/5
%0q66uX)4&Yei'Hp(e`4^&]Q7Id]SEUE(UPb/6CR`j=&+?65=pIEAeltS\@kJCTn#oY8=NF<`;"e-8]3I=\'g"aHq`1H#_LUq(g;!
%bWF?%44U=/H`B*>Y,d"+WC>'"g(EKAo&>9KVbGLX>m%O#A<Dh4Tp&RX9J?p9C)K\B!!1#5=W4m`72X,ZrCV$ci\(RB'LjX;c#+W'
%RAuiTJgq=9.O=*hD*0rZPDF"5MliL'(EN!QdAbbe:7rDH<Y>>P`0aOcL5A4-FisU9Lo)LI>01b8&fA^GRT1I[e!o"EbXC//ejJn$
%kU*)]]p6.$O7/0`m:FT0&YeKNZm.+GJ8<f9$c+sh6n[?^FiW(Kf$("]1]jDFcEg,Nc,)CWCL1pl[`&lhDQt50Pa#-605`aO`*1&Q
%X4Wh;P"UMnU9n1+hqDZ*@'UGROpKe-+X1PR8)=mnKfG.WrfPNo\L]OTLR;plfg6H']KtoDfaO]gI'6tO.=A[.&#gtLf3$6$i%Wj!
%[;\fCb@XZ^>XQMWcnr_(XkJq,[1Tlg646@j`c6Y:&R9A(AXbZDMD-`A*pq)nD:GJ3KTN)oSki[X7]5+K`/0lZ):PCpL2i1hMkHhS
%EaE<Ui&#*X.T&Xj\odi5q4"K?!F@&aV6a^)&A5<%GS,kqJGCO.NJ3""!BC:u@QiWr(#iaj\$,)UBPGO>Q?NClk:Dg\GbkV9,[->-
%'XX!a(cc0GS1Ms;@5NgtLm+idP%8pCO+ld3LmFh=TQRKfZ&7=4lcbqHE_i-i0idPTbmq.B*9]k@:Q\a)MMgnYZ3aX5L5Lac"`l@E
%nRUg_GAqEaSCYBD!6B!tB\l+^Uc.eI9'dO'X3l69b/.PnYo](Hl6NWbE47%?-HgV9,8)c:/1:FUAi>mpep/.:j9M^iaO;`@ZbYES
%5!oX^k`XstNd#,F>Et#t`d%f:EgoK*<l41LjEAepWm1)d8LT^oi5UjTbU?^SV[V8!SMndQ!ic["(HFaM4"+]4nn_3j%S3_+4SgN[
%XtiqfTqm7:$1s@\$ePa7SOr@s^.RE(PQOXCkZ<>oVO)=?H1Xoah_nTl(/7NQH%JNFgAi?u:-Z;-Lt6;FgW3E#qn-gp(MZ9U70o+L
%O>HtaR2:JEG&;Y@+)9jFbJigURjK/-n8.mDo^nSPKKGc)&-8<NM:,B`+E#WWnMZfQGin'cm4!")^@aT[W(O9"8\dVpA3FQ5f4^2;
%^_!U0YCnOI>A?e(h4s'aKQ2gBBaCqQCX:(fQ^1lrM!;Wf%tQM`CG9si"aNuTC,&TiY'M38,6W1TlB%3LU@ag13N%-_/uWciJ^S,X
%^j:,2H,bK%Sin<37(?_?#:rn?qe0(V-8rCN"cC3D:ofL5(H[%SM[V&"R1X&4M*PW;&CC02lA,V^]6poHYV0.V2-NHR5U#FVTf@`Q
%W7b3bK[`efjRad#FgZHO2sD+/rST8%R#"Vgmsn[tgO2hlWkBF).9leQ>RU<&ijH$\'Z94?gshq?eNt6I1R)f3H75(?SqkM'(e-e_
%2MnLU`'"&.Q@S'adZpb"K+pYZjf)*%SmiW8.F#0M/R>0Eq5ih7?0kNdHQ@t,EI<Mb@I^"+H5+mj/"/?ES@R`sdmQS,Dd*_Z&J3UE
%F(4d?@8+K4&9dM"ED[A\W21g49LJ$Gfj$"uE>=HhCO3_Tll.:k!EN+bf$Q9=4#P6"Xe:4Q72&TL-U5ZaOPPPN>`5\jWu!^mmWLfK
%C5AH=Ibe/\BpI\;Z3dSR-=.3rF!@qR*'TZ>2r&bXNU*C<,:&DmBeNU!EYo-7d.R$8fJQ1oJ$QI%]]h!AKh4QL1h2Z`nK`:BGZUA+
%P8^\hZ17VrMu&_PT*+QAQ;!Tb/81MPSjOE9,c53d`cPh(:TBpE4^V,G7ArpP=/1^''.BoY]d&BNoJ+T>X0NM[im_Al:d%ZCP<D<3
%e+-J=p#;BPS^J90GZ?oEV#,K!GW#&KBctSmc.1H86325/mha.ONII8AVV->SGa<)P"[s8#U=g3?K6?+@=Y:`XG6klq.'gkWH^:n%
%-5g`)!Rb")TG`2KhPM)l5U[Tc/QDp_q69+JOiQe*Q;'k!nih=ABNZ6d9?l&_AlX;n_!<[/fEdrA+Amqbf+E7i9MBWfUI9X-A;?us
%C7>)?j0<CKNMHK9C#mfip@J^>@WISNA%"3O9fW]X@,_H$$kd\G8X,LEA`lPoP;/4ujS9DVaA<KlqQ/pMrDoLQ+2'#c1Yr+fWmh6U
%Fj4MceU%-aGQZb:NP%\#Ha.;=ou8B\+?E0'J2D2AdK*G`P;W'":8s7;C+1nPBfOY(*^\8M%!Wi4#!>n<;M](*<Z<_bJ'Q'\$qpm)
%$aYIU'5MY]K3Z&a"bgTVfU#-k`H"jc8pY]ZAmmVtQ!Qk`+DL-]9kAPRAin3P^_I&7&^t5J[BA38Z8lK/o.Cg)7e1t*U.W"I7+I;f
%@$?)?qhHrP;V!K@eY-S0f6Qei;':f?>E\L%K-BV]4qqm`X=T#9F>^#GhO2mdL"I%;N#JS^bR]@`=oC,$S(94l@\U$0@q3n"3#+rr
%2f=30k%ou$6!jg93*U;Ja>'sa];FOd,hnaGQUiMG8gC=:1nteL7;#B3@(-ahIBUOgDiI[+L)YqLNdX%-d2b)YW")&b#dhpqf<0FE
%@)*lM6$<j3Gp6#@<qQ4qRM__?Q9pjLi<`H0KIGCk61dJ5WglJlbe2US>.-KX+mKY*29I9d+q\sAb[N+[EZE%5D%)6kf't's<d3V9
%1";GhJJTe0LRAe\OSG93*n:3mm%Oeq@KfW"DUd*$_?a.`;U,Coi'chI/>R8RY1h\Q:skeI1$RG5Z(NI'E02Q%bG*p"S)pPBl:nFO
%+r;U/6:B"ZS*mtL(fbT6E-uDq?N_-7NYUMOl,c&b\U^4Ba^Iu2oVVGFgfQ3q6;lBpHZKXbMkZnbR$Fp!#0>^f/Q;RpYd<KRKZOgh
%E&D9B']X52_HoZ8:>TG@&4)U^&pDfOY_u6.T_B4CloC/BFHH1@NS/(Q)hbIEESWY^L!`/g^31(3<9ZkM9:.$0E8Cl@%1Zn_DgU;1
%$_6p\)Tfp[7#tGA-72;'V_&No4g]4&KW5o/#R'9c->ku=B<je)c=W2OH5(Ie-^)NF`$.;6_;q1MP=MVYQQC\3.a&L6/e`lR32!.[
%oMEcbJc$C'gh&5I?BXl8BZO1b\Eg-&K3:dGAg]CjEp_dk2L;JTTdGU]TdghtBj9Y&Qtg!L4W'cN0KCVI@8;'n%c-'eiBb>6p)0#:
%"&oq?#\LY!i@dG)Q>!+e*O+4cUh_k^cr%?/h_l2Y`hE;dVcSLs?VuD*RJ>XKk@>'&>'a\/6oX4^9O0t@`C<U'5i(AoSLr0K6liG"
%5Vs2'OYc&E3$qU_.R=4=)Z[i"l7EXTKdWYZNe2LdiEZK7cje-N^%S.?`Mpp%@hq$rNQ%h/;()X.)i)8)>7%A<c/;\+")s2/P$Tel
%S2jGmS]6ANcq1$jbW69SDIqh'bSgaagbT\(R1+$Yo0J=DVKO6l8j_WCjg6H2.Qt]fngt$YnBbdh&qNp.N#o==:a/c8*g<9e8a6>A
%`,R9J%GsD@/TeIJ\R$Jje9"Ij,;hVM:nZqGCa$;Ul(LBPF6?MF;!O;mBIGf#:gnuuau#Si/!`R?S/uuU`)9!qJeJs,ku`M#o9i^4
%T'aXfi^J!E9TRdU3E#XVlA5p#`@['DV(h@G;Tkpi-N)/D$H8p&8fWgcSV>^hBU$ZRAG8&\Z::es:),X4F3S5H%YU`H03N.`J:<iN
%k#o^7@$.lVN_[h2R`^d_A4-u2&eJiKm,G?"p,&iWJajmKds.+mnL-dN!C?Na(br?'lF1LjWCYdc.j>S2fpN[M<M5$X/==(=#'pQe
%6jn1KM"-F\./1ScG:;5Q^'[4L@^_K[>e:eD+eaXGL8)U@"L8Z@.Mq387fBm>mdq3I=K:abGrf))"-=>G0!c(NpO6Ts$^KkCP]6do
%;`[0lMlcX[ZcGlm-53//LU8VtT^g"^N&6<t$`:D1_5QIR$.1$q.&"2N0uaBh*UU8Z9NVpoT%ZjCE=s`i%1S9:O/:+H&0JQX5"?3r
%Psn>B/L!1`Pg('VaiT3aOp@fgMO`11BjQ"4."O8#6j\&,E9!l([?GZ!6t]#`R-)Pr3ekso_4\lc<NRX)OFk+mbIEg.A?*^\C7!pY
%E9!,2&*L'%$HC3ZK>L?rGs@c<<$Fr-i%34uE\+6p&&`4([\O>^gt90@Yr'?l8PXB*@<IT!IJD0Y`[Ag,*K1E!==-8u^iC>?iOanP
%dIAt%'ArFk<6C.@,X%6]=<i%&?K;['1]S%Ip(P!]1f&tEQ6QKMB`(a;AgS]><d'N,adabB"UjnnZE)b3.0<NRg"+R1pkIml:jTg0
%)eag0.8X?G2Gl5*`aEdgE+`>bROq/2*e%C0ZX=7G]e`M+,FN!1a-gd*@/\#X.%oW)BM&\.K-Xl"YTCGg<toTCWsPJF)I,\=/RpQd
%Bm`mMfRhM-fb/G[e&4YB?/^.W\<jd";.MUY@l=3"7XBOS5Q\Uh^EdnhqC0&,0+S=_@B7B<%\9Yq#L,``b`tqf2sXI%1.\AQA@&or
%c?R.\@c'/t2Q"ph8Mbf,N-V/,QMR?ilb,un,N^gYHCHfY29U_&`oO)_>U[X7U@]$\4Gg^EA`+npE,@'<GVf8.^1+0VKso6RbD9!A
%/>h!6#HEmua)OJDd*%);Qs^^i%XF>=Ys+eMAZ[?RG"E4.#u[/peJ"clOWheI>=>bo6W8:\[kI"^bI=&4>EXr&#*LGU6L;anCA:e%
%g-P5>%Z#*<!O%p9[od)Ke`maaU]aJF(7HR<Q6Bt(+;ZlA\VO^P.RL_e1prBZ"GpKDL1S#g)TtiHYqKF;7cai2ELp\L_WYUJSihb)
%Ti+/j^e!WTG.FCr;LrBe!/7aqLri5`9p:s96.G:q(H'=V6'GA^RL/LobtOes<2Lu-'F!?\k\MK0_4kCJLC8U98Mu^kPbo789EsZJ
%*8,5-QjqCkZdEln-<WPN#NN,8<V>CpVkqleMn.#SD3F1N1o<&*Wd3pU1(B>@q;d*;G,A%Nq$S!lF?=2iT(34d-S8q26_?cie;KZE
%$[<!oN/jnVr"1bl.!%6I)aa39s6PF#U$ep8+UO$dM1)&POqdYs0aUKV&o0g%Nj+4;$V<-51Dcpn3N0V)R=_k0A:W:e@uYo7Z;Hni
%@G<LR^3?1GLgl`[XWY=F7-Q/bjd%2A-3c!n6WHZ[;PbR>6'8M_+VKc7N00:[gfWA]bTOHiDp"[a/L_]bc8=NLp0qG!CnX>%*45oJ
%7"7sfZ.Rl.-#AQ&-.,hh2o(M!#khqgg8Q8BR%5i>'\2bREpfn([O;_VY_tbG5BrT#]r6[VfTqC$"4Y4R_i_ls36eakO^i,hW7Y/U
%,FGEsN92n;obAk'3f%ABfbg65-$QWLbYtI>Vub`VN7NhAL0XLm;P!"`]/j?<a:`'`/Tk=/Tio#sB(asCcAum.d&I;#1kiR54"Eau
%l<W,nG,E64$NJ;N>V>::dSr-1^00C%6mbal_lC#196QAM;.2^7\(Lta=[V1jVK.RSCdmqKLLMks!]/bo9iVp\65Fk6;Xlqb.4bje
%?=gEfMh9/Q9TU6e8OO7qH]`_P1Qrr\_UU`838+!7@]6/5MdeRmN(\&#;"_r)."o<0,G^2"-1Y,VL,:X<<Xg;pR7J#c8dX/b3(]<q
%`Zm-*'GiOD-9H-%j)O5*4T7O$0:e1Vn;^6PbHkV2lTB5''"Mahb+r7#@TSgZ0X`<hb:AL?5Hdh7_BfObPcg]%j*ZWUeeL*+1/X%O
%["R,0((Id_>/G\)T%/rL:6tIPI+H/ALh\D)&CiTGVfORs-X#@4@R@Ir[X]bgAS?e"TOF)`.1AQ="Q"\T_3+tp^#iR=G)7@Af";cU
%@6sQcAb.n,4m&^IiAqX=[hiJlNoadrcBe2s]c%Oj@NZ$lRr3KJkF%s]=gl![7mHKEPafL8b='$9Z/sNddjXh?"C+<:$+UoH6W;t[
%JBN#,agfT6eGZ8I*TE>Y!J<KgS98TP6*$2'j>]rG,/ake#t3%N%tq,pV_1`!Y7V#dO$]Vs)8^I41^k-BQM>40;L4TR8NKt:AN\9d
%.8_n5oh-[P+gi_P->F1a7l;KaB%%;JTD?bDSf=%2jK<d4kLH6+PqGW+W*.>/GqUHN]$00c6C>`1`aFnF;0)q.:b/0IVjHl8ThSWn
%%`PX:C*WiMb/b?^&u>j6M!E\$;O<2qab&PPoON8HG8t*7EAX`JE\Ys&W"rrr\iA8,oh&#RC#`Yt?NjWG1Pb)cNF`m#X9E3<-d!?X
%4`b.'8<Yf%27l-Pd?RR1nXY^9]i95uP'9js`fs0'YB_7JWXV1R0F8q<*[K)8T"GZs5iWsNNj?ZA1>IF?^_<#DGWs111dE$9).!cX
%?N5fs'Ojsb't&ZYbh,W^e;/Z0_K1UOL>IjHH/H+?&s*aVSE^u;S>SicS;QL@>DUo_mnn8uRkj<(AR8!b!pZJZTiBF)muCfrG>]Hg
%k$]<rQ>2du!?dZDdO@dGJ,I7+dR<^r@t?MP@2\Vm&o>XIUfG"+P[ge'<\-qEfA%D#)"hF:dE!fd-u.ZsqBYs6OQ41*AoakS+X0UK
%!guOf6_\r#%`<ZMM@[X780sEX0GuihZin^eA".saDadHq2;#rMK=0p'P,%$dhi^Hh9$-?>ZY1>U>?#$qE[O73mqNKX#R0%14D5$@
%9k?_UN(%s$Ur9AaN7iK7gCNZ@0g'3qP6tcIj(')8N=UYKHV9p(F#Hol^lUEk6'3qEO/6aeW6g-?`peA1P#s;VfVa:_W5oKU!/$]l
%1bA_H[h-MJn".f;d?9'V3&]@pK==_ga_OAgir/ISTbtA'O,WH5QP?/8!BbN.#F'TS70W/RF#"!PZm4MP%$jkfJL'F1ZFL[<.rr)(
%&=k,E9(F5m8G*hEZc%`\OHCi"%%?eNAuRl`EBTp=WQmT6!I*t5#XqT&;n]$pqbT/\b)bg<BdAg/1OV]Kf]QS9*b2)VipP"pa0[;u
%i.\UE)B(m(h@T:@18bUrR%[:sk[uGJ1W2L1+E4/feOKp3cAH;b@7?3>/Pl2CQ3;"1MiD5oR-6-6R9nLP0L4-`+0$W]fpH`hgc)J-
%<N7L(K'%'LFD#ha>,[R>;I(Jd+Ugs(OV!d7E;Z(e%-NPMSZOir^RsYo$i6$7^gO$<XWUn>bpkIDb!^lN*$ME9V]+bRMZ$cb%!*>3
%X`qeSHmTK5VCB<j/kmUi<S+^?_Rp<f<oK=OZo7,Pr="'L$5-C(JIi9S'VIs23ZC(-"(t>&#*aV"L>C)34l+=C$>1+fF&5\o,)-KJ
%a`+6p-*?LW,P-Ym-QW6flC4\E!'TepiV@;5>CG8uU3VU.:+hucBc&F"`gMZ.;VmfQQhgIiU&gf3s5;B0$G4Lp.ZlZ:V=`oW<`5E4
%nOH$6R2bO20=J*qT*ArFIT4RXaB#7c;`qG_o.BgeE80rr?<roJ3=:@uR7/f((-JgKRn],$)1u@"C:.*>9,:]>8'-V8c)"SiF3&],
%#s2!48UOTn;59aJn@En)MH\OSSQ-nFqNT6VY1@cg%;_n\<m/Seh:N[`A6>mtF,mDfY3sht<&(8L]n2Qg9J1)<WLP""r(S2F[dc'L
%h]2_N6s&0tk*Nj:I/35Trr%aNs%pK,mIcBM\$'.fpSZJAYKh'iL&106gPbADrKi#I^-94kJ$B$"e*4XDGhRO;HJt2TI/MB-;GKIT
%Spn8qK`Cr?8,DmsrEoTXBg6Fh[/"P0+9-Q=]]]lTq<'q+P!-o^QT(a0^(:')8<3*c%]#:?'#g):=+ri0IYc9T>gkr_E.@6Se^%hR
%UZ4a(L0W(=184QlV<H($h^'4V'8i];AGT*jW;$;Ql,Ombc"A+_6-$;dpD',+(V^"P9aU0d1r"e[ohN@8&mjeW7,bKd<FDQFZMlGt
%;%U;e13LkZBQ'&fY##9%)Ub@0WAd!_Ka8Ab&k%iW_!WA*#;Ng:g&=C7o+$&i1qJ.r"H4u1cAUn5Q@9?Tr1j(jmH`sOn"#GU\S?BX
%4f%3'[cd/)HeHT3\@nBhD'-N841N88]6cHP2.$1;[XkE$>Q5M>'^M1l#pLD^95ZDt7Z5HlING60qYBR>O8`G1b544G4S?Z-GlC$u
%00J1V_YfnZ6^g15cQ='P$%X.'/Vg&[PY)!PBO-Sb*n#<&T0G/jpWc7+.lfg(G=g!*D9no:mf/b^#.'m#hs\/Ja-Iu'h4uUH:Y;[:
%f7#=okl8P:e_,2bSLN2oVTYGK@J>rO<%n)o03]/E8U3$O,M>m!%%kb*pQEP[k'aq0Xh&cGeb4#%+#K,ijdsk:cXCUi^1S<qPP0q'
%B.b/\7%UG23r+I9$!%Okr#./ql.XJF"9!]l^-CK7mS%%?F^S;6]qk09kC(%1_h=@u-$D2X5oN*601GI+PK*Eep[rtFe,6m\gWODg
%Gc\,r_s"Pkn/hE)OKipV5AdH]ING60qY:+q27gCu#W'p,RO&2`=\(.=OiE%B9<JM5k^po)Bn#(UQCC8Hl]$C\1je^Tan>Lng$!N(
%kFCunBfWcl3W):ZT8<?ok;V"B]"PV&F`IBIP:&];I5(]E`ufa/4oXRjro4gpkP)a'\EmLLr6__8hj],_^V9X4jR\iWkP4di0$[d/
%gg$K.rqMdDIBr\15HZWBq]DI&!T%.1rVG(?b?o,cV)S>Ep@`U?c.R:WQS37&YL14*If5&f=6#A6?a"qVrZ$FcjiuEWH%,JPg!/jK
%(O[@NDZ91,c*+nGDn,diq8D/d042mIhdA3h]tSaanq"f&1SS_.e"ZNMltD]Wro'omKk^Bf8E"K\`4q#]rtD<6gtQIgnRBH_WR7m2
%2Z;Y&PPB.:*.H]3.6Oslk>V/rm\\>Knqp"dGCK)LGHY&k6lYRgFFL`En`m_$Z]TG2Z>RVX`ZkB95K*6\X$<2h3rSsO)NHdq]W:^R
%p%nCJ[nl>`r8m7f2;;+MmYl]ZS^Q8joC_@koAAAqs7bjNla&GgENB&@-?jn0`N+nuB+H#if`YZVh-Vce=7*molWnDHf9cF<T>,f#
%r7"s6AY&iWUNUPop"Mp2o=qqT?F(6Yq:k?mJ%3";Lc6r>,AOWerUn.SleAc;hqt#Ss4tZIRMi5rd-g&fhuIDR\G?.%p@Qn[m>@m%
%VE6spcYou#^Nk+pC>En*5bik0o(E+^qD[TpCd'joG5JAo`M7$heEi3ah+sTecU5$C_'G&0h6&WI'fNXu@^giEh)Dg@r?tp"IWP&M
%W7pVPdlXRQ8(I%+g)[P8Q_mKGeuEe@??Ko)g?r_Us-sd(:J,A'<_7;%ptmOnhnK+F'dfg7.(fK!`7cd](3qT,S+l?g4@D4/pAFg2
%dkqp%dhaYi?=!JWNMnS#md<8`EW45%otu`0+jYXfIer=gYLd"fZaMq/%c>-kk"DRirZ"j]qmnB6mnV,60t.t"f'C:-=6fYEHHiu]
%4*uDKqXSaQ*PZ:#ZfTlM:].S>WW2_"l2URTs1A="-iFRF\'Glj>]]"?_d1OYjnG)XCDQF+o^_@T:0KBKd<'"ZJJC]@CPou4@g_.;
%]:-n,jU\7RY*dN%q9)j;[jqnGgi?Ip\img>H16Pob&3R3KXT&EX"^I'(K[Y>gE(,,AW:]o`Ga'%IW8!?=_1m-2rCb.s68Y>hjlq4
%ec4sY#:4pg1to+%cMQ0b5*Z$*pSY3%^:ZG=IeN94p6u<"Z_;4(9n+ZPfY/I)%r(Rgab7sheG%#8&+QWKP+NbT+`lPN^^<0NJ#ta+
%s0]ac^V]41?OtD&0aG0TeT8\L_O<K<rEb87SEl(n`.O0pp\mp82r;1@GN7rT`N/I1c<m]9=:Y%b>epes[[6%u3[3F#D;XFdmW)#d
%42:afS3H'f4h*V3UC[1a6U(@.hmX,A7>fjILTH*Ld>*,A+Wl-R7isL(;">h-l'%CAl,!.Sa_Q:8_Sgcm)^#$u8&+R]*:;rK55L95
%^^kV\)t2_S56AUi$4GFCMf6=TrUTm^c#pcaY1N$F4&>3:Hs=GG?Jg4\Fi#fCkd![p=Z50f]RDuX]Y+(!m?>/X4Oi6Gak=r#.b"4e
%"$9G>eoJF2laCK?kIb`jD^7@"O6BJF4end+lt@Qs.gt#[%fZgYAEdbSgLE#Wb9NX,H[C3jrCOccc9LP`mc)uj:]>f_F*[cMPM>[F
%TA84n?9dZ.45/#@p9UOmCrQ'p[%H`HY`r46"3rRsYEd\F=kfM'ZZX6W:B0M:lLcXj+D\Mt1X0hj@#-dFLYq_W+*&K#1epGR432:-
%<c!nbhk-N`RH4&^N(/"5fq#@XIY,?5a7il8H`%118+q7\LM.LiEonT)MEMUDOe.2rk)\jJ;`u%*NeWmqiT4`tH1qD1Aem;;L_U-f
%Q_WO$BQuNU?B0c,UZ(<IDg9s+Gk?7?I.kR1oS"\h#AlbQCh^HKUs\VDIfAOB/,$j<n=^]9@09Q3!?'O6^kt!W&,Qi=Z">#:J/.qq
%Lpm>mia]lDJ$`l(QPZk)FF*JM&*nI#md\9%n!E&Hc09I5mRYUVq[7F-h`]hU]3_6WMUUTPEI*C_4X)j+&Y+$P9n-bW7k"h!;.`oT
%_E(<"s"QtI5pD8_kkT]7o-anf;L(h4qMDq@SU?/>mL`EN>rRUgY6UO<=$>29dlH!3<B]A]5qa:?[I"6HnWk\?Q_NWY_d9G&!\`-[
%;(m*;8ZeDu)I_UD%]+kL'%27#br7<%?dWSt4b'^lY2Nbj(JjJh0X!^TBg2F=[_B;b\Tu"'kPtDOjltHJIBm;0c1e,K(U&;cfBMNL
%q<#_?3Bc/8=8QlH@/[p3UQtF2P[j>Ig3<jJMLGoA4offDgASGJQg(9'5C:o._9;:B?ekSKr,M887is[/`:VfrguTWl>EpO\Yh@2i
%8A@=%F,uE3n*Nm(\(`#i_ITXMiY"5XA>pU!BDGB`e)"V.4US]i(%TX9U[>\rSBsQrm2Q;\_\?2pM.j@7fl-c-<0'An@0f:lRHV<p
%jHr74&<B"eO<6(LH[LSiNSX=\bqXiu5Eb)f)<C[W,^7HThqreNd:^QA0?=%&*01uuqf+V;1W]=NE]drq+7I5J?)+%Zh0=_kjI[2U
%])E9/EadiWPC27gk//ml_c`$23f8RF&W`t8p_nq`p$8YCT"R2`q^O`&H/i1)l7]>Z^OCTVI_DT]`kfTd4e5W`jM!g+H2bG1oDa9q
%-bh!6Dl`i>k&u1E`N+nuB+MNc([4E=mOoBCX#B"4or]Y9c0]40&=9$H>cb3+nT/W>R<?9fX5pDGCqi!@gJ%0fp\i8`DdTi'.<b56
%N,e<iY2AuO?bR])kn'9\eS4Ji"YS+EE=&H4I.jFom5LMZg`R]"7?IK;)0*8N6O/[7n`2ETA3=!<JaY`o`eUlUm:88-r*RU%h<!lc
%@$$5;Z9/BM.sVBQF72oOUC4:N<s%bKdWQZR1H=kHJu<B>=:S2uI^`UlpKV,jSJBh2LN\Ob?D)a@2\>Aa0>BN^rS>H[#;YE]U/T]_
%<qp95SUQ!4rdWMQ*uD&'[FuJ9j"bWQme-8+T+@*E4>!%:F51A_Zd!rKR+oh*RFrbNZ=c6.%Y9L)H1l`u4hZ=?c'etJHar7r3T4B7
%XWHpXVsV1Mq'Z[o]^'_k8KUYKpT4olhEJWc4DHi?Fh\tb/3cgajTc^?Z$=]*(/Js>MC(ckNC8Ja<f$4**W5?l4kFm>#5l3EQ2*Z\
%lJ:O@X`9IC"+>Z:J\HJXYT>m\?ZdF)\\5OWF3131mPmjBYqL%Hm)kgRc/SHpqodGG&^7.+?<k.Sq"pLY2Oa'Z)"HV`Ru?T4.#@g0
%S=dOlbo4pi]^;l![cX`]0:T]SF%kW]CU\,pX')<Tm\tJNi2S)MZ-1+t^:@Qk[*Hs'?bO09?"8ap1u?ci/haBR:KJZXSt02ZI<Mqd
%F.Y>GeYGqnIlRCH`O>(FmAn^jQ*N'Pg`:IN\p9BI06QT9$u&p<p#Tr)j276M:9Q=R<h5EbB8AS?7'4K6d'u]JhKM?(L\./XNg&F8
%3dpm#JPjfn_0,TM@DcO\IgaqNdIim*A:*5=3H-j!qG3Wq>*1c7fG2d5K`nbg*k6D(`B9a&%t*M?=:$&GR9T1fNb@d)jrQ^-FHjqd
%B.ZpG85%(MhEq9k5GKI3iY1+=^:8F$`r<.NG9mY^2K7=c(N6PF*4UP!g!/pYhq_PoI(R76G3"&>Sb(qfk?IH_Nh#RZq2V!6:cMhF
%Gfb$R<1.g?`#Q%HY?:>C5EtrnRTQ;.@"Z)-_sl,.hEHoVi@-hs8Qe!/2:*U16mcnnbp:"b?WSr()Xd?AI^jX-Wqr*i4&BAE#X<G;
%@`,eRNe`p>EU[-%NraB<boHEtFR#!Q592`NO70.l0Z_bKWqCpE[9cmJrn!FSTO5G0EF"96DRZ[g4k>ePO+aF[.6*X"?7Nnls1SAX
%r6L6rnNT+bleT-dm(7NeXd[4Tqnt*uN'H-'*33*^K-L=U5.pVKb+lk>f_H9XTbtUS"%jO@EmEfd/BIY'fAR8JE^#duS<(psI]UWd
%o=Z+S;$h[f9CLno-/,gC3EG/;J>5*D"!(gEhDslcK*F.Qih`n(Xn*C0Z#`e7(ojj-p\Q[Eiu"fd5m6sm?*MANSpcu(G))h.m+][1
%5f;.2/BUgk46gSXXK0$I<6$#uGGJRcIWWW18aLfp8N8&h4?/hJ:-MgCWHtpbls/.&=u>qN'X!M4U9S;?7uPCDlF_mqk)U:;UIA\M
%<p")C3*J/!(6*aLBE5K&n2;9d4,%,)aI*Wq8pT;rCV,GL4FCAR@t<7"*g`^5eT?6]QAu];cG>dbHM...lOTa8m&5<VFKCFDOHm(W
%]rh:LCjQ$/>N]Rgmo"m(elB4),OI7#@NE5<HUH,aZGKJr46h/W?/Jj0,TQKjrKtH!hqPp1r&jVb'qr3/I;da6hMO`_WdFW@mX<_S
%a@CsQW:1fB^8&Ph<;7ND_Nu*9T9MJ7h\[YeR=7@-o__^/VL,K,4a@J+bE!&oh]9*eq\Dt/UcKJtXe!KF[JZ^KmHb&?kRm(:CGsjm
%7WeE%P3=u.5!$!S?14g=o@cX+r$,ZWC[;*mk4QKak<+J=P"3<o^0[Kj+3s]=!T)=]3oC6JH=bV^m/+V$&MS0C^;-r(8;r=EfV^Ut
%n'MgDF7TP&mD1iJMs%n3R4Ans?EPlZ[,Y=^CGs`BqdU_%2":0qD07NkkF0NZ]r15C.pPco^H9-C5/7$Tr:9c%S\=.Q,J0E%V^pPQ
%mlnLuO6lYMq9?n%mk7J_cEGNs?[[+orBXaMdmj@UF6B05n^"\J.K6kIPgbA6bs_8sXfjEG*=Q/e3pkb*#lZdlM0d.`*/[/_S-kX4
%p86BnDuR2BPjT[rI]_=6HdBQ0(oe(#Krpce@kS\'ij=,THZQSAD@b!8[?`>/o$u!RHg#'cF1=AgE;K9rSA'5fn`o-&C[Ta#FB>eP
%_5ufue!GQE8\BJ#bP"$PILcb4Et@:L&4(3AX(bhr>d)h0B4nEO?G@Z[@'Mu'`k.\jji-ogkm@F)Zd[+(cYh=l;9bQtC/WN</ber6
%\#Vn(Bt(.BS6l26qW!ItFFiE$l0V*jJm7YX9&JEqTE!5pZh2M]jlO(Hpra[n(8ob#=0%AZ^O2sl49@e!-]\>RoFWK,B9+JSA^+`q
%`I)[@OXR8r@G_TM>@BER\58Er`taJP"<fkHU?m`uI*KboPcNu_@o69_Q3S%\Z>*>*Ik8a;O9a&P;_6([aW+efNj1#4)n4(eN(%_N
%K34@<9P!VFqCras?R=uI/BZi=\&TDFZ>,Hf4UZU1YpaB7F"!scI<oT;0rAR5>/%o=g>uKZG2]N&&RNMC3'>-=_c_d+3f74'i)-0d
%!q.cf#'U='?hmO;]+4@#>@Rat'^VG&=A3]^o/XR6Qk^W$HL!Z0c5[_X5KDtgPZiS'N,HT^3&8&iUH:6BcKK`Iko\^QeShWu(rHG-
%&a?@BDm',iH[4.'HLaJfcR?q\rg/[1qYY^-#Cl[2a/cC^0)JcM<h01o8ZD_;p]$KWTDgoI^\W3/I/<A'e)ngq55sd=`uk7EYA)S&
%+j(nk^RTNg^AO+BrEK<RIs0NVS%/91o,n!Vg:ZXqJ,*aR>CZI4d[Yg@>"b@5P2BM!.IaMSr5rmUX15(a0nFeIjn.%uc$m[DH-T.K
%=,?\qI^uAQnWVBsR%@':gZX"$,S+AnrR]0B+9uWG>ra)$hc&#'h=qka2uMqC3uPfQW(0WGWPo\<c[S;(lSnB4me(>gb<HH`<BTLA
%5=<7HQ6#YUo4bc2VmTlCHC@e&4:V*7r0(G!lM.L1_CqAos(]62'K1mKdeLUl0p:VcI,I;rg$n$h/\98:r78j<0@QPAp,26Y?iK_e
%:<\X@[r`"JpI"1pKoPo(d3a"u+e(C9^83L\`:pI-l\8KInE9iBMZ8pLr`%&&g"D!R4aZ+d^/O5E/EjEQrTsITj,_o+H<Seactn2k
%X8>*4ig5,HqgNB8_OX-dM^.6u7qR,<n(AhpKq@2.TpD0bldpN&?>_?>(^iObhU?l@l11IjIa'dkp?%cmdBeW&89il1l2Sk.QF([V
%\jsWgT1ZIREmI\1*dF^2IBc<=(AYpNrVh/O]]=S4<SZY!\CqfNNUPJK5!Q_k57d^4e&=usrm\.!o@rU)`T>(lq%m\AQ_!1:rq>?j
%s*N&]KtmCTn,$8Rhu;[5S(h"od7`dA?_tAOrnO]7Q`k;c6^b@K\)4N]S',Aef;Dt_T)\f_`='6"J+;&GCR4sAnW3:b5Fp\\F+3h?
%0->Z&^MJjNd="Fgjd3a9I/37&>>O[e2dB^3FiAfH\c0@->\F"bo>H-:\C-$_='\K=\aSb@5_SMdn$UqoFEYjMqsFdXh5?/e4auuL
%:@?urG%RQK_nZ0!8k2kl:lsk\&Q4K-,5H)r8:Q\Q2#?9c1rfIkiD\f<S0B&#e,-!_g,\GOm6;D5mHc[cIJVV9T&)Y09.=F1/&/JI
%IVWN'IrDI-_nW[qina'>/$W1oj2Lbojn<HDDKpX!mcX_mo!c72pU%??*rPDtqW:KN$/3'b5YA8o2Jqh=r]T<bl]B)YYm,.!Bl!-Y
%T4B`Wm;R6LDuF[$YMXd!fn3(<hsGoaENFV-[M\k-mf*PV7,f0=]?,9ZnMJdX')fr,J%e%a(Q/+o@aJC`of%B:-nEm0!ZgZ(0TZOC
%NrG0`n`kA:eY1cjXpVa$r:UTX2P5FOQ[i;Bnu/)<g=)E^SP/K*5AdeM("uIBBe>SQ.2SV"M5kBre?e%FHsZ,;kF,V`K60$;N.9%J
%cA#<]h:%Z6cKXPj^No?5rQWZJER!3Gn?^CUo+O,W"4WojpV:WCIUuAkmV+6*o?XS4or\-;oTqaaZ(t*;I>@R_f\pprrm=.qrq9.a
%cL1gK*1r+Cd"b0TeW/_hLLFUSg&1^<Rob)'5J+ISd>,e)F5;rGS>,2=ro*T,`P6eAF*j`L34q!C%XrEhp%_[]rh4bj#PH':+"tsT
%)C&DQ?huNb^:=%trS,'K*JR+W+mWim(rQ5q^4lG&IeGL5N;a:8,TCFf:"@Na0<'He5psdhld;CA-G#GT&:LM*16gcu9qVqgXNJS]
%H."2q-[II%\[n.e9_8XC]MD>$>)Eq[X%WpJAD*\FpSfl1Vl#G8VbKj$hXb^`)u;`F@d_u8";t@W"M89Q!O$W&+1iJ%C6@bsANi)V
%hd"Sfo%r]!=o["Vm7a_?*6OhL5q'G_0-lm]^r.[7]uac1)L[_5^IDl6T0@nR9[CPKP>63C'p05/<LQ$6Q2[sCIGEq_As'6K8scqr
%VBu%?o_t_6?O0uYeN$/"p0!]*MY=GmrsDNqK#]A5:#fu)b>!&%LHT"b149&NjpAb&Uan8lg&la>p[rZQ\%V*C=b:T"rP@OdXpW3k
%`O@/*&ED@61fd]SL[5BaWh8LT%W2Ue]m6'PlT;Z7iiu4"H)JC@9?$i>[NJX32?rkDH.r)%C&jf0@k9FIlkZ+O:9/50>%2hYl/0/B
%3nkOC`%0TW73!8A/*aPJOtLU3Z3soK3>==,f6qGAlpnfXdr3VmBjA:e@\&*g[i0ijIZrA)qU/+ba<&DKW74?7T]Eo\<2V;E+S<,N
%dC4(-F+@peV\nHb`l/2M+n=2GZ0!6?kk\[+lmFY1Oj7WDm*b'Rdd)PmH9)sl,!*!Y.)ZhpkYi#1j$5.Mpq].Gis"]5Pj;#Op+B?J
%e*M_VO,6'9p>R_a9(2P!@UWR?\M!Rf]f2f+?$KME3>5%m0Hp-_dk`^Q<V6g*cC1+D`YrG_\UQu7Bq%F#QJ.CYI(tN+=/Y_>d$X$<
%c.[0pbu<*G,+;N@+!U^8rBU()j)i+^^$:%#TPeV!WPn2D[84>*j.,M(a(^E)ltSs1S%Nf_0`niNF;p;YmBOK`#;QOC>mTq?TMh_7
%Gc&Et5atqAA_64)S4\+6MaIN7C6hMg7&N.33Uk2eb&+?QoD9>r`I+s8rfqaU#mkdgha[c9Rp#(Wr(lpn/erRjpL?)DpJ6niehH:d
%V'aYs3d5PNcKJ&sT%>D_A+03,p3kuu#%Bf9`T`!K`N.Oa#QHX##n,3Nhl/pT8=gb6Z1Q=^Kdt#6.6TND*?fX8(id9(]/sW,SZ<':
%bX./\_^6!#o2aoB2"WRJS2E+)oeV]jC9IM%f"FB/",)fn<G/C\%JK0F5tiJ?8r\*4[=SLK3a53V-P6_l`f<:$j==g^-U-IHYBtIB
%k]RuZAG5cC5"ZeuVD(+U5J_R1C_Be0/t%NI:ZmLg9bSqp?6`aQlJn78c-j*:0^/LK3k]R8]':dR<HGS6Vt]?nHmX9ba/F('.0Mdt
%`Q>SbV96d044(=i(YDfcGM+F&7A2AbBAu=lDn4@aj;pETC<eCMGKm&8m!)q:Mt2VqFKQQ9T:`3;cJFtK6k]#PNdE."n(98KYJ8kg
%K._pj?Kso[PP!3\G>@qK`HHXdY6h8Y).471Mk$R/+N\c7>,Fm+j'B6a?Fm!\9+3uG$(G;M@b'p`OQZB,S!3M3)f_+*+u,/r!c8%&
%g,aTKqtQ3(<bV>0`&@G-mgjsQUtA2p%j?dH?^!OH:)11araoh"FIjgm/cBs%NA5R%8:1dM]-[?3Feuu1Z'&e;-a.S/cU@9q_3Qko
%<o8%Rp6o6+rB"TABDT>UG4YBfQ<E,=/.8!35dgml#%(D4nt,K9iRF"dgFp\&0=KZ$0[do.q37<@iY,+HS'Fs!Gc*llFa_iW=&IRY
%A+*:XA">Q@SZE@!?i,8D#*S$Cb2)r.lPF(Ji;9j_MmT19"Cqr<M6D?9qR*SX_%JP2iOG6+q+deqQ^TgF<2'0]oo%)<mnUV^hd#!M
%3+&]CI`oTLpRZdTDo%DQH*`+ui1"g[dug^!8e3Nk.Z:.Gf(rCbg2Oe\ogY;h;B^qGfD/I;[MhZH%[g*\d1,piaA+@\5g7oG=h2E5
%kY*;GD:Ouk0dgmrV<$KMS61^5HeXs"]$i%`/@"ffbb?%*R/pXB8G^G-jFSd$f4aW]X8FFT6qHTsl(PD0P)-L\^%S?L7#6"/k0@nk
%F9n"S#[KraNAjAK[A8Y7TXo1OCmOLmlM@s_d!&p7ktZ7tnD,O[G!G*=M]mJn00q^!"+"<a^X[R<IKO'E4@f0nbcqMiVOLFVErD:S
%<VX0Y-J_OHqfW]"l3638LqJtk3IAIj"#UD@M\,<u(f4b[\c5Ta>uV;Sf>eZI-0H5CI\Q_VYFA4-ksWSD2mIlQV;%t1r<cgYlTa%7
%hGk6?gdk8.JU,_289:uI4J#OW'C.u>@*iOk'<@Ar/+fq[=A6#iqTc?lK.FII`6`d4Qd:N/&j,PLU.+B0mgb-?l:@Ohk>ts+,:CMF
%;@4ViEfLj6<91"S$>$10,M-Q1(@13?lpmI=6RB.u^.18+m.6&Qg@tOT9fVK8I-n8JYB;[/#V:)roj+rcYTf/EM0sP?E@b1'SBC2L
%Dn,a6.`UH2T<a9>LC=u\eWkBVS?BY41i(j,_*lENLaH!lYJG+O/A'n8Kr5VXj"jU81Dr4Z%TZ1_0UX5(q@57&rW0?e^$Tr\K.F7C
%8QJBCUXWZ&qBHO=X8QJY0a5U,BN#jqj$V%b2H`Oq`Lnso)[gqgZV7S0G0\l6(LQl4m7Z<h$?&(6^.'#**Nsq=8W+cc7_$d#f/ZZ7
%F)oKI(.QN=Cg/T>p?e;>-Ka-Gf^)Rn2b'*A]#;rqKDt7#M=TVVB-ROVf2($5Lp-@Mqh_M)[edCl'LCMoM$1i.4CG?7[*JCrb"#JX
%lf@?8.)(m!g1TLp0nfdW]@e["]tZuOV<2&AL.`63Ts0*I32J\E)+_-;ZjiuPkoO@9U+>O9nM$lpYB+;C8Y$N&*?A9=)u3f3!3c,\
%9&_*N%*Z8ZbT>T4pss(nhb%?EQ#OOaGhcRroVY<DI=J%e5OrM%aFMiC[-t';-+?+agM&=3[m=JK&EG(P5`pYLVG>?'9H;PS0&Cto
%E2shsE\1R4mlIMm?$VFp$R@5>b[;.%=+0:[s3"3q,mO'7WH9aO&u\,EQk%lDSBNEmiSrms:YhlFs6RF3GNqf//ponX)#YPl).TmM
%P"Ll^ffA(4M)I7MR'?J[rp]p\G<W?*+E1Mb:\VEshJkW%iM':/CZ\T:n5P`7/1F*C>f`%*PJ#jdrbuC,49Ae&/1nRQ$(gF2a1Wtk
%5XnV!+Jg:]3fNs&l8fKKY[k78NSFV!?u#*fL(dkiWtpD=)[E.pDPEm#%3p561WILNA;$(.3R5&T7KuY:_T:q(73;CLIikm=3O`KL
%X[Yc^g2k:Ppqt22WUEqmW:7cJV#'#5h]U#Z#kcODA+"j2!eR>a4)FWTk<\p3!5N.p1eC(jSUU;^Z<)?&4k;ZVK2/i*M>d'X7"(OV
%24KRqFTY-0/^e>Ll"@d%oZ>^Cr#iO,\F9"]j#<8XDM0=d^EeBq?UOeX=qN:5mNiZ6K0l^=EA8)Aoe7.;DhMQ_IkA@D'eHM;GP(@?
%^IBmu+Xcf\h(p(Zs*o!35'eL,]rFgg4KmI'f[hiEcNj@,G8Yu[5V7C[Z0:BfK*P-LY<DqT3r2E0"Sp+Gc5>*%d*[F[^H1XfTeO^N
%TNLK\@uh-q'VL8HbeY5ikgLn1ArktZNh(oPg+b;B(DnlY7sLU0D/d(:LHgBgFiW)VRU^Ru7e%hM0f7"k=<slBSi"Ebbl<Utj56t[
%5,1\CfkHg[CZo<?9EFQ1%pNS$Y7,!jg&9DAk25;l0h6gD8hNSbs2+%R7_!<Y*(3K??QW3RkX_69.j_7#@)*^<%>4\As,(/Do"PG;
%"U<q?J$#@Y+SZ+g<!825s(UQoLYr`@p@/R1,g8oIpAOUe"Zt)i$:*':ru7]tQal'?%AHbm6QCg]2#^G?l`9K+VFg@.(3eV=s*3S]
%i1\D$#=2`c6&us-JZqa*FQ3Hu[ChJf(@e;\pn$_Aj0d^E%@5FJ'#T/je^1.`C):/qgsh</[*9[$)M=r(R'nf\)Y.`ALkO'01MuDp
%cc*d7*?Fl:LH!u.:3o;)d<VNOP6hH.h`(q7-saY2T,KhtR+6>Xi<B%flk=4M;,[hu$7^D-HHsCjO.Go8Q'WR6bETStb/cB0ek>E-
%LBRY*4Qu"N$Y),c5P4.lWepS2Ol&EHOG-R,N=_uM6>I$JgX>5A%#:ZSn'c>h>Ar&@U\E<$^4-utr;hu:Sq#\7T6>#G5AG*A<W-f?
%/3Lkn_&!Ln)fYOJDQgT%mm[rfdth,7n<:^YC"]s@qBc[O2Y*Pap]k?!j2`8Ap`$12T>ME_U(#epD%/jYT$&2q&pB;-PL;151bs:i
%$$m4+I+pJ@XWd\]B_`]>R:bigqVOTe,-UJh86"de_^3#[#!J1MY?Ib5?q-A$l[#iI+\i!CaZ(h/CZMTId69,]Ngb^Y@)Jo@"MQid
%B#6FG%Gu#];0)3)1,coDd,4kH=S^125UqENE#N/jb[C.J>8ai3E7IQY)nFAH3/M,O@b7<3aU]G2A0OC1+8E)_(Ec:'4cB-nQ]CId
%"4[ueL@pHg%4A&CQ]Mn!Gf0L#+*NDM#8eFb^bJ!;BL107]%-kRiFP=s3kI)78>0TWcgnR\ad!pYX+uoGXWtlhNeX,AY)1F)BE3kr
%F)[M/kAc\"q_LCPT0FC?PTEH!W1Nn7"JpP*HB,o>a$nC15_ZAGE,nJ,Wf)GR;q*/EQE)E@Cogfh,dWATWr^TViCg%2"^c!LJW_(g
%0g&]*8'`Jb;JA;BC'HRT8Xn*I]s+.3DQF2+(:Ib0SQmEDR2]C[MAA#Pf(!UZ+0>R>UC5N&`i<s9/;V=M+5J[H[Kiqp8].kla*CS=
%R8[aq-2I2N,lsc45A<h:"JfUUNl`d)V.e@WMg;bM4%U&0`f@8sMjPqqbQ3(k34%oF6NCuDG(j+NU0>mpM]mGiA,$RU-KB0OQiQh2
%7\;Q63*@!:%_r[:&hG[i/1s3c\<b7$5bh;'/OC;cUA0-P;R)@&U#F]2[I:[-iWrP=it&Z>2K2\=i(5GpHDIq?!I\iuB*&spM*c`s
%=>O>%Tb+3TFI3j-2-<:f3fl@9)m6$i(5Urr/OH&_`c6^Mf-:HMkBXmI%%Ri"a<;jWS6**MgBPPb<,gJ&$YdCX_2>T?@?Ia2Z'c**
%BE3b3:eXD_$(p+o!3Ia[71M*rl/84lZh6qV4ZK?RL=Yo$-l-)q*LJ[k9#6/!?+%iuq(=l5-R$C)issTdmbg?f>Yh988Rp\#as8s*
%$P*m0":Nn?K`RYS6Qu&+gLKJlKZ*g>Xn\'f%10gA/Jk8<0K:?="HMXSd8/?7AL/X>a(!'KX3!>oX`OWDBo@8UoEkE_OM1a?P#f$e
%S9=lQ)\XEgM=)DRWNA9:'*lHZ7N`G3=u;<J((+^gMEjNKN1M&U0#phnq4:ERm6X'_PP.h.&q!<h"Cbe)C=-E]!"MS9q_fBWW)JI9
%(oF.:(<IW/=i)(,d!h"LeNi-L5YmmC:uY#Cfuc9%/_?5q3]WmrM+l?/.-5$flGe?]E4'4d'kd8.\qQ4u\bo2&$V)\tj"$X5CLU9[
%`hn?/TOUB?:-YgNIFmsbj\M%Y"E)#jE%#"Nnp>?IBj`kN-B&5`:(gjK9#J(3(+4Es*3H?uJ8_6E:\ZWNDa(M7a2/ETSF8J>`,24u
%+35T8[b/MicX7ut3*thcgYr)9#_^_b/XqIH%I$jO53?(mE#Dnp&.06TQ;mUf#A,SB!S3'p6Z3p33=smP/PJ?YX4FUOL<X`J(*;IY
%AW<dB-I`_B8r;kV4[@5S/Y*GRV8<9G#L/*-Q`k<EVTB`sT`6<GF;S@nC;C#a+rn^F1t8q!l.AW$q53Pc1:5:k^No1)#2tZG1_:-^
%lO6LHKWpq^[6-0K(k'5JZ%P4thSCF+?k8#&@l!QVj(/B0>FV2rj2JGWUb+1UPcU.ki&GNha^"^0Z+Au,+XVa$dX5Yed13h4*^Ie8
%+bI8Kk:S<f&dmD=$6dG.Qru#H\>qI)Z4Bn_*"Pn_]-LTs:G$IYind%dbo'YjRscau!,Mj+B.0%I(M4XkXJl;!bA^th-\6gn'?VgH
%M`X8aa_9^pl=B^MQ,WeX6B)lX=,te<?2YTfe:.LThcXe)&C]$0Gn"d*l)8ZN*B3m)eA&T#!q=gJ1Ec`X$hO1X"(gLh\>8.2htP[U
%VFWuE9eJ@9.kft:AAOmbA5b*h"a3q%-IjhFk"ZOjhpsH`U-X#4/?;q`\04L@Mj^ph\RCi*UPfFmUV@a7Kf`XV0fNKX)>J*Pd]IgM
%!Q`>_NA(!0Og9"C@$X+eOPe-ZN;g`/L3/+*?WcZmRIG1?:Hep4%K\%$fcbS*pL!n#pDL+Q??NIjNgq-5B66/DW+mi<KiOn4Nl)q?
%\AgbsAR3l##a!i'2=b%>'c>?L@oq8:>aJ_U@49!sS#$$JiZ-o)9LXcl./Hb9=9;Qe6Q^:?8%Db'E8r$l[0<$CN]-.b:e-[?@"429
%Ub^/[A!tIJ&_jRK.0okp2=?J^mP5X-B1l!+X,7fd"hR[;?i\gRLL<hX\KU=S\O.Z<Ca[p2R<0R[0dK]-,K4ZYi;Whe(cH_DY_i!n
%(h7m#cZY!.MP5G8.C@n,!CYri"qI!9TdElG%&75$c:MYh$<,ST"cE-YQI$t%o\Vr:c-Dsk8rJ7,3Qqp'EJ(@In'u<!)r9Ac:p9\l
%nF85KW:p"q]G2)QrNC]HX4DL`fDN+m]^3Dj(&?BQEQ5V?1kr`\[cW*FX4#%\?-ALZ-1qld4n-QT=a2(]]%^#prqamEgqooF*W&(/
%beIkYYMLuqlkB9g/[Nq#F#.ajq`d]DmdcG-lD;Vtil@B7&"r0Irq_+,Wlg=1.NSEL5;P`L$)K#WhEKu\(XNng^@7IKls&fCkLVZA
%]On58;Z#uIis\L5p#!k*s*[:_q\nV]qd6+@"-&AV,T4?`h>cl\s*^`JoZ+/9"jHp\0KIE]l$%KVf=uk4qiA&H;R_<s("c>\1r%>8
%rtBE?!<(I+q7fRe]Cg[O"o.up!);<=]D_aeZqo>OR5Ap^JaXG'F7(.MO9%]\[.XIf5*tLX"XJR[eW54!<5J&?3L,<M(8-Wbe$5KZ
%NQ7r(d[5ZdIu+9]Ge5.PCB&CkIl+1=VdDKWT)"^4hV\acQffj-HK8f,f'9r$:?1m-^YluEI!k-2j&E7k<.DA(K7;.]L0$[\mOnU]
%CTU[<P.UC*!65%W"#F*13Kmh0\^5.61'3T_1i'KKGk!>tq"7sqg??:@NbdHOPC)n=6eeEG9J\FpfoU.&Dat./>SDC`FWuU3>.<(@
%KHadP)/PYrnfrLhmSi2VeEtdINBd6m>%jNnFW)Kc*;"UFIda1i9Q,/;mK8!OV74Kol*2!aCpj0-5d!<M=Tu3"V:Fqr3GtK9WpN8r
%r79Y=WV[<Y4>:.0;RJPLZ.*T3a43ekh<GG@Phq:nqn:S=OIog^2Br5C,7Q\]WE5"Bd:Z$]),k7b>-CkNlaBI)Fd7GG*]o?rUcVi4
%$r&9qHKA2,;iOcGpVO]&pZ7BDrY?++Z-sWLd1NhV^0E?9#g*0hrA_8Ba=,umPW3#G2+(;l>kP@#)bAkIli,Jrd+L`Fo-<X#S&D#T
%GjRF_@4iS:.n`OuO'8>]qla<O?Z#F-j[QT($Tp50Z)tk1!Dd?$Dh""_-UVW0!Ujk^>NJcS\CU(,]>Hd%`VgW+6s/;9^FltKi@dF%
%]7U5=IC6"+W?TPYG=hA;_],`:UUlSOI_/=Pm7,Bn)T9,jJ(-MrUkaRIGQTW0CRo@T``Esq7J7f!.K<bgg98`^_i7?u6c@Gg$>Sq+
%?NQfD]<sk<bte<t,5$L^,CXPhhJ/0*?OmDFGn0;89H#)!plaJ`oUF)*4_Fm:@?/)#7&E.P^ILue(#$]UJ<O/XZdbb@k\RZP<j'VQ
%J*nruk3fZ-V'\%jaR&DT,3Xib5@of_].RTp1H:L*SZ)23CIAHEV="S:@uC-sdX52RcX*[K_:omG9r6NVoD@"*[JqG%IjCNeCV$5*
%d,@JUX?mSM&6k6LP!"uc.R.e!%Ks$OnDu>B?6"A@r/^<*f21iI(hp*([W7uX6W6BDm0>;%-_sbMFo9f3Wi($V0XNr,`S0@I5oeS$
%N8tLFIXa0HfWXZ8gZCF_Mj)R2[Cq$qf,ugR3:!H29k$eji]tbD\Hk_c(ai@O]K@DHp;q(C3?DV$TA:JniB,Y'Pl5%-_=q[5rQlm\
%@B8nK)KJrUnYY.OfHl7HeH$/eDE&N]4eisK6D*ZC.ukU@rRE-mf`=L[Tsc_kS2:Rr=CTfCjmF[k.9XoSaQcQQ(;+*rE>UA]5.A\V
%EhiA4Jj>AOkU4j6O0:4Y13?a$?;L:,2<%h@FTKD_YO9;,YGKN;(Jh#\DHpV!^!"Lp\Lqb,Cur"en!"-@$l>\UCK+W(m7s_=BRU@&
%_UCQr:,f.-i85ND((7g.nsbn:Df;b>/blO]:TF0H.`9Lp*a_Xi4P&p!Zs8St3Y@1\pgi*.[?Fn`:&G+=7&rIYGeS">IpLZLkl:@9
%jZ*+C'@C/(lHel&P?e&>-9D)#p'Vec^2G6ZnJPl>G5'#pec&?#.]r/P^qc7"kaBb/<a'F;E-fZNq-ba%bO;pjMhN.9cR)[ReRZ/;
%DH6t5T^f!dW-P4O/K*VsS1doQ*B=hqccH:B&(0PrcG:4G]k*blpi7^<#Yh?W5/tekZ\T!Q:F+KH>43EcG'hJE[8nrCL#_!)SKAXW
%B>Qhs/f*!<KhhU>>br1hmHW#u[]<48c-Wa\SZ4hjU.=htSOZKRL2/JY6utB&PI/9+$?ZbC??2DH+.q/0-,1\XU_k;CCu\<FHo6<t
%_s6197%]s!_9/=qI/j)C]n)pKn4-]qmq7^8M&XX&Un?F>ji2Vi$L'5-1]#o^,AKQ<n/Tl6[SRWi^HM#;?g'Mc&>D=pWenJh/tkS9
%\ucdAcdL>_B^Meee:25L>"ptt,fQPH`E,qP-H%i`1*V+<C*QF4AB6]n#)XR?@_\@6X`YSDDrIYogEfKujcOoqA$ZiWaBqXZ\;oZ_
%WUfVtj?W66Yk?hoTjCqD_ur:F#W(dW,+_u/5JO$&YP=L_j&[Q2,5e3mpu;V#HB%(][SSPUH0]p[K]&kiH6?RI:ZuY]g4LXJ3:W&J
%2(rmM']9Kaa>:G\bLPK&86je_oR:,LdMXG\>W)<)N?p^ta$-SQ^Kct.hOc-;68(%iBl9F4@cOTIq@;JZc?;bIs2+,rK)QZaaBOm%
%SaN\b)R^3l&5N^cpk?h`o6nXMos\85gAF7CW(HAO]ep4oIpq[4Z)l9ueKsF6agJ<qme4i[muBZVPT-;\Mt\Z3.-;])"p)ON>guK^
%eK.@S(]Lc]R=_mi-8eNa=rJOBEtq.X]2,8<X]#U=.6a;W)!Qe]$&d>[@h[\Egh--.a&69i(JaqhLJXC7o%DO<LT-oGA&PAsT@W9j
%%@l6-,10e5jn56s8R!73a,q]?#LaokbiHg/_`+QdE8H/P.c7'CN3?,5UC!"/4N<.Me?<Hj5PH"`c(NAOPLIs.Bsbu$Gl,c*^q:/6
%@]*FGnLG6eT*e)jeGIP_%g2Z<8/@_K4Kulp%2LUT2`ZV)Nj?NFX1Umt5;J\%%`frT@GWa:1<X['3I*-_c_&:um^<$:+RVgST0?cs
%#F"f73ktSVf.$[Y]C5D>h:a(R)lG(Rf3YTN88Ou+N>4`S4>JI^(dB9;L[bBm5(rLDiL.<$n-Zp8!H(0'h,>LPRc5TW7LmpLiOke@
%4!5]?#u:q/T)Oup?/t=Kg$KB@p"t(*<8MqJM;TGkR%t6"3+H[aG3SC(nRfEZ"@<7<Af:]Gl'(JbQKR<7g+'jLC>)uYR(86\S?L3j
%QS'&^XdOf0-IpdoI9LrEMf'?*$ZiZ-7Od#]P,Fdp3OtA8h,rF<f9^Z!B(o2oI`3o"`L]#*g@h=NFE>d=`s#s&[="=2:TZ1T];b4Y
%=JTe3bIc.s0Pe:eH/(O99s*'UPAF`OXcc=(B-0A)[9L>?%Gb8tHHEkSkiJCS1\OgX+oU-Km1NduT&OO+Z<t]+;s0S3jt,B5R]@C^
%j\JsIErERrG'&.r/nU;[?geo)[re*CGq%OGQFb2iG]$s$?^TTHenH)C=5i-;TV&:BT"CD&Wd1jKcTLm+:[XK.JrthV>fGKH:T^_E
%Su[PNk\g+^nZG<QB&7T5eZEL3iB9u5:D/k0$AaU<[85QPcZAVK^>^-WAY8>djd#JF2&"=&00I0Og"Fh@[aq'X456?S>-:gs0DO%Q
%kNf`UC2;:#/@h=keAG2EDS)?O:9Vtj3q8\gHM:t4*=%CsQFEJ;g.!]eh58V=Q.adalJD*+qg,U&E8AKNh+Dl@>A!eEaW)j7a_c7J
%#]oEMbrrOpl;Ak==<\rYH`M4EKj(A<*knX1>jb@bZ<JiCkP5;=_2F7m>M!n9c-<]bi[\ZllQoE"]]F:fhPTO.CN=k:A@\#ho&pO]
%>0FRsA3r*9=`r=MD^Y:"Mku],68X/A_);p5h!ljVKsi_Y'3dBp&mm/jkYE_lq&M=W]9%M=X,0KS73$\``7NT2$R3(Z\>g?+?X6g;
%54@A`2$X]AH3Y<8fS4!L[Kdr1%RDf3<f\u9B(MB'c/e:1h76^5h3M.5\WST-T&[BXim)nb<19B#aR\TCb%C'j/R<b(o[8LnQ+_9:
%=C?]eH[@bE%ooh((D#j1!L=GkNc==?bA]>BRI"_o7([9sl6lBWUQj=]`StZsbNFaT=IHV>hja/BN.%s:89HshVtSQqq)VHrEuH&j
%'V&NdB3P;j3&X9f*_(R..RdSn7GBB6=8R&m>gpn6gWgH1fJ"4YTf#tjV3[%QM0*aLfDgZO0kuG>+&N!3'?+&c3pf)`8<9OGJ*bbo
%F#32cp.6<4jibZdI'2&b//Ye4e`?fW$6oXplu&Wf[nZ"qQ,H#j,.j&_D*>KWXT]D=]p&3BSb0a(B!7;uDgR5L;m$nAe^mIFUn?"B
%,L_mXkJP8MDg1k(ZWWf'*<Uo%+ZO3A\W)s?)XV[S!bGjZoqh927sN);<TqmuDkfHmpAOcl]g%78jXggRZAi`hZKb+g+,\_3f&lI,
%bI+17=-Dh.(mo+m^:Ja#*UNWI6TWJdDl7gB2gY5KfC[2&G&FRi3`f,ce7U^O]"$@<9Uup-8qjp%F@"Z_`/X]>!$gn/6>KpBB&qAD
%&\d_s.kg?I_%&"Ec&tuR1Y8tFUaoMZe&T`,I!FLFBp2NTXR.&nbpUt%QR?^Y9h;#a'CJdfGNL$[qd)*L9Z[-*Y+D5u)_hZ>Ku/6h
%qSWU^"oMCGd;mB>hZbW^#qmNh-hR0rRFR9tI\BkH,t&fFPDER>`Re.e`S[Og(/f)(7cUG)_aQ;VR+p<I9GCOu:5lsLdlbpjWVONH
%e9%RuD'VENl_0t(Dp!tQ4*=S1F:U;`O7D7p\9`;BRYae9nS-gXPmco\P;k+Nf[Ou&^Z?R.m;_0R[_ZpKJ"_XV_XL.'HrnIhe^>uI
%L@e1&OFB'8r)fi$6p[F2MF7;$U/gWek!jMQ9okiWb_<SY[U-g#VeOk>@,!2@GaXm<HrA]QJ-rBAh6eL#`PUCr$L=kbL0/;P=2Ro`
%]Yi[^'qRbH@)=tSqKdYs@mcr?E)X\5-TK0ZD^4\RB+"k7L"[UfVD1)b*=dg+)B^fS;daP5*O!JmESb%<%L/;)$hha1X+Sb/C#3g=
%5ISiJG@3E+M8<[P[*:7UT*>jr,PYGJ)j68+^^knfE&].OJ[+fpGrSWHQbQP5"Mf9(iR)oO)N4!AEo.23_(Y(E""rYg!m&oTWPLLX
%EJBY.i->>2Y-&9Na:?NggAp(tSiYYBjDi.B_pa"MkmI>3Q`^cd.l\"09h:d>&OhudbPmfd$jC0tB$CC2;'`@:R0P:DN]BT-&AMnG
%1ic*Y:e1j/>2^)&2;l?T;=N-3O)`%%!AgMUC1ghYJ-+[cXr7T#g5%(3$DB8+qS<g`_Z9ClEQAtt[+S1DGN/V%S`A0-[i'55J0WV^
%*7>e^g^o6J0tCadV:--AMaK[0*'E/PT-ZH]b*ugf!%en@kBGW^5K)VmI.=dX;T6BT=s196b-PWLXNRrhFrB&%IekXE>^tNP(O2i@
%B$o&GZ^j$Y`I-@+hRFqnE9:]PJa+=OY8$DO`VJ#hE>X\ucRq*X;k'-m\i^6\6GCWf?l,EW@>sc^a@V2C@S,%HphD0$B?<T%?%3Xg
%d5DE!]6q"j86[`GgDm\]*\#A8NRulBgjES)DWc2ohsKnkRJU1aq!I-!IF?krc,Y#Ek=34'dPcfD5MZgDT]=ZY?rT4(>o2DI#MI>[
%^^5B/_$riXE#(si)KLYhjiZgB7g(d*a1:T_r53/_Un,cbXn9p7d?TIRFS]RDHVj$A(NiekaKrBJ%O.J)B9<ZdRt1hEX-!lmF5>="
%g.nf"e3-rN**s;Fk23Kp2R(-<oiU_'%b+&Ip.N5+^o6O;.PGb'4t,K`cgS3"B=YNWJ";$6:OM"ES?+k=4Pf%4$NMN.Nh#gR:R\a7
%=8Q(Y+PPsZ6_XNT*5o5[[889-KB2qQO0P!t9Z5N4%S,+("8S,cZe;8OATk>`[^r:!7<h-q3(2:fnFT$KO=Uh#pCYUiDDDN3=)/F?
%O'Ta"RR'<&W"=cnq%s:[X=9/OMSe=ao5#8GN.rf*P56i>SLbe\)D=5.YPG_g9=LL<M<+n_Rb4k=`n*A2`bmtuWe+LuNcOgA3,<B:
%#1^@!7?4NZ%=P(hmT*q+p^)c>7hKeMGIR1-L&>0T5tq0Z*j`Z)_URSQk>lc81Im3L3mHdP^<TCD0;m8hq^6$1>c\ik1$&/]MueZ^
%l'Dp?h48S5(u(+L9>oB(AG577\eJN+\A&RLlS_<k9^ZFtp>QdA*7fn^]7_HW?04SW7eqsmTa*"TA#]=Y1gk(lJb,qG1GuqR[18tO
%GQ2jP5_@b4U\O[gkrm[mkbaYi/gi(,I>X&V$e@+^Z;H#sg8oHcl87c:l**5#(H!mQ?%'!WeEo&gr?KaoZjdo.k&dkt^MfV'eFMj?
%16gf4:30mThEQB_(Jd\j0E`p%V5@,"8Qc2DAn%F6a-/0*Zd>_%V3fHC]R^oTQU8LeCQ`KCXl9k#/7a&R=12ll6SW1ao;O!jJ:St1
%?5I(+c/h:;\J"G?bM2iR97E(p5d"&K-UR.eL*SdcHiFeQFM"/<*`j#SV>]SDJ^#[eM8EIt-T?kc'CGNp,I_p&S-i(RMjH:Q51T'B
%JCUe,E$Mile`ln0"62$iY6SjgLbH&PB+Fdh(#f#!Rubn=H78eQj?@OHS=4j"OR?F9Ir?mi2p78]V2N34BJj?6<78T9ZO'uA\<NJq
%GfZ9<H,a+'iq+]g_lMm(XaRFs%YgM/A\#X]aR']9-AEYQB?f6V)8GjDr4VWDS#[?Hp&%-lYFfu9l0E`YYSeDOU3(GKEVbBrX$>Qd
%(\c8(`SD5]dH>]jI/nb.0%EPgrUf(=ipBY(cDqW;cf`1uO"sJ2Mo7HaoAm75S/1OZT,,Ik'l39A7-;N<OS6CpW=?TEanf_TgjVqc
%RqE+TN%"'.Vqr)@\X"<VqnaoQDMd<R"+(E3pCitWX&3N`m(ZfI[AAN!e8j;&59<Qqja""Qe=-Ddb#5WNINP&RjQ7qS1]4<,6FJ4J
%d`#J5bV[")cO^KQNRZCm;,_Ot<]2%EM2NsdQ&BDjT%mZK\<qRa@h?&mA2i7Fh<Ur($I^<3/h],gqq8=KJ`iub@\lr4c>?RA%l<pi
%k^B-'h.2a$M/cL^gKre12fB$dm2Z_ch5a+V[iN#l1R5-+*[blCGH%.WP+U6ks0,\?ecOl;YJd<8n%n'8q=<NFHaMG"!:u((;^[:r
%aVdLpFNF5OrpI<uiC)s$`,G;=jimYXdU(_?:)AgEd1Lh1h\rT.X)i*G2g1JW(nB`iHLh<8CebbOl!&0M;d1&lgd9C+A3C[?r_#:Z
%9Y:;oUMiA-?Kmgpj0L3$Wm`MdL([sp=Q41k3,mVQ/IJ9(?W&CimIO$Cc'\<;NEYIU[^Vg40.0LR=)[HYcd&Od1NHafs,AQdQb:Es
%?afYW2T`GF![pu!fZ.jiCSsa_X[rjAY5I5[9;WN]LKTO@*qn#DQY&+.jOKh"C9IEu09!\)7nWg>j`.5YPtGpW4?4RI*L(#tmZ$\E
%SlquegW`uK^+o$D5'0g4l/p_'B6D8iL?k$rqq8rXgs43fU2o21d7L'o2sYO=V=a:G5go6a1'GQb\QVP-A`RsfiG)>k3W25_2%O2M
%T\Es)emrZ2CEbhe7OnlF_okBhkhQp2ho^Z:r.7L[mO=as"\FgK5f1&!%6YYjIHK^%.KFULmTiYN920o10UE/g>H_c@l"5FNO?;5Z
%.873fdPL'oa-;k"ZA1cG>pI>86e@5hPA0c%17P0@Dl-PJak.uq@*6[tEo&`3-#\3r[)nZA4dS1RcZRF?:akHs'j$sLkUp*p*Ctu"
%QX=QMZC;H2HBHhSTI=E]WsGeNd]KF"Gn-q\$p?)J@j:f0Y`Ec'TT!j7"V&gOj@Ud=2[DOC2f:e<S!SS;IW)]79.Z0n@M_HL?Y*t*
%QTTLr#r1n;>\Fl7@geH),C>k'NDu*7W67'5Ei.$;Er0r8-lbf[XGasd_Sdgqr^T',Y1<u%3u`X9bfm7\2j=$2aj+b6>urbWO;!\C
%f*Un+j?TP"gKG;Hp4g%:[oQ,ho$P9^qP8Tj5'e>H-b&d&k`QOq?O!,L.%@O3YW(s!m1gTlXW2!JWk4Iedl_S+4MS:+ad65$M6V=.
%\J\-ocCEeS9+P5?RFh5X-T6>0OK@nX&@iaR[Y1o^L=1io4rb@CVLD=JgmijAO*k_-Ue.1?ZPS=`I_1oNq\]`1-m0%SmQBTRc6IJ#
%bVq?(c\JLT<qQa%ill8cbnX(6h,:YbFL1V^*`Kd3ZP<qXrm\.-rQMh&*c>Vr$LV+h+3i\ETV8]W=#6qJ\,/<ul[!(&1W^cKV,CRP
%^FT$d%sR"JS7W46"g5_tZs(W]+/<[TiY=5GNL+E9(Dh/'qFl66p3(b_L&5J&0sj[8DW-^+d[bTKmc#TBE5fk3A&[:UEY@_:g7FjP
%q<%J_!fs^tdI!V`Jpb86dRC/T]9p\,Cu;tiC+FKA,=Hm_a_'/ZUe,G>j\kn^k#\0T%b-,,!SHOHiP'N*.&:Hj`R,Uacp\=oL-r8t
%WPjuj)_PrC>^=;XI(>V.cTO<FNM.[<C9TFZA"^Dtf$\*N1I\gZRXMbRGqYs(;sgEpDSJ&t8sJo&oT+'YD!<6)hcQti.osBM^T)56
%_#cnpP@pGJm%4u"Y"EC]Odn\rA4%fN20jH.(*>FN$b:_TX0"nQL<LubKt$[q=k$n3o<Q#lcp#XoHCX;K,^jmb033kq.3n."9k9br
%@52+pautJYVuF+aWR7fpGFC^5m68V!pXmZN2`PFP9P7s=G4Q*NR4(3N?AFeO`YTNRRg)#9^RZl^e;d,eei#H>n(SAS0F)(Z"mU6R
%#[81;>[/S7Sg[:TcI(c8q*aPEY]nq[iHYB9Xp;+5Of*ub72";&Ku12W8(%"WnNq+T=uSW?DSpeCZhJd7NC73$f3S5fnU=p/lL?H-
%Dr&DndI_/4>AO4sLQlh!URuA[V0B(Oh?XL^a^I)7ktg)[#FecA[hcE=$hk$A9-YAc(+SHN+7+5sQ&"_d;dgFfIGX,82;3'qh0SNB
%U5@tSGMBWt%+/j`$C8+nB7%PfNs+3-j;@>#AiHRpS$4i(\;;E.o;Q8<4$Mn^[r1o:ns/c4'iE5e*daHF!VPp?`N>(EaD]nanm.u^
%/nWpdMG1&bKeFe"bE6\=CP<p^C*@@F]pr9?4jCKT>=C>lqfjX>-dC.MYSubc_^Yt%@tbCTihGQC1E3sn@HUWG3od!%6d"f9UF[`E
%Y=(RCa=KNg<D-9ij*?F<h8JU`11ms,]q3Khk:?!]@k.#g-JsYlk=pgM?7.-<3%]%kh)]CVs52P7Mf?%)0un5!q9[d[I+p+H;cb4$
%1WAH'h/YNc!%$/I.u2k5,?rE)T<C/[3Y?LYlT]KFl9gIUROJbgKmS9l6=tIHiNm.Q@.*e/3PJTs?uE5JC:?E4b9*3f@qK\RqRc&+
%!<e%a&cKSgMOhcQ*j-]7%g,1GdOPoRFab?c9_do/G<!e2>6jCfDqKk]l:ZHA!K'<2B^(1&j#NknNn$OEGZ0[,oSrI'/bCT#c;6WV
%-^Y",T\29D:uhrq[5RLB%[kSLp$HC>QKho&_->(t@)e;3#<)h2!Di_2+"(cgq#_0<mhO<]j'16G*El"kB]LgqL2S60ml5&51;j_q
%f*W)lJ$b`.'3kcd!\A(sfYQX1:tnHYJNUGiB`q7Bn"B>7JB8QolDXAF#TOC4\C&EZ=<S`j21_;P)_=C3rS<?H1k:57q%O1=8-nJR
%n8R?c$lGVWdR=$[TVN;?]hUUjG<gh3<.h$+&/6s2lRc1:@,`dbPE!m%BN+gZ"+D(7BUGF/1h@k\a7WlX%+s).>l$d-3Zp91Yf.G3
%R7!0FW9cbS;:&V51toW=hTGJe)EJqQ!W/]/3j(W#<T/.#$`.b0]N.43eGf!]?kgAh'c0P,/3VRmL3N7'e!`nT2[4J,^7-(S+Y+f@
%GYJt43Ep7!QXr#Y(TTa7[hLC$f6V44SiX"*>-@OZ2td12&$N86oIe\_]jU%s4/C_CLGq-)oa]Nq4CH2?>Kt1G<=/GY3+!b9UJq#%
%&U.,B?4ckao^C\WoIZY0qW2Us=(o;?Nc?T@(Pi3uL,e"']R>"ioB2HII<M)6CiKc]Ogh-7O#-K\`fToM@6S1bd#l&PjnB__.K&fZ
%h?^LGnE6\c1C#NPhh<]pm,X9+UXaYcAOcq=bRUgQlF3O:s5;5,8Gc.!ZiFpU<Cj?.b7Q2u?C-*a8,j3VL<<5H01>gr\np=?%I%p!
%O'gkE5_l0dSQ<;NgF`B12XnfT?fK!8BgSor4iF*^q-*jj@D??.?Qi1QoiC05[VSs#8<%q*E9m#fa:gI_h[@`nEBd(OcTM-MX6+l\
%0:rpA5Q!^>JPdN%ekj&plgpIHNbb\&GnKAO#%,&j#+e=>oMXmkM$/k<I@_,r1uk,B+4S9unPgpRr1917eZ0#U\c;VTE5#-\+[5\h
%>iZ`b2oGFj%2B_+CB(2us*PuX5J6Al4O?9qNP<Ej=&$f_BM_Jj"A?F3nYuOlIOd:E5BsM^U=4">\Zcp"pW'c2YEG,Zkgd2\)lPSZ
%a\R)AB).^=UX<a3htIYj1\];?[5BJDGd-Ec(J</Ie]^U5DfXH5hN(,fk=0R5hE4Ob*Me"1UTet6Vg!+5J)]hIT7?hXNQ*#[dHLMp
%6o6s64[I8;c>NX>cf'@eS#Al#Nj_XX0\+"C`O(!hfVB&,8+^<.gW61*)[`=--VSJWB=I=aqCk"S^ZHUf>MJpqR=EI`hXW^V4]%?#
%=-Y*0>2`i;hN??c%s&CdHmS/#51f$tC_a^ZW4t'V9J=aGo9_CT]J9AjDpbJ:I6=+I2S-jrr5tZn\`@b)9-4cnIp:"F3q)k:'Yc!c
%%r:WTpe[\,^69.)jUV<j:?*"(dWlj.-tMYQX+/8Bfm_)1MoJ.n-.bp?XkiYq/$kU&9GcTudtN0]?4aj6DY)thV/*7!kB?^Q*Fk*!
%M/i_t+J,0`5)J'\[3ounf1X-$R<e_nT/5l6:?k3@noZN*d"EI\5>5aPn?f>i3<+#q#".9CFU1'm'>SbgSd4dFNGm9CB6WcWr1t!!
%Slc&N%drSNXlCS?/i-5ak[`MUDYB:V7cs:,3.5%;T?6.1-Z+TO0)>9k(XK4sXQF/!(\8T6)u5S@=fO*MhCfh9&4[1r78"c,*'ur6
%jorF\O8Zpf@I$2$SI4clD_B$#Hb1UCPh^M4\$.NfWIEsT58R\8GG=W8?H3N'\_BdR7b;,bKg5>)AhAk^Z^\_0(G]7L>MQ3uD>3_W
%4<9&eDgACqH&sZu$iT_Cj^aqGq&I^+r1e%4&tYr]\B,oCFJd5+pN-:;#g1*52XS348tYaN:[q+be2Pff-\8nHje2HkA*#ImHY_Yp
%eJ.tGRJG1mAB[_8-Pn;:d>@/NF#9=I[u#Alfk>JU]*CkS1r3Ym[hI0Arl'5+I`\3pAlmKY.9_&\DXlIl@BS]0J'.@N1S3mO*^+n9
%!0]ocU(]>l9@:k8gjX?;`66PBQ_\k<o`/89dFfgU,<E<j]T1#&-`uV1c>kZY5FTY](XDHoU5>B;F#7#p`1i0NNRautH?^,]]5B38
%:%kHY<rZ,gSXGc1W*G_&Mn8&!-gIQ%XJfL12ks$DdC\U_V#iD@=(fh7kh=ba6$3'AoeDn]1ZQm,dX3[9]q2ltk%?_RdDFjh._7Xr
%^56_JZmVV1M1.Ls>FN9em]XZ@dDHj4'g4%E)pskO4Zdt)>b":0qTfi&Mq13YH?Hu[gOdhBMc2Q\GLX9^4qsQAB_h#i,[.lp:IXU"
%[GC%FX43'AbSZhsf;6[bB^6eO&UgjQ^INVY@WNa)<U*@R[PN7D1RZ@QM7KOBdtr<mh3^`TV]R7E^!cJ)AaZ7&1>t>KD,5ERZZ?f'
%95ca&CU9k&M,`[/I3SQ1HnnR/gT`-7DRZ&J]/Q2a'*m&NHfDP\oJU^C4"F'2)RRjc\iDKbIhKGe.)43]p#Rb[d5[s+?74L:'CA/*
%$et;c:Z^ZU8S;dY`a4.`N&Ac@PDKs`3GDZ`hP;r;`@&@N;Km0C@C\Ri3e"f3bjB<j9Q$F=Kur0BQds3qRj39cpq3&_]UXr*:>Yj7
%M941SWA@\(4F*KF(-C^bRX@3B5#$35dZ7<?#OD&^fnJeQ<;^XoC!'Q7H(K&NVls%uc2IOhg.j^jQ-G`';k$fK0sqf^GG^B:\uScm
%aeaurS&M_OWRB5Uoi-?Xk@s5CU"c2SpGS2`dH1?W\hn"Op33FprRmZSF2.?*/UQaWoZI0Wg2t?5T1j/c*Bd-cmB"=):Y]JqqJr<S
%0n%Z$H(V6'2rsW&rPRT9]3]cRM,m:Cbj8!qBI5b2g7GS*M<1/%6h>UNeO\$62DZ<CChIAKioP$S34#hMF*4ieSgbNdHfhTq>gL(E
%cBC'_7-o;EVL+o%:"0q3B'lqZjQuHbo$(u_Ve+1l*Lp)A%r^%MB?qN<mFf,Ne)"nH?H-VbGIR!QHS6gQ8",oQ>E-oSli+kno]=NV
%lEf*3b86Htk4V>9c5#53B'*uK8sQsPG'eG9R5*c-0=*GHS'BG4Z,LPW0]qfkY/Su\]#iUEH`e;L9YOJ9(YdX7fL%1#'5OZaYtaSu
%krJ@a\bGlHEoq[g?Jai$kLVZ[Qha?kW]#>`djiUL[VC$Xj_!ahrhXU]4l:&2?cQZ]a4n,n>5.RKc&$I'pL)M2q[9rHr-[t-'/*(%
%VrQ*M?8CB,3-K#*Kt7*&b^q6Zm4YOd>1X/XDP==S;!C_->i$N*$^CrI^[PEU3DW>]'jhT1l*YcQ>tUn+l2CAJ`(mYq8t8aXOa+Ar
%hb1U-O.R'`a"&APcWoobj\34Q9Kfeg9lfE5mQ>d']/#X&m@8&@S(hl+`JJGIAMJ1P>[I'&PKmXG^Nm;5YgfupY>2Rq(5X'&`V79^
%Z8";)?88P1aVSIC.2@g/hVk8Mp6[p#b"!/l][=a]o[Y"^c)/#n>;TDW@Sc,eak/CF>HT['B!u9bD'#:*l1[YNLt11g=DR#f@OHMH
%.5'bH)kpLtEQ.hCjK'*>S\/+RN]gKIkMaoOF>M\&XZr)VSp)8>HfFr'2[&Kd?8c])Y.-:]p18Wg^6kPXfsT#&Y2-L_\k`07^?>:S
%mY%p/bt^?uM[(u7P'AgRpP!locHg-Be*URB(,CdqZ?Ub;0?_VNVL8+kBAE;%>Io9bMG=.qj)4%s4^/RQDRIr^GIpilS%XGqDe4!r
%mHnF?[Wf-f]^I_$;U>@'5t^pH[WCYFB$T-0;>t:KJ#H)(jEiBb9Cn.dUSXg(7$Q3QqSprpmA[eK.'D]GS)pW?Ao$)FDA8CX\_6Ck
%0mC7A>Wpu9?1*u:o+bbQdTK.QT,T;9:R/&IP'7RDH*:R<X<uLOZ`@m5e_'/9l)Ct7Il=^@g>7"S[=sU2cJ!$9I(Qi%1V^>@J$fLs
%=DKkL1[Blcp18Yh^N7#9d,$oj0,57Cl^`4@:G!W(/>gju24HXpRuXAGY:o9bo^;E!D3_7Cl$W0p0n'%G?;Ef3QC]k<.kf3ds/>sd
%fkDCrb["gj1=PYjij;E<\Nb"DdpdMQHd_4sBC"Z=ZeX&!^RB3Sp:Im&K4H`]HiB8T[3,*;nr#;>NI8a8O6'/UU?R&8rq3QNHiDeP
%/2'3_L&K`KBq]q$lY]+W@]LGC_RnRTMX=oCNSE^?hSsn)f%DnXSa9tVYk,/GnW[D8I%>1>DClQHf!a#3f^m\YFX=Zmlu.!S@stVs
%]iLV]Dk@`9DRZ7`C25nP#M7e&eZ6<g*K$22;P&m)m[Vn>gg.T0pl!5*-aW(5h5@UFkIm6#4kj1VA?pR$dtZM%c7DK[j6ksVITkm;
%pWoDPrVb?5S(p;MYHWD9]/.CAogF;gi'%)qHRPIXPD<B.2uUYkhHfRuH<]h[H%jhfd=FN;?EKuK>fMfe((ZDbFmI^D54]QAO'hWW
%[ndcT1T)T>MoXqC]7X4t(nJ0n(VSi)9(?k7m\'@-X-ZWF.qb'DRHpE?e#S\^d:oMgr,UrTXdWmL:MY;iopPaLGq=#g.kg)Ma85&r
%PrCjGhPm^?0BD9_o>O"CDY`;^AZp+lJ!b70F18(/bM-gk>t%DGqUO$CmeTq'@B"DBRZHiBS+Z4IooA]iG?qm4YMI,t/('jQFQ;ZK
%VVGLiNSZ"%p[NEPJ#RgBH??H>gF>,;41cacmgc'not,r?IsR_L4jDl&c'e!Jjl.`g&@8kB&(ro5jl,X=="-j\Q#B:\WO)3E<U0(L
%eDE;L.PDkc*gY-PB8>ToI/1;3mJ"tH:c[d/f9Oq4<iIPb*hTK''r+]U4hHa)ltsY>*Ni^[C<c,9ES]>rYLF*.0Db@.HHLQ@KXLJt
%E&)M7psO"JT<+fsjep#8f<_C;9;g7CDdpnLUXQ(*`nUJF*7JPG=P8!a\V\'b[i`([?i6=(p#R`kG$hi,m8A!OJ)iI?qe#5<io5+J
%277JqqKaLrgMaE>rp3j<f"?:///kRk"ZP+MD/WV@Xf(aD8m<,;PO68OqhK>F*o3]1hS"\%kP]e/1sq.`a]^'W]KPT9cat.PfQ>pk
%D2/sO3iH:t\0o-KmGT/.phXgrBtjL:-Nma/T`=6LfUm;X`ZKrT>FPO4qEs#-qY^6Jb_Z,!63"o"f8nkY]aG'pjkR]9DAdqJRZhAh
%p#@67`/I-.h`)`SGC#n[FhZ>,*!PRK*k\BU'fM"tHLc1Ik843urSRWe7+1jMnW1HbXj@$BJMqruW5%X>H,M?C?CLR`r3f=lSn[O5
%&^uR&7BUQg8G2HDjmh7.->Y3s3HUVk)*Ih.Gq8Hc7]#:;K2F"J+\,-fdI`.;6ai5N*\n`Jal6I9ZWL<H23SO?,Y^+YQ=ibtM59T2
%2^0e+l2%iH+Zi8Z7&3/q>&McM(@UQ74];WT87-]jn*AtO\BtRJ@Tkrbr1mm@5&Y5YUi7n]c*Ig[mGT"u<3+E5!81'"Y0015d]eDc
%D/GDWCgeggpeTT7fj&q2_fTQLgJ6I_g(lY&4EXgh.3*\b5Hk>$)3-kIkaIW0YY<g&s8KM'4ueL;V=:R^MrIQ"82hu'.@:T%C(o04
%P`G%=FArYTkrBTTZWOY86^CI)A"V[Q(c4np=q6[G^f>`KF=8;;_EJuBD#b7V!>6#nK4dmkZ%Of"d^(L4L\)"LQS=r*D%h:Z"N$P?
%QS]#ZqFS^OqBen^:YH!n)+2,4OOK;RPdUe7nJhtJ@$]cS[W%(TVY$%+D.*f<F>F&Sm%i\5@>S"h%UhsSl.V`4SeXL4-5,t\@JW+6
%G<Kb/UaEb?+Wld!ISq*&I<o,W+VUVGd^"7%bqj0$6Mt:`N@4ni0o=4]h]JB>FF9UEGg^Z0_NSp/C6h/ao+[d$_Zjq1G2F3%lUVu1
%#Y@[YY1gdWJ64d&'/CgqPF02(Ee8HW_Q.<`Bb*mm;8WWo\TB$Zd3@cdiR;LH&i#^UL51G_fYWp=5Vu"7LYN3_^p73&caJ7r)%jZ^
%s/7)6$R]K:n/_2#UuOoeFG+,&jq3#5_XO,V>&'AhO=J2TVBkXnTqA_U3\@V&PX7TM!)R*KFB[W,bBXG*KB1_9o)o@1c(igZ!+K7;
%>WFcr+UuCf#%?B^4gh>%nY7:"r/($7cp/ptUG9Q]kpAR/7aH[cI7F9a$p1S#qXhVuGbP;FY\D1UB-A_$BgWaFodhhfmf?s_=V&iA
%@\MHlU/-p`AGQMPMSl+6BeB:b-V5M,Pd'+m,YKKSKgi4S8.pK,'/;djTB4;$8RiX^(T*EgH@SJ5LX'MQ#[#uZ]d!iE[#2X)EO9,m
%91p+bH-mnFle!Q#9AEtQ3%FI)m5]h[Q]B$M#bU%,4s>*3!O0Ec-3h:k3X^L-$ncooIR930FpL=Na?VZRPN,f[HA9q(T]ZuakT!/r
%_MF$^A&*4U">k47/[^OF%K^JU%h_DEq%i38i78\%7hSljGQbE?=CK\=H)1?P`rfsb(MJ(<J`dUUP(JGrV58Rn:ltSf!XW-$$*a_l
%+p7+_)1ag^]LD^Jr2sZ]b-3WHlI3M:K!oMOkP3ED0LQ>B:"me2E>1M(9(\bW3_IA3%`+,08RiB[6Kh)b[Pe2U=b26.:rC3kQBY8R
%^26urk+4rhC_g&"8J57R#&=UC86fV5)B`2kV/1Ml>CI(W;lYB?P".T$!L\<VU,H^?1BI`]F>BgOdrEli:qY#qQ3eRIP#k$qas$uK
%C_5hn9P:J'3l3#7`Xe5KH>8P/O48E-7U4&sP)j"$NsSd[M61m'6TUWT$MJMF4rIE4p`a1/6K/U@.PRK'-9WHrK*b7@8mILNCl'CD
%AIsI?#uPh^Bdsc_;F-g?qS@@b9,SXGD2RK^0B<lK(1K\j8W*bi;j_[#eqp:*3S?,L9,a/1<'3f-ORiRT8*Z"c.K\iKScbB,^9MO\
%<[Ok\a]9-3DQ@U\kr'@a9$JaBN:;W*b6;H*TZAf48I*($K>%3@8S2r\,Rm2LL$gX'UrakpNBNaQo\`<&aX=564:Uue?]_m-_Q5is
%.%(G/5h$FNY.U2.R1M8UYb>#BoFjnN\Kl8N"!W^JfJIV]?sS-`M$*D!OA>iqIdjEq@.VH(,D><<2KXao?0l1(eU0OrZ'?u-^S"%6
%52mI=g3TK/?k:ZcF9pf]pkeqb+,WiE8r/FY-UA&oekf=tHRjoY89JC_LCWAg+6lMH'r($P=n4[Hb"0.,TYM!O(a>8WLe63[hZASZ
%J.!V"^b1`',LiXs5D]i*@Ho!Bh-cE:B&-i4n=6j$,H)$l'ob7n;/MmPM-Vi(nuJC)Pl#8^QUq''XU")cO:`Z3o1Y`(,Wk'tNQ@-)
%4@HabX-%Z%AoLq"emUM.bU$+mk\[$b/O>.7/#8bZfek,Lin:b,1>>8HHErb<T;MZ7l<t>F3hMX;BK>Wr8Nm@U3hE*/GLANe*pGRa
%H2X?(e@+FP@$Y=J-jG_nE8Cl88b2L!,MDc6Tb\M!)[sq-@'sCY_El98ZPKSBN-YgaF<ZKM!uG:C$cKZ-?)f&@BMPF%E_pa6=B5K[
%4:C):!MkPTZd&K)@O`ESe8aHo=KHa%lIlNH9I#?;BK9`1o%XNaC$H:34itF%kG^`[?ugtB-sLAOjWTN-&2Fhm%)^I[jM._!LBPkR
%D"+B!gkD-4P.n'7F3,dpjC,=ncK?C2bg/m83-,X]+lO`Fd6Um1-[IZ_NFNiq)'50.b-453adhiIUgP5<aDa+U2d"?j]LB0JU#P)F
%$!\')lIe?7Lit"[aRb(_E!Ito7ni%d(G;Z9]6X`?0Mb#X&mqje1/p*Oi<B-mMU-Y[,Am3B)IaV]J,g63VBk82nZrq,!>5DrT`MS^
%n-)[^<A_X[FL21UF2S_$O%#&l6Lc613<OhSV)(@Nq'c<3\A?R>=O<?LEK"NAVZJ](Nr2.<EA8GZU""i(Djo/d))l/W"!JV.K\2b&
%T;C$I=`?G:*-c5Ji/idD6sH$Nh>%NtJk.=a=6i:h#P!b0J6jXpl;AUui_gHQKJo\tFM,^:.Yi3@+;?"X23l1j@JVZG`X;<&<0uP?
%,XPNd[)):=$]gfP2$,(52iaMM9H?p6(X#:fAljq-]88^lhS=*`2hJrL*"Ln';Ga2p+lCe:VAP'$(P3Zs0dW+.@3N"bXank/hSWe+
%%QUaIcVm1XI!O@5E]p7Je0A<.klcjA*EJa0/Wsm?Q)W%/J;G0=p^VYO!li.P!a[$c`,QTmAJd*@ee#K]!:EB%5!`,5OiWLC^qQ2C
%Tb#WNW^[GeK+T#eE#,]?WF;AhA-81i&7RjFZ;'Gbo;KW*$ZlQ`ommqm=\OJY2j$L90k-I\^)6'q<Vo[5m&=VL09@fB!./B+Ooh8k
%*#utN3<6+qq0+\Pd&8O]=64_Aa5Bd5A>p`i5V*2k+ZVsmj(m#.")o6Nr#j<\C@-[1X*f_s:,fWI&0.uW3/p:VKB!KY0pr'`1%jMU
%@u.YDf"S/"W?E:930I5@m?gn`[3^17R-<4\#irr!H4phOLE''QXXMP5gAtT9P.mWHi-MIY8XEV2*(1o\%l-L<349_\OYu*1D0SW=
%O'8WqO?kYPC)g>bK^>c]1<9a$8!2S'a+YOFg;=A3.cV5O<0.rKR>-_PjT&`ppJ?+]ZugmdE]OC/b<iW>7`G,pO:G5l-sRK"R#l/#
%@S`r1n=@Sq(jRsoOA3',0'Cc,C=GQ=,?9*m^K]?nb(ak7@j?L=2I$rc'13&-?$-VqoduFsJt@V*2:Qp$4?.$l1,p),+]<\[V;"h>
%]V*Mq!D-:s:EH8Kkt;hI"dqluo2M)FdUEDmhQf.ZV,:T?6<557e0f="e+e1?MFIYm9[*An0,,0HJS]mF-"+UqjK'n3+\/5na)$Hk
%c8RV\fG%?XZ\B9LI,t2]3;e=^.+l2d#X15[BYha;7YVC\R/pWN#>IYififD0Eaf1T0fYK*@#8.%/b4LR*[ISZVR^k(O8KtT,alD%
%,dff@VG3nO>uD[M=VRhC"gE\Ka[\Gspk(<Z#T=S&KKZMRe5lrGp`d.Y)'aBtU'-Z_6)lI:dZB3e=FiH"S8LjamBa#@_9&i-!0gl?
%i?3bd/+a\b0s`?^LFbEgB>NcMY0pBF6l^hq'M_;1_6`(r\k;!*2_%t^dO.CF9+t<CJ:hmPE?>^lYlNZfASo8&j97=T#TcX<,!lC"
%<f<$uX/#l<#CIV`6s-n;[;B'(WDO'h@Z?FbEJ9"!kQ+Hk:YKW(i#SkO"72ATdGQ7AjsfAQR+V><d)Rqm,?nYSjW)>i#At#3M?KM7
%Zt2jhI?eHQ&\1c/N.]eg4oc(0=63XO:Pr%mcGK.gjquN+KQHP8N'g+3,+r$X;cctHKO9aGOhFgE&!`gk8R+Wnmpg#@n4ts'N<?47
%KmXAf!n)^("OsJ\qW`&qE&+!oc32l_UudejW<-[s-8R0(*]>o7nsYM'n>Fe#*nrBV;bQCYG_$W`jUr,D73b*IQ1B2?-2]I"NiMTQ
%gMUaqn<)738p]jLJDX0E^_'79A'^I4P$g>bXjZsZ]Ps6O67>b_J2;t;-D^3-%%p&mib#NhcP5pe-T:N3>!g:hF<fi@%1L!>g.nUo
%$@>KYpKb:AMYS6Ic*&,:%*/OY9P"GX$M6/5D9iSD5\QC>A:f%MZAVRJMCOC9*3$nFEt(KX'nnMs!ONj/.OY>T='Xi0QR_X+KAZo#
%']TLZ(rYGO146'V%/>rf`<-eX#`Sui)M-f[32X!@.)('s_9aS#CrO&+H3/R:/`,2d)fQ"hkNjVO079`]BAZX0nrQi&\03Dj^@iO+
%0+:O<hr"]P5WJ@T>7D)V?g9t9n,ijU!Zq'Laj(1q;ma1"WZb>\*-F_kWc_@n[ri^U]GpF*Fb.Rk@HSmc.."iT>RJ@[Z't@dTJKQ-
%*4Q`$@#)gYGF;lV08M)+QIj8H'ij`^=t.NoF?tAIPoF]q8jY)2(?Zkj@'GaV(@5=HrI@6;Ee?21E4F+7/&%ljZb<3fLk8m>WGf=.
%6K)[3G&9eA\I'#eZHFT?1j*WqTZ@CsiL#oM)U\e!f!rWF?!Tq.Jk3tf:^VrF;;mIl(g6?[VQL@O\a%AR=Ya8'p@o''NSK?:'I&b'
%7Qqu?A`34fPrgA,mLa/T6/:u>3LFZa]cC0-@/3-[O-&;!+ktHl2]MF'en0Sa)t#*o*YNH6nr_['rdu_c?9kf#RiBdtNo0se;;K)$
%:a9&EK*Bkb8!)^E)UgSO-b:F<RDFJ%6?<jZ9r/&VnOGk`)u)VO1Q%;X6cTK%2c+F#O<mrGOE;Ij>g@\F`)M7Q(a`H_,nEJe'('3j
%Wjpt0@rHD`:b$gEd$k[lF;@[*J"XX,\Jp4CQ4pJ.!]6^P:".I@,>a^milgJ3+QL<.F^kF9'J$-')A7pY^,A*Q.j'pA;qfjQ'i.4:
%3o,JCKdV#Q/0uPH*gZAu&4%7cq;Zb.;W3C)/YE101*?Y`^p`>iW#0L"Z*cD\j:6hm-jSK<M:>[%K[$CRG8FD&Pk([%$V9QWn)<<8
%6[48`P!S6GeBK',g$f3XHdLK.-9oioUhi-s,A4Ii6NDpc[lBSsm,R^*#d;pe6;6'2!T0@rl[Xq[WT4,m3L48RPt:t+]If!P&oNCg
%!K-8)%2%]5OS)R5#Rk_aKHP.efXI]ra;o>Ha>O5(@-`KFM9sJokoPo9P!H<G#+F6O!#`b?k&%s!3>nL+<d>;YQeg*o2tE56*SbiI
%XdX(UN\JCg%14mX7tmm/>H/9cK\_<8$VJl1A?d.3V(,1qfG5)C5efnSpXr&*?-hKrYGoB]2H^)9i$U3oIP;f'r\R>T;`cD+G=t.C
%^'d4qnWdrA7YI[)'S;T.%@Me70i9W':i\_UAAG$^mg);d(ua25jT]skasj"Q(@nVRRqpOk12KH6k=bSV+$nJ2Tt(7G$dXW)!\[U>
%;4k2;-E9lC>s8#o,JrAj,<-K-B5"g.6#/"%+.-_eJ\q0??[^R+iK_"f4I*WIg;.:3EbC!hAYJ;qj[nl40N9ZaCajDB>l$mcS;1p[
%CDrk[1j/B-Z\^P9`&%Te/.PbMnLS](.X;)(oMd9Y`6rJO*Cl4n6UDq.DBV&HGXsTXhupisAFV5GRQ8sX;RanNGLm1f6\0n=@Q8uC
%Q)]B;?q5pR"J&9D@0HNEVK?p3b*;*F0Tl9SFY^se*iUPMq8re.2N"a`ct+MG51&5#iLtL44!^b@WgY&48!u\a^PMW+9*-oa[$@Q,
%6Ri/"i)3!&V8-o<9f0@I"7D=Kkq3?0\&H#fg67Vs[Hb=8,g=crEH`$'T4.'P-i*F9j:e[mXD=O]mQ.qC$CMQH$d(JW4<I`@F_95o
%S-3M%U@^"dO-/&V8An$5S>?R20&.MVK0EAABHDIpR(>*u+F>G-,;'A.D^BOo*G'-/iH?I<X)PBJEg"-Ti[uEYNDki7U]H0,kWQ1e
%G%?#g=]Ch9C=%o'PYtA5`fR<c59AF%<5DdZadKc\,f2@k(;[ZS"&LpGL(V*M^<I4ir[5\AaC$uD-s\f%W-M;M-9P%U&UmDc4sUe8
%ec^X5a4"U-$Q=l0JW!JB8J?F\P1+aj\s7VE4SW<miZMH/](H5<7Ro6970Pm(g_!4MA4LJnQC'l!S2ocsCE>?qM?kJ`]1jD\.\&uk
%!dY"Y(Z@PB8SZ$U\s7saLCQF@"MQ!+f2t%c@ae1OC2m4<!_QZOW/&k.4)a?8P/L'9@W,g23F(Q]'9Wbe@[O/@j?^cp*Jg(2Xa?uY
%q0I_TcJo/STEsO,e=q(Sa6Lac&lh&Y"-gQTDGYG$GXQ[I><1XmQchb(;/2HE7&L-l'5:rH=UTj-*$_%!3SI\beL'FR?t8FR(^gq3
%O+9j7lirt0T5t-OG;pPc-R;h=42i4F":nsQ+&,I'D\GQKDCjfD*s`!A#pm1H,I/l_'f;=$JI/njP/D)<?(e@]VBgf+0!U9WPXc+0
%CRV7,a[1E8Q+$kn&4r9=d3o4X9qZpUdCKoqB&ILBSVmILMUhsa'9F3@MU3dlDL1F<*XsP\%gW(i99/WYY;-tm,*Qi%**prW@uI<H
%%Xtt)K*'+kSRIhBSiW3:N=Ztp9iqBsf44:m#Oi-+15lpT5s`#bH3k\)*\,6`An4%nq"+$U-9UPg8i^qlP_[Bg<1oot,UW7BOtUB3
%O*Lc:%:s_05\TpYJ0VR#@rfj_0q$:O!n\i.BU=nA6YG>38X:qlU$Jtuk,KOAXNjSF"c,Si,<?cu##8ms/3_Zg"?>+GQdT@6HQ98O
%IF/?VcdU_mg7',5P=cZ]57ohS.RU0JF!@=sE&`mb_7,&kJ-AWO3^?gb+B.K>>H4"*F]6D5Y4)1;_)?F'-M!Oe`<E4@+]JqE<LZuc
%alPXJ@5.7[Z7SEPOqUlXJ+3\?GRbW)*8QipE\7qG<3MWV0;jhaOZd\`7hpp0QE(BaXI@O_`==(C[F,d\NS-TPLZ9>MR6@69UH4$a
%Efd:jESEJA$:i7i.7[>A=G:]'(S.UiF5,KjK`iKA!t6YmYS"_keF,QB_&^b,adW:P*0WYP^afT(Wl^3egC9lI3">?g''T0G4>(mc
%Q'M[TdaLD?aTnBHC?QKq!<hT3j)u]r-oQ.ZWl+@Agbn4Jg*Lg.5j+ol*=&*k"cgtt66<V\)'EB,<t19^DlRV6Vs;YoAt-@X"?bVB
%c>U&u\iTB"]i*W`VXmR$mc`=JJ)Al&EiKO[WD7JBl#N#&o4$(U[^la[+[?)`M6qAU$K3s*/\!%M7K/5L9gHnk7,WoE0m<c97<VXK
%'DpkG3stfV3-6t8AoW/!U(O2=JK<'F*4,!IM2/A::\2[J-BE]r4*Mn,Yis0enh/X#(aB[$.=N&(]5SMYK[;k^-7:IO$KlN(b..2*
%amE3-DXVXhZ]F#s0Q`D%2HibA[NmE4<;h6"MB@7G^.k^L@=D=mBiK%%0Fc\>Hi6-0lda@\6`FQ@_c(7]`[Xm>#a/T$<$NR?8'rrK
%1J;<hKO(P'!e-%h3<]1YD;CRRr/F1,"D;%#I=i34)[7_O+W^gQEta/`-sTUhVr[8?:?0,!"@d5b,:3QVF*of8';:P%8-nXPY]Msr
%&&faBW.f<s:<@WB2,W"hLY2V<m$%54n57A.YXkp?TjpkU>6[Y95(`r5QEqNr/mB0?!J3ffM@KYb>bUXt+oVT+aG5ocRC8q3E_*XT
%3Fg?[^jlFN#+%uNeNIdZ,@N@(((NF)r"@7J?Yq!K5]_%:]V:cYG2/()UhgSWPJ4FV/QreS@BV/j2%4V@"Pma/6!$)p`\E/D2EV;c
%LIZ`c\-NJ*69!G_-!IRH;C#=OJJm^i$lQdjetMlX2Z2J]^=#=L-U=QHE-4,NL62tP&Gif2Af).*rN)!o:+CklS;HE8D5f.tR*\J1
%hnWZp]4c[&,aDUg4_UMi$uFi0etf5ggU;FXYSm3)RaLQ@cbd#t)&.>pg@$_D<_Q%]+`iI_#jP84CWo%0TO;[f"F,O]q7*TeC2Q>Z
%r$-1_3TZ/[;CP@tf(N0&C+86I:9YH;I*^1b&euodMEB`H5I^tB;!PL>W!b*W`j]5LMnOhG0OKKP]mp@["XhlCMuu%q0OASUPk*j.
%/e8fSf*W",2!71.D8*Q7;=4]dZ)lq?>h:/C_^o^(i5JrlJB!J4&iRfJMCdP"X3cgRZH">c&MK4S0r15^S]:f+blWl>4n!-[o9_D*
%KpEZN%=*,ictpKAodFhu(p[/n)/&D3253-hOhM.lVsQ"iBe3`7i#3XZ&R6FX86DDa!3T"R)lm7E_L5FZ%O^[@IM_3U23mclh,0=h
%/>Y?1Q]S^hij`$^@We"Y)-n]aeJFRoAta.h<bQH^;\Go-a7/HR/;>+"N6d>`fInQE(,m3><ct:YjFtKd%6I^0>MhKJ@=o]^%c8&[
%*'76GTa80!'#O"g]%[ft>+/'hI(k=<B>kOq.@i+(YfmpdF5hOM.g_Ju=#.jfIRs*N"q&LB85;V-3\Sc^.;1/!]<h/%W/WE4(k:H:
%1d??6*cN)%hh]3%iG,niEg&:!I%q1V*M0[7;LQ:E[`4CPQ+BC+QD-FXCarC-%PfkI\@\#'Kh<=H.8&3e*=-j?Z:YM:(-=l'5NmNL
%!Z?,>pe^IDCer6H%8q2c*k)lO02s,uV.b9IksJnpQ_-]%9FX9Z8N6.I4C=3VhB?Ms&_/9K%>dRE!-GR_aR"'[W,!<(gB<g'XlOp?
%/tg!\Z3fS9"*Y&S_$)Nl8o=sbc!5.'"$cX`9MlLGQ/Zl8<Cs>KH3;,63TT?2$RTY.>g*J.>RgtbPV%K"\Kt'V%SnL`nt6(fq"SG3
%2ebS3+e]U<nc_aPAlKQoe=<EFOb4(>WVd@%Hs@V)#2>)a,4g@@?oru3;XDDPiN$"tCj8e7F`_sj.lsJ^Jo_3iR2#<r>IO^p\e?"h
%ln%q;*+-+XeBTsZ!b=IWq&4ZZC2##l1AM91NU!170&$-8X+tY%2V;9ej7]PsJh]65-C(<gaE<$kA:Q6h7,F!L]OGhq'hE,0\fu`i
%3^P8PeOa]=@YL_&QgJc009@N('q;IUBk_aU1SSW.Sgp:MAd)EiOE!Uk@/J*e5jVp+6#"F2PlH9nNNGi3*d9K:39*#6Ll@af[,Cp4
%/nf58+;BBfp'SN>UVm.M,a*:4A.76;Ti,H<cT$914\YL0Z,,qR^eo7I[[^Q4M"PUh`&pph)OCgpY1-Q3#Ckr^@P7cX7QKsq'UphK
%PdcX</TdF*Z*3.6<,-:B,+?"PVF1U8I'BYJ#o=qLM)H^k+h>4F9p">6q[6<T@C-;Dr]gi^mSN!&d*TeJEX,(ZFHmb07>Z<;noY&6
%JQ)WM,`"3"(3[CdH8()`"e"b=i^L:SDSX8H@$>GSl@')p3(4j0;#hlm!pVNVDLn9<X>Mt$a,1.Uq7\&.?@2jEDp%kAf19ea<;f=e
%h2^r\#`eqqf1IGC@'NA_TV-g;mA$lj>/41J?+#]:[7_WaM[%f-*KGTYY%0"c$B$Q2+WnWaK5`0(ZoI*kNI>1;gI!7i.9M?[c'QA2
%l9r3`45-JhZmUWN.:3s&_*B`m#Ii>OguPL1fAXY(b`-C/:Z5\@lD)qn8(:Nc<sO4=qCXumCOcO%ndWlBTVp+T'G=*(4ZNPZGM<:R
%D:pBN+B:H)k7p1=1PEVAh'T/i?joAL?X<::g]`C+"PdZC==CE,9O"qd%.8SL4Rh0*p4Z4O7i_3'_=phl_Q:q4*\bQnUSZ\C?PP\X
%)>K`!c!E0J.]uN]#_R%[n_4lPM/Dm"B9dtfo]Cu?4E0ZG.%Z(gle@:7HtB\ta?^JP'b26k3C=S&j]i&]==HS+T`l$MiQEAoklQW*
%do<U]oBgTl?WluPW6e"lX?!cpbPi<(/1QOKQ8#[iA3&rCS?b4a/ZsNsn5+MW+.f\%9-.'@@M+&NJYT_V`U:eM^]Iob;KqgcBOm\5
%p7UHi^aDLA-\g.J-b*ML+`<N(6S\45&d"&Z[Yi%C%S+KI0WN41!Gn)U_=8g$`!f=D&a0^3ea0Q'a^"m]SuI5P#"LF^+%5nDi2G_$
%rVs4tjuSi>CNJ>In/f^a5RQeKCE=aZ/=Npk#a-PHAI(,]":3H&h<TtH@dWI0<TZ$]6"0H3DstnT_`PdZac*G(O,+)9L%'4sB%3;(
%I&PJp\$<Wl]1=C<o@!C@KjTU\We,`/ii.MZT)iO+gb_;LJ'KiL2.\2))PXL^NK*3L>W^!ceG=Xl6.P-(h,I$R1CJrF92STX!R1X`
%T%@)1n(HnEcqY^Qk"6s9rq_Manr&8:QoWE>rgn>r"g(sND;HA;3N=RFdQ0D26E"]QkldONG2AktamJ0VYeNqr<\I;=)7k5'=kP)K
%*I5?N$VC)U2&oDU6;?t$q=Hh+82\P`BaVR*DKjI%og6aKWN9a8de-q&ZQR^p"$f8V6p-#99HIpK3e=p"->5&te!j?=@)KPe^5n$P
%Z?g<rOl)f9:A)YR.d!XaIgNn[+.<`m];hRj;eoHWlt]S][Zf%*;cn-JG3\2`RV2G=kfj6-qD2N-`4hb;:22>Ih:S9[kT,'L@sTQj
%9g/!g`7:,AS49V+U/!n]V3h>8mI^/)b%\$]1RZFF_Eq,?Q^3J_L9RO)0mn\N\TY(HS$X\H."<-M%]QJXpDHiQ"ec;:AUeC-5\R>"
%#-5<ei['S.l#eHjq3>4]!dZ$Mi!bP&27gtuN=L^bBNOf_6dS*K_J&gF'el0hq@U\d%;A$>?a]rtiR1Zr%e'=#C(6Y$^##B^(ZMcg
%1K*4@Lgl%)]3>$@ZuAc_TUDSf2:;dO0#I;mfpiLT!$g+r7aVn6C'Zbu-n;bX:_V7IJ@<n('[`:Gq5@%WrB3-IoEgDYXUT.r=_4UH
%$^?dPeN[i!](6MCp8er7GsTX*:3RK'q_TI[^?[0']G:\!Y:7jHJNp0Kl_gqjbT<=3d&;\f(op?'W+PQKORg4\P5M^0%]J;8=R>d@
%:WfP?7Cbe"[F<@aL81Vfls"-;*R:.5"$m'WX6$k:_J\4Eh-B!9$:$4u7&'Zh#['IJJp3ok&7Db`nj0[:'V/JX7X:e);b@/uU@G/=
%dKSYW:]gj$?X-"<,+L_>6i46G1TR+el53)"`haF4@L\)d&]IjGW2dcmr$.IZLt+qLVkO6idi@gCgS+^mmJZ*OT9oCV"6tPW.ia_?
%=n'j>P>Kas.H'as<$Q/ZW!i3D=9PY3_g:a$b5':1QOFd>a5hPXk'9j^Pm0=+OCo$d/-Y;&9+Rj9@>-uhG<g31UMX#3T8Se8_ZEhR
%YZn,/#6.-FdPg\u`SI#LhY@rpXI]':10EWdVMn.^V*I4Bf667f7qsCb9r":;`?^hN&oqf&GlYNVlZl\FJ[G)U\gTQ(V`=QTiu7]^
%L:U2&A5q,:5hRNl'LcTn^/nO_YUeSd"J$t$nb'Or#]0G6@FNX`4M@UPb"tOl6*YhI_/=O/RSEe!IJDP[UK5J%C<\CB$t3\Fero-0
%kTi7L@q9X)LY)%P:4;SR5i1*hGi_B7ep2qMB(7aX2Jp0m)nZ(l8Ln_@G/.aHCIQ;6H3^WS=TSdIFePV-ks@[34j1#PncA2r@MPPQ
%eGD)GSU>@0*5D.b6.CMQk`g32=Lb;$!OlAmEZc.W:ia@N3&+OV9i/pi0/u%\IW\23TQZS]FI/5-d4"8]D*`^%*iXlDG6(Go5FIND
%8'$B7ecCb@SP]XmN5!!QW3Vt57TEOb-e`8Qg`5Y.>X(C@WENh_WUuFiekpc%rbM+=*\A=K=$qeeMcP*1,F3VR!+fE2mD:[SKN"pH
%'=e3gf`!&':;b`!Ic'fmXME"mUqqTH82c#*<_`F>6H`bg94K?u*u6br2q1Mmngg%PP]l9pl;0k6]N4sgG'e@FonpZ*\f*a"9WWa6
%>h5]J6]$ES4R\iCbUN3jW[FF)a`T;eese1<.t#hF@`^n&C&=0LoWfJ68s"fF6tZQW#Xu5fVTn\oX.o&8T;Kkd<7aA$48/?0:jPgp
%K<Lr9qpNOpQ]Gu=&^>F&9Sc:?4@(;'?bYGs\FOd"Zm@,<A[K?e[basWn#4^^UTa8M?cnCuf42g8\*/t3j+)<n[jiU**"N\B.g>`p
%@bn9mOSSI=5Qd(M+lC"i.hjQmjI;O&#lKhRXo:2p7Wlbh"m*3'4*(2]]#:)4MX6"7%=+;*pS\hn2@G^QfI2XO%X5Pnlj+MO;#/Wt
%<)j_dJ^QP2SaW$UF'%L>*<C<`KlhhjWqhAKF"&POT=t)AO=iAQLj>SdTAnMs@Zn_hW5N_h^oFDJCQ^0Vg(6ps0+!4.c.>\o\VbR6
%QW#()L.47ZVglmA<D]r'fqNI,GdOCnAXT2j8/8PXCk1nq42i+A052,4PK(]kDH-^>m4JPHi6Auj"NI(+SZSocl-*%&$G0cNmgTc5
%Cke30#6iRU]*3ZDTOCD7:3.HS=[M]_*5@A0!Ke2pMqlIZ9W+%flI3mN=duFq_JrI)H"up"]D?nf5Qc=gMP`(m+:dNNDn0U'Wl25.
%97=J+"=GPfFUHX7eo%mk%T]\$OD>e\;FSRQCuiNMI.5RqQZS6daW\_<Co@t1R$QQ0ll"pu%Ai$[^$0ke+ZB:pVGAE[-jY0b2!n8E
%l'eq[!gnbkU:&#.MV/DH>%*#*OVV*[-S4-tKfa"\Xqad4>8M"-m]QD3j'5FGf5nQSTLSoim58Pl)R2i9K!\Ip7Uo]<H*iphm\"8U
%KRr0d%oR?$mr7\^UUBskDADTR]>/nK#I"m^QL"Dg!$*;YY<(Wg_Q7*gO\<)tHYgC_*hk3l&NlfI:^8(=IpYEL\mr_C-3DZ\ELmC%
%U6j*Nn=8n2G38;H<cSi/epZqZn=o_5Pnkb_rJkc,NDFEus$`@J4l+07":M>jRt@pV2Ki3pAB`cdQ'EW\K.'_jPKi6H]ZP*-]B-p'
%Ze\kkk#c@D?h_J(iAau7^FKttWqPcfT`C>Ff"12L?W1TpPt=c0!fdhYLj*U3nuP^T*uKrE"X)PWg'6N;:hDh1<MRVPe\HiQcVP'c
%;e]2MRDW)e2jE&TlZ36R"(->f3BZ/i3p?n2DA@+E67nKr&"I>#J?Fu)A1-Tlm;R\(-4ZP89ZYgHUpVRF90&F;];.]d.ojZ!/tj[#
%&K>=iV`jBGVXIT;>7Ys6l+N'MoH#o:))F'ip?#Ul(Dl0;o:-IZ%*%C3=P+lIkK`?qBMu>5F,ig,5GL]'"LA=jPB@<"8FT%!"4?_8
%ZL7M[%=Rtgg6Y<VJdGGLLYm`mlsZpTW-`li4s:E3+/@]*-0kUtKe$0fA\V++4EaJVgE2PYN9["ZAQ(B(HFkDkbH)]/jdg2`QQCHN
%Sp<PQe']%D5OiIp"/<H4SoAbal]Z"IQI?/=TVXheMPE\\CsEZX,'?u]M+HkBEF'd1Qb).?jP.uB]$\m$=?QL&Q7?]U8l*4t\Jnc*
%*m0UHJ]=rOTb(u<$k_c="5hMF40!W][(PUW:G.B,K9`+X)S&m)CM'PI/TGuehY3TTp0Y9k[L.[KD85t`lMEuDDm\LdWtdjCQ&eUe
%/r,dl2Qk]Z3F^TcLZ`&D&Cpr>LP?;s+,L3Mfl.u%H8=dC+NTA(eKiamicO88$OZl$pR&_(c3MKuSO>962#t4YF%quVTqptahae8`
%&XB2\T3!VVE)`q$4&d6Q^,B-*MCu5a^:)XUSE6:=^1qe1!EOQUVlt?NAn^%njUprk)SHF0#WU+7l-UNFEK9OFL@,Nd=of4e4J[0&
%_#R;OHDbQkb_%f#?k==];abROK!S$,00?n4=aXVX!jE+`04uY54sL418KYVBF'Y#8J+,nH^co/+\hsNGs(=HSij&fI+7^F7'u`[c
%>+r11F/%+GX6V96EGbbRq\h,["p9,\J:)?nM"d1+S<(2=)CK*acDdY*"@$/a)rTK0$`(F[GG6H<fBNm4[A+7`m")mh]'C9_jDsYZ
%KbQRh:S-`''1)rF]DlS>MnaCkIK\mC$]W$36Lhc3"8;RJ'CoTW/?-&hWhF`f7#&b$EJ@)8d!>iVW;]NW2'Os3b,]Yc;l@sG4Q-"X
%7\C2R2>/Iu%prc<;UNtY8>B^kJlePp[pUZAD&'3OW;q^tDYk%Ri5P9sPnKsKU.R'^;0mp=2gWc'?)\AG,GdJrDu.HG'0tiNNMiP-
%<2!\PY*'^dD2?DA/YD=e8<N).<2%]Om.AnF)`8_M(ZM_k!M"KTC(G?\)V_<j!fs!hi!!FpjI(;KmMi`u5;-W4l[gV4[cJ?UG0A12
%\]Wr2+Xbgi:MULU2l.rEjY2eb%ONVab\i..^J1]O26@pXd0bjU=bMmp^I$CKRaLr_Hl4dF<$n6ClK^4(Ef5^&3ptMfcFZLS7`t7B
%mo9%PP6_\K6G-3>MEHf'n&CQcUSF@5Hb%1.""PV]amXXB<YMgs]T4Lj*M)_Ko.g:r!^Ksr5LTW.Pikjkf'>;Y9@Z%H_*mpNIWX,&
%Y6A/1l6/Zko^sGsQ\8AD^D0)38B1TY%qQ7`L1U'[rILT=O-p.&W9q?oZDA=cGr7fMg(1%W>N?a.gO!RfMs*Z[V9d\t$2_EUaXK[g
%d"8)$>#IVa.snUgL!XpZ#'&AECC&h3]6a%&de[\2K[dHXP#3I%Vqoq>.pH7@$YH7kW["L%q,R`*+YE)EBCGNflcnQ@9\r_Alub()
%AO5=s?&K3pT-?Oe;/4f''TjA7!$mR=UKHsbo<aQYjj=%t+%Nqmk(!"h=R+@;?DY4`10c];6u_bPDgpa@r-1N6C4`srA*Zpg8S-Ml
%O+\7f66m&Q*E>B?6<BVb]rqt$X#?\.Z/m@LN]O0lWL.k=hgFbaO/CP^2aLgdU&IiKqQ(K=O*[EuKm&2gEVH?H>:7#<M-H7qZim1k
%FHf9M'?SP1?&n6`CdkIu#X^@U25=YWhf0Pe%YCg6osZ$54&O"^r)9!6T,N+]GpT&MWYBb?e#c>CmuDnW[E4@;f"4/Q_Etpa4*2s%
%?h6@beEZH$qPE(6MLe??<&<`8N>_=&OsE/oUI%N-J\SF7c]TLm07iG;4HGqfS=9H8Xj(q?LQTGFLa,%I=-ac)Y3.uPGDC\44Ebu%
%>tA!5Hb$UmIdrJ[!8;*h_Gfiu5;ROkD\2_Ln0#VcF>B<.:ihT>+Wg<BKiq%YXsIt=p#JT&O%MXge%U*/lV@f-GbaB8fWADZ#41Y]
%Y%'&lJ,I92.17l;r91/d"Lk*FhIBus$H+iO63K26I=.KRb/X!^>R&Qc:Ir-KE3u-?lWPt.DdW?iN=^\P)VUqibB^kB[<<Rd<Z+q!
%2qH_&)`K_g0\"F:.hUO^d>Dq]E-U,P[P5:b!.*pGZ&^`/ETT7fG[5esEO**jI&$M3;T,YNIBE+4!WoX+b9,[_TXh4gmVHMPq"8M\
%^%MQUBV+p,SJ@-Q:o*QUUplC.FF_+k'BhfCKTj#?NQgDGJA2X15CBVT?6^JMXc>^[^p&1_Drf>L5%XotCF#5VECtaX['Wh+!Vn*R
%n6/$_`f<gD-!Ymf?;;-c[]lWN7BE`>Vs\>EG>RWEr-G6#="^=<?&GAQNmXEn7oc>!qSLi-]0+e"r>WSAiSo\:LOuuX2rL/B>!YHQ
%Vt5@paJ^4PNGB=f$tt8kJ6aq;,S60FF>:p95L8.C5kj=;]P<b^_4sMml>_0tUX2@Ef5oad81^:'9CZQq,fH)Z%Iu:JH(`8pNlG*!
%C`/U#9[a+Yh2IN!e1\S^Ks.KNlmWM27)E36Bec^!ZR@,s4`>SZ"kL4jjt4'UCQH<gJG;`5V_kudBcOMGJ7&BRD3"oJ1]WFc?up82
%N1`DJ;+OjL$7!G%=L=X^K3SHt@K%@6$&+NNfi3<kIZrI-2o*Y89Hn;IBbBqT/npCqPS08Sg5Xbf0Lmu?54/Y"^&iU]q=iPu%"lp'
%N/`.Dd,:eNCo!+U"r0clZ[XfY1&)Plo-q,0AT;','7d(+^-:"4;$qMopA80lY]R@#"3PSN4Qq!)#4t.f"="ko##Wut4X_/k2o/Yk
%2)/^2XY%#Sq6!_`%gH2M4%-Y(DqQ^1J=(1c_eun#iL'iB"N"Y]'HqL?8`%d!7YAUo4J&oXI/$hZ>ZmdfQ@`Djc40FJS?<64c/^SW
%[F%1goKk!1UD%i/:+regV3Tg3R/6r[^HdE8XpaUnGc21u88T=5[Kc*/`ROqkM2!)5=6fmhqSk"$<oDj6"rWN%1r#1D)ue3/Hc9$B
%$KD"M/@kY1oMbFgI9uNEj&J0A\iO2NF*f^/HJ>^IIkba1Lr$\d<6^Le&W#CLYp<aUbHbU$pVFaXCrs=J+p5`()bloOmiX_\RK>Y+
%NI&kBP3U]h@A%2D*7`9^[,0&28ruK-!aD9VToU=NXW==tnePZZgobOC##W+10rC^[%hlDTM:"en6h#g46Rbuu;18LRBqZq2psrHY
%1FS1P&"XL!$1<T/Ao8A]5<rWY/P'+K&Q!m)<fJ&7B/S<Zn%Uu^Y;G5WH+m)]!2F>>HagM<p4?nf$IY+c58]K/Qn8J1GC3K/k!#pE
%jMg"LWW+b7BUFt,E*^$F+@HpP@COLT2H#nD&ll^26lctb_/)bfqDs'*J>buPa7dU3JruC@DKcWEb%gmnC@6')53Isu4YQl-j!?h<
%"jMDZf1roL)+!kPPe)91eTS[ua8Qj?jf]Hjf])-c2-Z3m@$fG_kn2/u3UYB"XNCmJ[o?B'd^,0S0UQN3>,<<5%'+SPJZZ($_(UfW
%g1X\ke:8/e4F!t:Je*]^?:UK"$a_iJ*kDC2dL7=hJ0$2A!$---hk7Qo!S.d>hJX*s_'SA$e7tI)-40t12]3=5>IJlA@GjE>@!VVd
%rB?oX<p/]X![*(>@M87WHKt4@)qm,AOX%A0E:o0_[,o082+.`WF6I]-HEh-ZU!p@K6F3@6gKc_>0SI3gABEp33@Yu-^1%ged[$&n
%M,hjI:CYK,r:%*-XHD\n[tH9^o<*_KeHE7:K%#=dK`3[a1_iFa,@2P(@j@g#^5-Pfe"7,3HE*QlU<764+[o*Z,E41?JVnBn[_hq'
%#oAl9ZQ6l6WeLBFh)Q699:JfEo/VCjhgG\e\-)TcfZ37R[,HcKC$&.=p)hlOb;Q@HTDl(@_XKnCDN8@bVVD4GZa"RVhJ'^`0o,bI
%kls,]ctd3(keK\oR`\qPhO[JgOg^WHk0&QN<QsUQ@YGj4a(MW+C^^ecp-HiWg-XO(;fbC:>?cbfV7N`6=L0/lRL>$!B>`W^m.X<$
%jbBuS^#pd+ZKAMt1&P^c^CBg<4[:Yn6LB!;nTBbXL2`HOE1e8ZM`0mLLQ9KS./?E6C7e>k[<Wuk[=Tl>9=@]JjtR4rqHAek#(ccf
%Q-.J*&LGHOB%nsB\ZUoi@EU;nk>(#!,oQq+a.m.p`4M5q9ab["rW3:<R1R`dc)CjS_5Us#SJ]g*XI`mb5QFS)q<#&NYN.A];6Ya/
%ABSn=s5qiAb;UT54akshllBp:'i"eW7LM_2opj/`$9D'e;=LH8qMsdDPT<lCk.'?iXE9NS%0?X+F,QShffK6`pVT0m9usUNe_Z1.
%rKsr&#/B$]86h(G=onig$^@#0G)](Dia)-Yon9nV_QKX>jGs(P(`ks3D@<'WWIHgq\]hQ2)Y%E,0s1*"8=jFXYP9]$9\BoX?:=ko
%NVP?-[QXtW;gMoK.<mkE!*40.:Z=lGHo'mZ"qI>a;(:J`)c=AsKSqP$7f<[$U)0iVgjc"_7c>1qf6?cfDBV0]97`JojW/AfT]V85
%$RB2KTE]q<:_?h&nQc=-+'Em\5+eU,Llk83b;%,W;U$LoEu+7hR*WE5G(V*2]3>:=i'$gdS=h`pV8RI4ok7]bQ?+mYq?)a"W\m"=
%+!j[RYk8k$cQkn-p'cLjWE.*&f\`7mEZ@L#/D*i1fqS/7W1>,[Is_7j4qgKAP?V43UV@t#<Sl$*@L_6/LjH(qgp#'O&WL+!]oP&i
%s$KI(eg";*CNhq2$rB`4_p]j#09O%piAIh;[1aOS4U^V&#4c/qSYn08k!?,W5N&Ff^EAiC9O_&/7X,f?<kTUoF@LD=e=?T%!]<QN
%cM<S8G;W0:Wuc^!@g*(qoL`]j6u1C@9+&IGq5\)@;c%6aI1f7e;;B#dqaol7H`Q1X3fo(43p<Ffcq&;5RDif-.;!j+,Y#7(Ei^R8
%`oWcbK&N_aQs+`%iN%Y#^\cGM[2b%Bk_t_]4Fh!<Qim:rKJ>rh\(AO/h#7Ks:-V)/\tgUiT(YbYkD'"=H`E("A=21)e[IRJd"7iW
%Zp)G)5uZ%>Ce#NMr`1lEG7ri_WY);``N>-Oc!b9BG5P(@I6B*37e!..Ls!(MC[N^mS/L)'6$$:,]uO:p!?J5aWPE[j0F@p<o%6`p
%gg?a8U1]F_k`:3.DbJLsW=<7*+J/IQ=g8oDL8:I5:u4tNEhl1K$$'_[]#_1)4R/9kkbfV9Gm8uaVXU6"Fa)Ie9i^>+n9I5sU)$MC
%oW)[*njn!,IcK0K[LI5`J$r??ABCH`4P,]FfSWjchHH`8'GamD"$Bn%'XGY>.Eb."(pReKMqu$D#,,(K2Ma5-%fC$./sbVf<1u<$
%QI'h,WDab?;U[aKl.SZ.2hs6Z"MS\7]M_k&HJDEs(crO7>5@GFjGh+lLA*KUps]gDB$OXbNp22Gac14(Sk)L1#.VHp]?_A<W7A'r
%oZbC]c+Q+/<Ctj:pdg`&)P4TFj=SnP)QmU"/?6],hc]Q@encFJY[T%)Q*OGdKWK!4NbK/?m@YWFf$io>hbk'(-)!^J"ij\8jg\Ye
%r+K4P5s&CGZmoMXiQ6\SB;;Ab+='nNcn_OJ8LNmD2lIMbT!&q_(7QgH/Nm>/Jlu&j%)n#YkP5D9RE/$s%5UZ2.f;/8+&mVA*Gsim
%`FB7!94GL1etYoLO)-rq)?WOuiSDAKDY]OmkI/nsLau+GFW^OZd=TcefD3'A;PNi;#YPg$ns!>'PEJb6H)!<"ZV)gEgsMr0\+o@4
%*(BccHX1P];_BRY9k<H."?`ftPPh4")'7n^j#7*_R@0bH8FW\"qY7$7\q'5^e6m):+jBI;;[kL"!Mjmd/C48?kCemCa&Os+es(=_
%^4QckjU,ca"SK[nf&,RC<#60(<e2he'-Z^mmrrk'";Ep>%7f/q/,$hcW/r\Y<*:'48Gd$5X=KOjcfh*\W1*MUMJnE_MGI*gHr%6=
%Xr3oaJ07(h?Yo$^.8!Y<!EgWdcJm//U?q4Zg/&@;drZ4cS_Zts<@nCoU[D)(HY7ELI`YOnPIWmsCU;)-Cq^s-VWo6O(<SO?BB.eQ
%ENa!)A%&b-gYgI.cN7Y0FTf'GdqtT&8U<iLT1c@&p.^.UFp>j_khb!n<.K>]DM]Ij?=QbgR2arsXB![2S)nA%T`EZo)6rJ$'I.qL
%q>F.r;Pi3C<5G;m3eKs/c0W1,gF=`<K^d-mBG[n1ZW``uqSZ!&I+O]"@!35W9)fH.N\raLJm<b&?OJI-S[!$])8ZuY5<Mc%6<UYQ
%9J[FMqJB%3e;l7)eYN':6kEHP%&UA<)9:QnZXnQ'['pi^Ib:J=]!)Mq(8$iEg5J2FGlgP&OCp`[I)?b4IEXgcjYP;pN^)'r;;PPE
%YYnd*LkE,Ob`r/Vd1qX544SOVh=5ca^*l,X/$e0RRF7o-="S`_YtRRYM6pV/d5344JsZ/A)jn"D_JKA_`lqGn&gWbY=M)W!C`T!T
%(?_aJaSsf?:\%+h3S1Y5Aoeb,Gcd7N"QHBEM9+9"BmRVW_:%(=q#eu(:PRLA$_j3ZPn4.7(#"Ua+81ZLQm3O%kY(6od;s%caiN3+
%`'i%qhskAl">1prIDu%pMO$Rj!?oF&&Jeh'R;Wk1XZB:Uh4X)AhNUE`;F+,KB)PAbU1ZET3pfhpKWC%&TCU/C.9qBNInGdC\f3GF
%,F;$]7QT6\F/#c1DSQKY^[9Qq%mXYfENQk>CqO%WXOD??hu0(R`@iOl0L$)%4^#S>2M48OPcIQaB-c8<An08tFUWII[:_pf*<<`f
%>_XT$ruigVhKK&L@D>>LGT\Jq3%:2Wq:b9SY=a9!")Y!sa*9fEA6P\YE:"RC:Z6'3#C3[.6J2I4V%FgBe8C$f%b1+20ZX!"eMVt?
%dXZ4d&g':F@45VEhfED\GI%iXI+[ckIEhj^fOC5@Qlm9VN-p(d?CCo>C5+P""r4c4WuB;^?1gHcgCgQ&I&\7bQB_#$!8YQ%I'IF;
%eKs3po"s;oV7C6u2F=AmUJMIkDL`-`OU%NTBWn%`L/t(sh:rqCD>uWB`iAFI[E@aG!'/n"fA]5Lr;*:Np@EVSgnjaK>\K4Bnr>10
%GJ`&^.IQ`>Kj[>hlHO0f(g5E/J,NjTRVGcm;s@1QJHqeh5p_i6/"=h#Q]4L0j(3GLkW^=!Iu#?aVq[i7"CF[I<^r&2KVJF59#,>j
%k!a^NP8`kpd=ZZH\k@@VLqUrK@6N$mD<_^G#&tAk!)V(Z'cVAX?(Y7OH[l';esB["-^s0\YJUQ@fh<6W7A*9,'96JIT$oX@PVgs`
%eZE,ZodO*5WXJPh9K'15c0^/[jrP%Te4=Jufm@1rK@=4;h1mneGTYdI8dp;m0_PtPOK)d^1jU20?/"[n,]n78krVWk[YMj+;T;#,
%04c(X7RFkLEd>.Ic%6548"`($R8]S?J5Ik=0o#VZVlnX#E9^"EY!'`@(i2q5D5pPE6a2S7pNf)T>F7Qg$32EMQ>gmYW2#R8%,7$q
%nB)X>27`EkW^p:tJW5(O!ThWB1n'X:k':]EP]W\)4)3[4`Al>TZ;6edh"p`6cB0&]s7?9dotUMM.jq=$K+ZW)OQ>,fT@%S]lA*M+
%)OVX56t1G[>Re,I91(CZ9b(68,e64K$Af3h:f(.3QXu(?9H/rOdUh2aeSF9!MV8hF(Eao"d)5+<^SWB.]^b"!B\rHF,a,e`KU=QU
%=j("5Gnl.m!a%tUM2r"&E1hh'[0XLlD^"&?Lr:CIp`]$:Xg;eoore`6jTHjFNe(;&bu78jBi]UU7_LmR9QUBCR%q/+'Krbk&VX(,
%VhWr/[.@+=\07*&kQe%;3D<t[n=*2S'p`h0fAS3c$ELWZ@_qM,e]p9A<O;mq/<=`$eX\^V:*N=S!M8IA'fdUoFM85@<I<+:m\nKQ
%feo7#4H=4Do+AfbI1+$o/*<$QL5F)'0In>3XC/1mSooK5b??-Z:n#dXfR$*!TkG\*pi8d?l\)(6_$25g93$MH%4Mn;=[W??k-`R_
%H?#:'U6jO:$D"mXUn:Wm+&uDW4W-WcF_Wt=([c!$6HRhF;!"b.k7,H9M$4VVUC=!IYW&QYl7[`VP;aKZ2PSRJeAaJtjFAZe4Q1AI
%`2:t=:"]hOg>*:lW\[O":<m0VB/Rml&3e!#WZsB8=`(9bPTT8UA='-qrWs'B2)c=$%&]NQi+1YEnBr2cLjE))k,H(oI3!!qHE0NU
%BVc$D>[c6IJnaO#\6+UT=n8OJj't'A[g%F,]*B3-Ff-0LgMTJ]&A2],I5[_g#XM1g_],#C3@]oYq<^+&T!uZ<l2URgs6dZ#p]'`T
%J,K'@r*TKIJ,4*`hm`VcA,j+O+kQF+^AZgdj1kW's867'hf&PkhuES'pZ'<oq"'"8YQ+Pcl*LEPg]+!DrbqYJY93<%5C>Wereb9R
%,R`7VTqf7BQ#FCro8=+r3*`h-]1,D`!Ticfb_I\<fV\ed=,fjDan$oK7o3s>3$pSAj4*YbYIP?DJ%j46YBem&R=:k5:3M4NhQf[,
%?=:H]T&_S&j<28S4[9qcWi9Ib.TU>QL6g_/1C:RUMR3Opp<G>)/:#"OXK>Z_kNVbkf2N\bP,^tC>/#>g@CE&UqLT\k'>Ogo^.FSr
%*]8(4Q%uq)1u*i*9#E2u4^p%L0Agcm,9K<68\cER2uT/A`pl@l0+?aEh'BYPSP-"1.GOphd\EJF`PL.s#M7i82Z:o_bg@Ok\erUL
%Vkt3"`&JKHgY,B%H3A&bo&:MF!*AE)kSZEOj$@AAe&&Im0cOG[Y\J_Hgi>!pf5edukB$uXr=Kco5Oq_t(5.;2RRa8*cIX)8O+=Eg
%'Q/6eI5h1PM=DGi+E:f<gBA*!s6i.lbDpc"@GeXC5O39lmKt0:>U'Z-Q7*1V;e%*NqXs[q'!-J8VT-n!Ff_kkkfVM@:c%)p0pF!l
%`PDg?B;T7WNcJ35mppWTA^GO,A-c<]=;1["W0A8D^^!R)aO_k.6)H^^#@%&WQNnL9W?0I8]:VoPkhs+kC4ri\IM;p"(X@k'U!*3[
%NNPW&@WK2sTUBYqk-]5+rJ!]@l4ge#WRIO2jFq-0Yei]'rVB+@j[XC]@i)6Q;M`3o="t8WQ"CK]S-12hf4oq?TlfsM?EioVe[Imf
%p-'KiCg*k7UQMVsUsG^-;*l"ZQlrdINDB./jT.Bc"lJSLipBpN`9BKF@ml1ejiM2$n@76eh%A5b;(YmQ67jQPD&_*/J/E@PYL.(3
%?H&368ttgEb0):B:cIq!C?^%H7j$8``TI$NTh'Yt8X.K-C.+D-n4JNU[ick3VMc[#eEPK0\X)C*+XPK!5a!'@N]j,W4lW#G;&iSj
%FbEdGc`Ls86&ZJj"E;^F(1"Y4a-80_@STTt1&[A@m?Dpo*pBj3S90Bfjrft^f:Q8n65;^;P6l6h^u0F*K9+8a*jUIabqg.26H[7^
%r6l!kE8f6G/_A3@!Fee4QpL,aW1,UI65?amPWZ09P_\Eeq'6J(#u3oEX[XjR$5TbQYt@U1;1tdn6]UBYm+0b_m[$R<Y`ggY^E77A
%9&E_[b_jErMXK2DNmScI%]cR>pk-J9)?L^GaGq6%"*N/fIW+:W3fJsaRCAbe)#2hm4LuoohPi%So=j(sff$4ZGML-3FTJ4?CZ*F#
%NB"KbeL*sIfe2X(f%HLXS>HpEE1aQOQg,9!F)#Z)H^*BVVP7gb:l%qb;7NPcUUeh,0#pM!.&XZu"[Ldipk2h:<[eC*'-Fg=+BOC3
%?([04l*c:`<k8*k'LPfS#6fQTO)q^VYOTOmB:'B=E@nW/J/UNE(_>ZMHpE_1-[HZ]GEWI-[CL;M!jH']FYs!F1=qB]S]VfHWLG%5
%Um8HN,DK^MD(QDO9W:Ie`d5t129Vnr__$`UFFW/$k*d:0X6g6<ZEg6?TcNe#(TYY*>X<cpEpFnu=0.KBd296!WIHZLrUJB]K\f`Z
%?pKF#Y&mHYh&Ys3g!s%&EbU_0-OS1eS.DO+TSV^$."EWk&cB0;Cj*cg,1/^[7c,BfL>r\AG]pbTSHJaPPhGVkeX1&&M.tGpU5i]b
%9c_,6G?gN@aCZErZnV3$Oj31X;!TR6$$)fH]dDF<VG8e!/8%0gArT`pe^;?.[S3Ages%=LXmW?i>hDrZ(_daLL*/J$Ie44l*Z,b*
%e8gbHmUpPae<BP^UedX-B@]"+74MT\-XfEo"`l,<;X;`h("imRX,#<QP;h02Q<MH(-A3BuVY8Xk]o^QY'&9>Hm1h0?n+Q"jW]8cu
%]>ZW8geJ-`VK]PP0N]cpo((B'1JVUP'n=Gm\eG'sPj!9iF.6uf[!h<:e@F1jdC:$dQBfrddS<8/IcZuAlkdHbI>^)0q<Y&Bs-=k-
%G0b`a5kP[hChsCf=]INhC7'(S=Bnu%1t+P/_&s)*mE&M<qat^UE[.'4i.3hO>F@KJ);S?*OcZn%PlQs0Q`Nj:f>8F(,YKm_W/+@$
%#kY4C7]nM3',.WARjXC,*V>Y[jjf%#aLTf2KhL6k9"V^r$'^p4)`LUeh?o$cYRC/QTD6?5&h?_bpp7L"mu1;ce>%,FfJ5h>:Bb]F
%HQtT>WK3"ck;t?#KuYnXSR*`STVBQ9__G<MB)R92q#kV*;^ccf:4iq]m:I(EGJuKtNJn7n]<YmHV71lj^7g_0OB[]R#HI5dOMX1^
%OE\f),@[\A<dU*ZlB)A6W0PlmbepdFOX,:.eLksC9,OIGKL#r[XA*c;19@1F*D"`$IRq6WZc?(ig".03[jD0B`na.%E>>\8i7d'`
%0g=3@Zsm5V-eD\+:p:4S"Fl42C_cG#,&C17_(-h"R@u+(djd;,ALX$_+5\0C"^leA8YF0qLT#pPO0=1`h1oR<I(ruS)RYN)JVI%t
%@(R2_;-n_=/3dtM-*lZRO[Z%M<)qmFQl6G$rCAP.4Y!VB&^SjWZt+eeH.s3oeL9T_$8eDNW7*1m<5<Ss:!:jSWSDd?b+a'7rI=sa
%]UBMKQBM6XjXQhpc8<JNNCFA250!YBECn;:!AoY5ptNs?VF@EZVf>]%Ea%`0VNb@G-S?].)=XUpkFir7m"`@#J^StQ_t?HP"\,X=
%TC&>m+9T/4hPD0B._RB$[PWZD!irh04$ak#LO`Roc1rVmBaqQ]Pbr>B,1k45Lm9VA&>gCT/G(o?Y'4*1*d4AQbk&4WX^%oq[N9KK
%E^L\l\u*6OH>>F5=^,9jPTdAP63g""aojrop@UjgiVEr;[i1mnG(EM1@Bjd#H+Di4WKW+Qibakd?2i%jR>W2VBIdksRrZB1hq^Xh
%I)rkgUtX@-o1#gS;AK9I['HqId=)tUd@m,ip<U,^;:64Qp`t?iAXTbJQJ1]p$KR=3?9115GgE?!Dl=7eelJM/#g%i:(^iCXrRDL;
%CZ;pf9e`G@J)tj?#HYT@gUc#.Y5DHrdglf2+mJppX:n*u311_/qp]/6#715*Hr,6bVqAs_i6aZ'D!ZY$4oa<Hhqf\m&[iOq$!B0f
%(6oP>iCV?:4KL91GbW.U6S]U;feB5ifrTb.<Jn<Cs0heQ^32`ps"<KR5hC,?MfIk>ocI\D\&&%Y2b:hs"mO)_.1&ArDCY^KF;E\@
%,;E3^Pl)IfjT2[1l2:da%U1M'TWLrH0oKi5n57g92im6rq^NkcYgP:(_thUme\O+.ZmE=c1"hXrCA$Bdi>NVbC7qWAWcL&_<do7H
%b-@,pm-737oGN<,]\Z+nn+\Nsh'or''b'\li=O!UHX&/&L:sL8U7R.P$?CSs&>Pr&YjQ&pX"D/qj[:5&`oWAX\7Ik,*9:,DdZE;9
%&E>27hK'b&iU&\iC6+$j/_TMFV[8YUET_odKsp7][93qk,K7Vm=KfkM'+<#UpADCdo1r\H6?PK:`$lBVX&.4j1KlU(mZ\:l:L>PG
%*fmD6gC&9>eDh[Y''6uhTq1B)75Sl_[J0f%FOUO+lFu7-PRZejf@J"hiG@p+n],g&+k.sEg/4JKMOr6A>M3Z%2W/\VUQ1kEX-qYY
%i*(]=<rn8Fd7gk]e/fa-W@BEXn4QeuD^qn]2&l$Oa@%-B*CtBAS25nop@6UQc%#80DB0>%2:A8[JQ/gCCsO7]q0Fb*UZplH$1qu2
%4cRWchNsOPEq_FTQQDKROB!RP/%/"E,Pn)#gM^]B5C'TgMYW#TI@&43T,oTY[;E0Lo]kZ7"j7;p43;``D"C:J)t!7<"j7XYnMGd!
%;#e<+eplsj#ncdTqG[F3O@b4]<Qu#mG(5t$H#T"I4#%rG8Qo42E\/-XNc-.MZ1>]V&rk7u<,KQed2D3Q!eF(X:5DeUg3.\Op#BDu
%SORTlV9Cm#+cE=V5.>C!+ucM,199^c\HCN@+$sO0@T2LP$5n$qQIqQ\$Y-!WiULI3G')6lc)P%f(N>%I"k#ID$4>c[$jeK55DJk8
%Ch\H(A=h*=IU"Ql4:iQ;@Dfn-qQZ%B^DQaHeiM)(j.R"R<sP."T6#F??&,T$\C2!ZD!:6*o[<j7<!WJEmp1KKf=F2@)-3W.`"TP<
%Z9X4=N>"!/<m/jNC30+rmrb+GU7;Tk+&Q)k8tg&$T`uqDg4I6H$"6-bd$@QYpcf[rgc9]g/5S^WGF7r)89*e-U2sU)p5M1j?q-_K
%=4JB9YS!Z4git%kq8:SMb1EAh25?RpOPJG!cFro*Dl1:uefo>AV!)<M3@HHe)@0tHOVJV/'7&6p;b"^7)oE@O)/J<G.B]<&Q`&tb
%1Oh*;5ET?n2W&'3OstHq"BqV#C8Dfu-r>3]<,)=X*BcLGK8*MZ2L$40JeQ5u'9Co,[]L.'eV.Fnn21<<+5/5pT`ibF6"c-PFgrC#
%9D@Nk*)Z]#:i1\QESCA9rYNTlX>b=G$=(QY(mM6.Es;"&h;A"8@9ek"'AuF!\%dKI""G@k-,.mTC.dg;8e8GRhO$.Yn#@=/8-\;2
%1f#[!\PKd%8<:)hDMb0_c3)RE-K#0Ic<+*?M2u;\qW2#kWlfP_1gMZl)M6/MoMu?WOCj8YWEtPto878mla_d8TH\"FAkL;<93q.7
%*jhiSJ6]RFfRnA!aNm[K>1AbW-dgO`+%s6&hLsMds.O;N"\NF%"UOm2f67d4Tr#k,e`oF(bL6/*i_:;KXSV<C/*BF0L:?h5Gs?UM
%J!pji=Tc</B[>s%0TW9]5c7fpq#\41"D!Q^/:]a"f+WKUm%W0+/*]gQ,ju2S;a[V;O5IlDfWPACRPB!h_1iLDHjR4>7aM"3o6Eb_
%lhE8ig3=BSi5?H6Mu1]bjtY(pIMDZ"8BU/h/dI6U.g7H?0DMi3:gVom%I39HMBfQrJlJh>97_KgG3G9rrLVoq,(6VBYY.1IcYWFh
%r%#c8QrK#XJL_.2,2,Ci1O'^1L-/\A#CB5PJKn*!&\Y6Wg\_2g.SA)gZ=M9@<1oL)XqW.S.aX<jW!8AUB+@X?%DaW,$,`13*kfX$
%EtiUV#emm-X\PcQM6.QJF6kJVl/I%9RB^U]_h;5:`%?3#NO2#'.3B51X`bafq>h<uFLLEEJoBE$4C^@"QFcU)-).a*5nhoV`l@h7
%%[:3J+dL.r%W;aB=GRhs_%g`q<()JKeBA1H&Pm.R"71M_oX9UL=S">:rE'*2io,d?c0SI[0kd>6%o.e5H1)VRE-BS>I1-*;FijQC
%,9AOs[=!@KACKY*.4!QS\?NNme`&[GCe+2O+87T!eHRRMAZ%s!.N_S[02[R5BCV%DcItR]5T@pEm.[DJ97I2aYr)*13#$t2kf`9p
%q</EMA(T&5^N:]C<q)u38YuiN%#j<u*oL[XW3lP\LleOs05a9TJn'e/Qu`[O@p<;pTCNsu"h<5'Cd!YaDD=C!_5\#E<2^Y(GX#R3
%odj*WIj'/u%n05d+q6a;;d$+(T=B'dlo>T\T6P3+Dj/T>hNm?_F>*B6K*[Q79Yh&(cOH(),Y6:NLSWr-2'O9=kVO^9Z_!=D#Q8Dc
%g<JbRf`%@!qr8cd"(G]#.BC18&[\i/;-9bt!aLq1KN;-ua/4%1MA%tU8Hk`W7f6;Fs74!A8C82jP@pQk*-fIe<k\A4`8dnP,7Fi`
%8$`.?r.6Ie=p/]8bS,"-l;`__Y=4i3p2DXaG\M%Z=.BR/bc?%;FYmXb.M;t<[e2V\CCnEgpQm)^V*o_\JCKZH9XRK:3FFCt@T0:A
%BiE&H6cc#iC?\?qHs>sJOpF(a8VdL76_m'"<^d1#jcS=m?k>f[&A]uJSeBUJ*#r1R7lG6NCKTlrk&2gYDURH0mk"4eTGmEs`33Y9
%@Kf@t;6`'h!%YaWLf?V5>0ufd=]_FS`!=[sW[;Y%L'k3#G5>-8doG':JQF:\(!>;m]'a&qJa5:O%5J!Lo(.K*aXV[B'j6'g,<0;&
%?-BkR+$3M*s5>t8S-iVM"R=FkG('ZZ?%t%9cjt$30RZF,Hg->H,15YY<HW/(.^L=Q>Rb-&]WO&U;bbX02XGi'862@V^G&tV>Aaj2
%AF2u^Nh![d(b"((](eW-V$1d0\fI'p;=p7/>P8C&Eq?rA\!Nk":\1@0m&qg-W*V-nZ0#_==^OtVU7,A/(_)0A'cf_$CFro0"uS7$
%riks;+A*:#[-AVhF_\(:%^SKORnPRa&edP,"[/tOa`iBu&eKRuK\Zo;1&Va4()S5l&A%/CI<Ga4iI=i]T#,I+6rB(<B87s.'^0J%
%osqN+UVmY:N06DL]R<c?2>L8p<Z&>7ja#fp_<.Ug[IZC4rR@*tpAJSjFUSSO^`f17C7U[XGe4-SR#J2hg5aW'>.6EggNi>;jmlOt
%JNNmCmi";2c@O!u.N6#>R=uUXj_MX2__FD?:UL]*-U8-0-\&]r3JRo^93O+$ANc`4._(Idk`sH99@qN#1/Sc!KI.PL<+_&*(9!jG
%(a.;E'UOhS:Pi$i"hCK[cN4n`X]4/>:od2h(rBi)kg2mKY9Kr,]EQ4-F!m<25T;=Pqs".qB@=/K.ZOcXpq]1fLH`r:lP=6^OFqSL
%,u-'m=c=V5a?UZ6\pYJp]!N0]CSEG#C<LaC"US3a<ojoPlbQX*BUWjVBSofkN*%^Be6)eR"D9[V;5R%CQVJe<</n)][=]A#PYRpc
%4F!QWC@&,"nXMR"/E(>B#Z`5SC(OZNa;eXHJd%>rmN35REMFmgV02>6dQd$d$/;8&($<9W]\%#qdY#cnEBch[oKUh8\>Q2uTf5\q
%5*/VJjb*-S?qorrZ^3,4dc4_gk)knNhHo&hgZiEc:9P=)Q(sE20.=d)3C+C]\GF_I"9iKeZ5!YIdm4R'OCp;ZR?[PIToPgf$_P`5
%7SaGD.k&u7\NCgk2if+1!6>l(8+aK(9lB84RBa_SX>5?KK"\dXdggV0QZh/i:oL+BefN)/KdhsjM`s'.K/4j_e(LHiVH[0N)>roO
%ho-3n0X!i:!b9b/PBKcbM?Wg7OI+'OJH$&(ditt[%<MkgTKH<A)=!W'-*EjXXa(G@^;@1Rd3&!?L$>_\k&@hG7dfqXHVRf`orlX^
%8*sq9W#VJPo[o[*ki$/@@%kbq<d!(SL*c,-&3*)"ndq:mA.\V4ZmU4\OHGIq]dGs4IL3<TdmH3mA*mskF"KX<[LFO6oKmLhdN]eB
%I+9lSn6\tP)WJXV._l@joVVpK51\XqkH..cF(J?T;>BBi,?!Y]ap4_`nM*l-mXU7Y`rP3j27dJj)p*07K@c^O+s<GC*LoAc)l+%i
%C$9fWG0\=L^Z2Z^>R-Tt]Q[9b-(W&4;!>T%$V(o1*Mg?=:/E"KE\6MW$qTRhW^"j`RfPbQBpt)GZUOCJO%?%TA61Qj&DFu-?Nhbi
%6`80$mWI<J>lYk6Su*e?>)lU;0)G]NUM39bFg:ngdS\N#8r8=cDM0G`eNZdD[^4kVp05u3.lCE)d,DZPkPTV)P+JsD?TL9".L<^L
%gdq[GTk-Cjl_IOkFbI(O#(!%1eI=B1&8_GJ8iKT10$ot0@$6!g&O66#gJ)G@3XgD7YLKLN'I\j)J!mo5IM78T3Oj)Z;sjT@UQuoA
%e^@UND-aS7H+PN$^?S_RCi$R.)Ru;?dlS`mU:@T*R6i2rD+-f*)b9;*m@Nu'XmiA+[<>FhII2G'\$"cGT44RWr_M==M:PtuUe0&6
%]u;`2(u85"M@(fOXaWL$3Xq=Ua]\Vu/h?0W;'=+:[K(m^7qr$n\lgOF96R3.f8])g<j<p0DjDcV3>t,KRSU#8^ZdcTkM6g[[jD[\
%E+_M\^A$eV'itUi97iD'Q[o^@T25"UgE7I8R?hqdUZZctQH8A;5M*"R#_i9&L=7;oQU"lDQ40o?1`CaBJ&Sk)K-dJ^;].#;_%VaD
%F_B,%Kg&RPY.?%"VFH#YSD"7A'XSD$!>h8g=A0(hC*>Pk/[(r(-ULjfBc46GC3X%)Dg%PC387^QX4E*g@HYs:6hU&/*FC>j5>E]-
%Tp'-+o[Qc$/q_U9nCorT6sr`f6G<O;Ei/#)7-,ff"&Pm!2/8EWU\-'b.0!r$FfbR-l=>mtJSD=H)),1+eRAAPiINe1[&o7E<Nu\:
%hUK\XT1CC&N21;X8tii\L,K#n/MnrR7@p(&b)R0f0R)cAj=!n^;u9>LE.,'ue?E[ZZ^TY[?^i<,NVL];DD+lHprY$46O.Ned".5]
%U+=n\oTXa,.L>mT=+]6*SaGf\.jkH9Z?ZjHFaW:jG=HuU62eUTE5dgMk9*4hdH)"++fM'T22K^M!.i/9QnMcG5rL;PSgJWaCg"Wq
%BrG8Q=p.XQ>1X=%DXCL]1@?bBnT%SrEEP`1*D\/_qtFR_kebkRJ%:`?.D=rf=6QnenQT[2%Yh(A>Kp(D>W_4C[q%-=]98L%#Qm@.
%Dq_Tb.J:Gm68b+pb.TKp<;9E)n*(WfaGUI(bL%)l$AA_OIp\=5+A'!T=S4GJ:`MO`h0]+I&cUV<D?kCXj99'^X2legcsBb:5gDOp
%RPXtkn%C"Het'C"E"ckWa&9U2qTu*'("@W]f*^m+k-0QN]</DQ2X6V?.T.KXd?c%\mCD$ldreA-QKPZN86c@DFK/u[LI%Q'+/?&0
%B?mj<TBe+>$dI+Ws4VG>7]>9olFV/>Pt\YYoRnB3O]o?c)OcY`WFkA+E*?jF_3@4+gjkk?b2'X!<e>Q=WHgmVrDCallZ#?`.g\1j
%hDiQAbH.WaQTSQre_+8dZjSmJ\qdZC.uW?hk6Pu_Sj(1Ud]PujH@u\QTDr*(^2Ro?33EUVT;-[K#=Z^Sq.T3*6oO7">i"$*-nHqP
%.X\8B'L'*.>]numkW4umW9/"qf8mZl*SLZe98Dj`K)%3t3,#<[H!@K*i<[d6.]V08-WL5&qE%]as0.9W]Lc5)Aa][;oY0:<k.6K9
%W5EpkCmaRCGQqH'mOiia*-832o8@ZS;G=g.76VHOj]3M5d%2IsWIRA%CT'Q@A,D^OL>YV;NN(acAlU4I+UeS^.9c.Wm.-5q:D;_Q
%Ni;q7GZ\Wm#6H)%6akrR\/FAU=3e?j/23i7Pb"B0fksL*jSn:jIi!3:9u[(3Qun:,X#)rf;%_HU6F\?X&@"rsX\'BcC&MZ\;.Io5
%-h2tb/W4M8`MD(fQ5i5\,=?ULb9.g1T+TTHF:U^W\XZLdq`E^5WRPk/%]`ogW8F%kTd2pMJ$eg@/TE'^JF8O@78f+?FBHbo:p<\"
%fQh5>s,;[B#$:_a*R4uR3ujdP\un^s_in&"$AES:)K,Qdn`m^'_24oZ2[[MfY-HJr9C3QC_egEc3kR17')jr'$tlJRZ?h\H9d*@-
%:IS%/PTIRK7ZBNnk`258;'63(9)PWTb*57@!SuN0Y-Z?3[/&A$eY`Jm-nup'V%X$e`cW@[Ylp<ULoC0CD'.dU1i4K<4g%;0G>W'1
%57B>+N#X$@lEp0)Y;().^C395C\)$s">q/%*P1?T&rm[Q$"GOM-6BJHHD89c*Wa!g;WWZVIrh45IXPqf-`?qhL6,%t[2,FD_X(&:
%m5Nk3X*%(].ij!@BYr$[*:<qi=C$W>O"#sq71mZ;i%bV$Y.d.CoYHD^(^a%'?fq@52QINGb9gG0^KsI]Ob#Pa-'a4A0;%9r-#sBW
%J\4=O*?6`qZXBdKS_3C(b;'PpPm]e.@_^'%,h:91YdU30AS1td6!172IM?u\iS'3VrOR;7</S`b87MW;PZN5#=lhUn-N2j<`WP\;
%%M^e7pNjHJ,^auLI1m\.Ce`5hP,'?aR#s)af)_a-I9MF#`3GjB;PDe6ciD\"P[qaYP't5D&&qiD#>H%6)/=8Bnh6L%?dE*`Q8O6R
%<T*YMk=afdeP]&h&BYn*%qHKoX?&;&@pae%CM"*dAG(([>cCP>r$BU9dU0aI`CN,4>V-^.Y2o>M3h@%KH7FDPp4uEaboG(#qt)8F
%'lbbL@8m94/6#`RHPu:u<Q"lerSI:$<%.627j%0tT'M],N7YLV&OmX*_^erM?=&=XY<#RrqsSZ_gM6?mDL;,&+"Z7_rp`X2p=*!b
%;AEe4C%Pa/(GZoL/;YBUcmje+)a\=uU%M=ZQDqe,>-jLL3@r<;&eV*[E&(sl:A)cM]<Wdc&Xca()BX%PpS8]N[N<""<$VD%+1r^?
%J-Ha?:`N_a7cZHX0bXP.KeJ]9l8("A(g'eiBPMrZ&%8"WJ&F/GIgCjrn9s>SUR";*(iNPKJ:A,^J43HX"]il+SFrf0%B.G*+)"X5
%'7@!S,RV=]mU?@8W?WVK'&H%f1il%B=$_X328;_%YR9\9Y*n4@YNXT1?ul@;EV\Ar5#FfpV)t[%\@a[NKuUMVCmSlMgkHbdF3-[0
%jMA6]i]e!sT'[V(gA)l4<&f!%]?o.bY)GWG-?2'qWaBFg!I.]83bfSKga9p%j@;;C)(Iq:roOn'QkV2M[fRE5IBqlai+r47HE1WD
%c_^'WMAR`M,JV0F!(ju*8Q!mi@SWo1dOhk6DmilU.gY85acr#-RW[:RU,Y\[e']`'4dFJ$<PtJsp+XqkRjNG9Q!H"\8utOM&D@h2
%b"+s9OdJeO]drR#OstOEKV:EkM(FY<Q&NobG_&k#7tsbmrIZK9B;C"Z[F])E$U?*?%o7E3(j;_]C`a,<$hW)$\ndhJ!^(T<US6Zf
%WE;XQ2k-$B*bEHo7b+qI,8K]dE=-(.a:Y@gjRC-j"t+4g"-jfC`i3Rdgc9_BZ:4^)T>kXC>U]FBoX#))c#I)9IJeEED,kAS2$<lS
%(F+-.%Cp@"=EM6K91M,U0JK)')oQjsg&kSIJ'@sRZnYI2f,lQI<.W(#ETqr.i4X8VTF<RGLusNoDP</U2JMPU4pW(4j()g]@<DW!
%pP!e=^K"S9#(Nl,e^Xo.Mn7iE\QsK9)$piZS0,Jr%5!E$*L.rcotr(&6r=0i[c_>g^[5[&?6ZT<e?8>+6/s<a5.A-Igl-dt"n@E_
%$:EhieEh^_TbHs+Q&df5Ih#'.,LmLQD;Ub'B2j[!6)?_ql)Dc(f3+J.p4(^HB;AS\9MG=>UF;>"gqA*rFLV8UPbbW[6<"TtoMA*N
%>TLT$jAiTq:5s.MgJg2X7PP)^#oiSc-M=lfiFN2L=<*Sm6FO>lY*GR>hM7If1-RdXX/4lm=<%XY92[3i.W1s!7_qp=>_n0^nK>uo
%qK3#&6F[6D%5hsHa_p'*^DdGrOY^:S>.(PsCSDiE#5d&CEAAL1o8+1N^sFr!"TpX5:gX5@ZrZO<e;5gbqqHl<edO],+2M;][VM'>
%)Tj.CR6`i9hk)PRjn"E6g_RY94YU6^cWCj&h%VpEN%(/9$*=\SP0Fe(n",-&<56oJ&7%Z`ESj16pFi6!SE\rZJn*-soBjTN2X)jE
%c^2r4`H3TFMa6u=>P[VK6V^o@Cks^X(5lZejb[H3n\LHHMs0*5p2?/p0*q^soVYZKbPGE]..EtqY%du)7!p4KXr:I/F^%_fs#c86
%5'QC%2>uS*lHMZmgUI/F,f\(+_,cT;-%BOV%=a$gVj2hFpBH5=cd;;\5ABL@>*BTSfdq/Mlo#sf90F."&ke#Sq+/V=O-A8ugReCd
%kCZTe'qC?GEWlBLV^SSf$BGqc%)o(5bb%bD+fAd?O&s0k:%HK#me4L!ns,39QDXM_[!K]l6@n:5+),ku-qTtoVRh3[OgB]@RPgBi
%ro!(/?;G+I7C^^fCsL1Y=@>(H;F*]g?msh*_@dcOqVF,n(\:ra.5%^doIo&.5\&]qg50"+4rQ;Q]$9d.L+C*/hXY!NS`RDTN@)'C
%JSR_iEHCZ\o--O:']hs*OEYf_86R9S2!R,nGUQU1,R:E2+3m.Wo%N?/i^<J^m<uUX=q5]OF4L6m_K<k4PY\EEn>ALU0R\XZIFUG6
%%8F@kLmB6cW1ioarT?kb#X9Q+pF>te]GjI14nEfDWC`n$H%3K`d.&s(>T=A=iV9B/Z6"0\ZiTfm@T-qK^?arJ2'^:u\jkM6'K"Rd
%5uDMJ>P8pph,SmTU'Rf0D:8J)f=!;l.Of\'ck$:7E9Y/QGs$acJkR0-/T^c:6Xj3RA@c-sc<4:h#JC-Yc=LOk0%58kdd',DreE+*
%6UYOWYPoGJ;@)9ciN9'A;?uK+.iQp%^0=c\32A\ip(=7M9:olmHC3\*HQDYu-_QUufd"-AiRI0d(YV6*=!ubV5OO?aa2r.Wglk:C
%<r&A"@<G(!6FTu*,n*SuHu$Y<a3lEn'[K?qUK!YEW5M%XG:i!/f*9JB?YVrc.<+VL=;lX")EAq<p^`I5h$BT3\,!5XdrO%5B8'Vl
%bd3[g%Ls3/EL[OZ+'PW%1LT_FTq$Ss=XjgPon&?h298r!Rj[<-#H""'n<6\jZotKA:N#^$L1ciJZ9Tb/>[0+=e6Blnj&pghqfM^S
%<)S:ZNeoa\`N<`"^:Hg:+QJ0B6D9[8/YKsr&hZ,h?NDD^U+o%[Q9l[MCIQT$3=jHu#HAj6Qq0*Xqs?>OS*(n+3#@DUb58&72QWg_
%XW41ep6."@pf8i72og])+1)p[Ws4&<LjnFB`'9dsj%1FoWhC?2mF;Z[^A$[U[iM>[qpS3Y&f.E"CUN;&iu98q]49itdGagV'*k7S
%r#Xe#^$Kb84qNLS2bXVJf^fL&+/O\Jaj?p@^=g7aW%:C\F>#Z+r;ZAlKA$;[cspTt*Y!@/%!aES'$lOkH5!`[ljA:aaVcBhIXZE0
%FAbK9p?5Q,UHUW@dAf]h\Spo<Wjp'!=Yb;NcV7E7G2X>:.XV'T.+$7n\a_?IqIYkMR2u?L+%`pEngu(SVAT5sQt7^K`4`.$6uV)p
%bmuON(c+C6_&hV5=2QVpR8KOCfC/Z2%O`=j!ZECS"4^^cjpla(@/JWVp0%&kofj$gTIriuf;<.8HLGiI@UZ#PZRDJ_qbu6P6VJ9.
%Xg'rm)+#0Gf:mP*pX3Q()uRRWA\qU;<jSq*ZGAVmZ]B-\?+:Y$clMRDWi$5Wo?P_H(iuYth';F:BkuuE.bhI83@^N)/ZF'_p8i/I
%YKUGA5M[/j%qr=BDRm%@N*JD;Oe;>KdnV!bV$'ZCJ&X-J.=FReHfau'3Vgqcq.l:J6O[>9<:cO?Sa+VV*):uQ`Dm?$BH]:$>Jj/,
%78LJ="DU.p(VYF5?p=FL4Zkc;Igq^Pb,?]F>Afh?*I"LCd8kM^P"S&T69c#ANF.0V[KloNllNnQ"noWC&5>_*^,JtB2M"FEro^qU
%>^BC]qX/-[IIf9Fojp:T@D>U_S/s,Cl<h&MlDJ=4?JF/m@+T[1B-UunJC%"T64;R#5nRQn-^@pE7mT5Lp1H&P3F9#gj<nk[2%1#O
%=0pM<FG0*>Wb@:E[8Eg8AF=BN5,]S'Qm?tgW**?4jAAr7:50Ptm5'*XUX^V\R4-Y_<:R8YCL[Z\?@?/2QMOo[2)%h5_6_kglo]U!
%bV>+4=B_`&$oQ)#h1i3UoHXeNF"bAP;0UQ$CdHE]FJC[kWH(tu_(uj5VLIE![YR$2W1!(UfC;VI/35Z3E?oGnbriD3d*PTr!3lhF
%4AKEq>!e')O6mS;em"O_XTQd!]iDnsaoSP5n(E]O@-:,#='Aq%[90B&+`Ya`/F0s9?sgZ_+e05Pa\Dg\3,WpQ-<uag4h]^g:2MIf
%Mq&TS+1(c[qk."bVe0:*MEC:I3jWZlF-DC[#:an4`)*uDR0cm2^#fWc2pH*^kN[@,n#UHBR>Y59/$4*9IpKI0bu'c[9dY"&AONU=
%Wf<V[25-eOZRt,_jD$X]]GQe8S\J7?)/N&kfG"P7*gt?Y<ii[@1UWd%3oPrXc2F7;TKJif/Xt)o+t6eZB7/"pct"`:D;c"MnC6a6
%pP-D6H3Em,jD5cHHQ-H>GpK\o2MEH-F7YA'o35-!4[2nNgW'nJ'b3-ab7O?oHS<$Mn4(=pReWoqf00p#V4tCH7^3\H5nuW-HPJ#h
%s8$d,dY)e&hl15:NLZ=nI['!E[6[YWnHa?5#:(ZZ[U*1a$8U#ghZq\^LG0;8=kF6`\`*sD."D3H6rZbq+B;q2/aOHiL(k$j$]r'_
%S1R0D>]Uh2lgQQtBPsMm;mQ\iRGd*j]d?`CYjT42(NqXA/R;:kDQXPg&RH\T[UHRi;JRY'@4J3<ZsoU)\"ETdAVM,R$ugC$.d.*6
%i^!H\ZEB=B`g=++jdk!uMu&o9s8)0>ZQC-Bo,'MqhU',0gh1Sjs73Sn4_)H(OA/7cRRjkDlT_(#FWF"L/&<t\SJ%MGrGDN4Q0)Mm
%=,),l*um=15+:\pg(/t=^^AmB?Usd:YJj\Vg=80B<>DrR0m]DVgM_Q1b<;^q$@al^bV+l#Y$W4jW\--/+u`<F_eq!9%[rd5rcea:
%A.?&QApXY$9.,,Ho>!'f%Q:LNE@-f-8#.n!g*%Y6;A-lZ=+,WhMsn>=FUPr3e-@V&ccqKI>Pjb%gNXl;P_PrMag.[4Qb#US>O)"8
%!>j3*$n>^a#,/!cS#>nFM2=![B#p606l+Hr1kG@IG>q+aLR$&>BH-T-TsCd6cGEnr3^3[4ptE8q7^"2;Wl2*uqgOY)3,Fe4eT62$
%`8RqBcq.&gUPdUL:tLig"B@$BFBOkToT>tj!`-^TPI?N_PjQF6[ZU2@Ie18P5pe4YLb',@$1soSg>e/D4!,N!3fD`"Qa41\ZWMg6
%M#Au!k6A[[Q"KN#_e_qI+tO]gLg"\Ue$QF!0[\(#S8noQ\PEpn#$+:^q0\`n$_`fOlu(A/$ft:MG^L'9;8_='gSRYlHD-S26NWpu
%Uo`/;Z%fNhYE$o_Ctm<MpiaSlqD\;V@]:a8VB5I]*N/g?iFu8](+[`A,t_4F+G"n^RlO&=5D0]0Ng9@n5QYZ`o/T5q^Nhh(rgAA+
%?U=Gbp94M@\,Z@*E^D@)M\b>K0o`j#?q4=9,mP1FRmrG*<Gb#W49P\]o1Y\+C@p4,UVRT$F+\5,XAmKf?Q7KFY]GaJ.&2"+_kW&r
%W?L#BGA*?Pb\f@-]FX2;nrsnWK;IkCL6`iheL)&VYS1`QBT94[,Y"(>h<m5el70*V*9?O8&;S8caonk/"gM!4.E7/:c&cW2pc=f7
%_,6dlqGqR;Tq&/?Hn:K#?_gjP60od[?2Zc.fd1_KVad8=G7YdN4qJIGNq=kPP2\6qK\&r7>lNY\j0tf#Dd@BdL"0EY;B`ZTR.P,r
%G=\pU?:[di&$\huL&CO[h'&(@GJ86(5Pks/-m&J=1t2d42K"0EI;?0Hj+@9Ga7_YfN2nF"]OT[a$7+e@GsPW%5/AKEq6dhJW7#TR
%B1\*kH6gJmMic-<oaX.!62/uN>1#]<!S7EJLU4'_/csTDLCol>'2UeXjCP9_[:<(IF)=t`Y9Q_J4]9a7_Pmeg/"LHGa%1CSPF1P&
%Z>&`sS@ME+^Z-*DE[D8n-nt"/F\D*]F^DXAZ@,pqnpA>Vp`rhVZ`,2-l_*d::#2WTirFrPSSKAhb3?MR>&>)*n+\6VFnqJ%@$X:M
%p,(rQ"1_';V,C=natZDsp=jTPqXkj2l8CRO!9uI4Id#%J=19U#3X>;(QfFs:6\Daq-POG7SSPVe#SR>O&rf7GHW`@8n^c<$q!/J[
%g\%_oW,.NKb8DjVh&>Pn?O+T$N,B+%@Z1PY10WSX41]O%OiPW!njsZBD3#IOniBOKQ)Bimn9$d@c!#N,>8=T$._pssp)jB;drh2Y
%ADnU963OkuKpV6[:HVpY>)b(Kn-T/a`,3<TB%dSbVD9h9!%aasqK]R9!eE>jgPr0U\I3LhZ)<[kYTFp`<PT[ScDKD`[5W8I(;h2+
%&Xo$rY"%Co-W#OI3=P]lQX7NYTD*t`*)=&>?@V:JUS\h'cH+$)_:mtB94o7>MC%5/Ze2#E@jc%$SVam&)8bd5.0\c=[m:>ink8=I
%XjgC9"n'RMaN",AF);)F-I58RiWdF4VEJ-SdFnGLCgFO3aQcN_hX.$"Jog'c:1;SM7jUl!*AO!GGZ3R+51e%7&/LHk&U!@(EG4kO
%4.JqE9n]$fQ9V(0Uoq;0)P_6W097_+eY=t!^C2u:^]RAfO\bZ4Q@B^B&(t/V^WseN^oLh(^/cCY[ZKdJ&IZpfe*]"qoVXQGm4KjT
%Yf`U(U/VZ\m2@TXG&bJ[+dmGP,ZCHK(42rt]sP!#UefNnZ(.Vj!o`?EW&*2V=%af_o^4Fjf]WNQ8C%r:ZOQfWBCuH9deqCG3Wf0,
%h*.>ik*-a-B_XstYj[!PWpGFNL);-"IOT;B_`pq9M6B,oK0GW6orW:]HW4*/:1*H+ld3S!fD_\*/G0#4g%Od[:\)c1,@^8@NQ'K#
%gDD1.DN%In^qlaafu6sPdg.GV_Ca8MQkrr13mim>ee%-#$3ON.bb"Cse/XuYN%/(0KLZK@9;OC7Lii#>)\9GH#SVt!:,7B2#t"P1
%>:=&L1Za%6`otEj,"L[r0frB\PrNm>Z;o:HG@4<q8PXlF7)%7i+O4:n]*XT"mO;k[Q_6g:!*E#-m9OA>n(hNqSO1S=%W1U"94bds
%'La\#[YD+9rkj/`H!A.2L(E!o:Al/D#/?#@s3acLGpk![Wq,IX<V.o".<(\M-\:JkfrB']9glb*fGBWEKuqf4,F?Q'7YOM^8g/V7
%`Vm1u1^2KQAiE.-n/IbIqAkVtAQ1Wig6>T)RoqrEB2^^8S&rUkReh&b/(j(;?g`T'2+\?BG.m:NF(lnCZs.!Kb2?5^SDB?;RYIh-
%VOBQT]GqjZ\ZXIDs5__!=CRJHnC"LWC3t)n1f!I\3Hed<Z3cD[V>=q4\ts]/qF+"q/gA[??6,%4d=>mla&[n<FgfO`jMe['A$Q1X
%is=,EnLfO=SH[i7S.#GM#p<C2o'OfNMA*4M=9aEfE7!H\fR(@sLSjpn?dj>KYu0jaXhV=!kBL_7`R@jK*6C&c;&_r8cDn-am]%iD
%_)gk-]TncTc,o2TOP"KGFUuaeS<2q,b8KO&f]#r>_D_0snN'K\lgC5cqtZtPgu#Mn$9jrFb'JGR[CrK`hpFStMdJZ_kIYocMX6XB
%48sdhZ4c,,q'WB.HkG#a-^;ld+^hEk;M2R886@_Cp0YH+\UBIog*a=MPu?BVV&BHD;b(leW,g<b_87\bNq\"fY\BAgn`42^4+*io
%],8,C+siE.lb7&^RPbQ(Fn\i!5`6Q'ots'hEHgNs.5qk#AjRqMY2[1mF#?E2^%-dZ@aH\Lip'4T:LGK&U`$>]2.-bu!Jc(Y\TGNd
%Em@tJ[E$/Q?W4.d0fcILE>)DFG/E7Eh%,C%g5EYb9m7=f/tUlNBiQ33.#-Y\f.B*Bm@?WT&^"o],WMr;":$hqeA^OF9Pdd&#]+VE
%j#!UOCa2'4mD!*3G)P?hVJtF('#SO0r_YIqWmN,2O>a!4'OMAP!D<qE5RUM5%V=X;YNjhR15Juj=Zp*nU9-f;/G\3<PRIY.2o[TO
%:!O/QQ5!2u%k.K.,VX\$;R9tpNH];)F^d>'I/%quL`EEq@;jsJ0Q(C$d&hg=i#(J)Ai492iB0=R'eAW\\s)4t.5MY&gWiIemV"lV
%pPM6QeU#JNq;#Ehr0oIKB:AF-35b"M(eVpckB!ag#fO>R@uYEBM-H1Sp:3EFldjpLYr*lDf62e&6*0uE>:0l,<9AO?S8hNPfK:RS
%QhUoFetgs_+pDN_Ulqq;;:\SJB53X\`n%_B]O;ePL:Vf?eEY6S;:g0Iq%S.siH)K\j0RHtOA!2A2jgpV3=T5&K,XmAnUnkWM62]X
%Y.L]Is!jXV[suP2?ND2!8m\oJ*_NV@X3-MN&jt$&<OJf=J)7:b,ru7>dq,g@*)GPZE*YK)Ui'qkos*BJ?3m3ml-ahEd#+,F4>oss
%Sb#ggc[-!C\e6_O73IL1>R\s?h!Yl@j$RL`&[:VGZ]`@455C7i7uSRQ9:@%''R/)3iqQONcT0CC7&o@o",5QVHn6r,,'N,BH.M,&
%&qC:"oQ0Zji$<&%jlG4;5=2'@@8["Q.F*&SkJt@5Fs;D!d*p&0<ajuH_<-f.6uqKn56U\KQq(#g_GM9`7]MoU_^S9#%]s6AMuBPW
%<O8N^k\Upek_Ps[MJ7E;O\c63[ZX\"aob*dN8RqV3n&%(D7!oXBJ.l4Zs%8e;C+n+-p&S0L=o-L5HND.4F#L`(OC7EnZ-NT-T.:q
%lKBXOg#c%52Mpb!V%L?I];iC8."sn]GtSUXNm1g)3Ou'B:%mmL=QO'b'e%)(E,G5LW_P7mR'CK[RdK?pTCQ'Z4?Z;+X@&Y4*5n4E
%]`_'Z]j4BF>P>H4]rb8<MW>U2m>L;<daV^9X,Z1$XGVf_$&d\H?RVStlO'LPk#>I]qHFWPrp5JS=<:1NYURN#B)7;rMo";T9Wn39
%Pkso9"6p&3j<+&k9@N*#^OQMR^h'%p3Rb.c2Y[f&P+%SqSUGLu;`,7.AgjJ)\P93&OZH'C<Ri.gcYSuYft4bl[rV<3=sl\G^j7<B
%ccQ%qg<oN\?m`5nbIgDtPVY)<eV3!k$U<6Zq^jSM=7W'J5J/@dOBa4O+'%(k+O.*na!a;(VtEq$<joqif6L9"im;2Z/%Cu<l%<3]
%J<&R,C[0ijeZAn8f$D%;]a/,"d:3iUE<Hr]F)]2[>6PR9[-i?FomfFI)bP;JZT=>I"Y6Iq.&Uu0)BJDXS'n>mO93=&DS,k@4Oe_m
%dPRbog#]1\FlQ<ukiapjoa4J6['M)i=,u,LVgMES9'<>j?*c>F.Sr6/]p0!:[a(Hh+5!u.N`'-N>**JUoWZ(KS]>Bg17La#5<Fcr
%Mrclrq<-n_f+X:OIr!I0q,0QUC*I?u8"k@33&^m<VbBT#2A[G>?>6D;4cX'n^:ghe/M*qO%7kN-/J"m1'bHtu;2;%9YH=\8lc3p[
%Jb;[?M0)>8Bpe\Yj0L\U,K8?3aedg@-!OkLef2V]Ko/BI<J'7gRV0/@>pZ9_EkDGUSbR#=Y5Kj44>.Bak(O\JDV\k]L^qXiX5TTC
%q7s)]A]"&gKGlrQ$,nEMe`0h8I;$s!_T2!$*&iDeJh2Xn1QT/o,Y_Xb/VASfq-%Gc1o1^Y%UF0(3_FCu+&kA`2LFY2a'*a2V6EO?
%<IJts=`_2,18_Xl/Vt`9QO-9M^+*RV-M84)<%H[b'W#O*38.=2ET<b\eG6,$8M-:E5TR/A;GIg^K=7j@)>!VdY039]FsS2u17Ep:
%+IcOPo1b*3pJK1IKJunAfl"T7_Q3tbB&)l.Ut;0tk@0RZ4hATKV!;42X/jM,Pj<8Ra,<UFP=oiuRZkW(iE>M<%2ihVfY,hTlAEum
%c_]q/Jhm.i.ZNp7cfFf@5H*U3Z#b@];WGH-&jW@HIY,4?+4emp:/-@Pg_Qm%hODZ(#&MH[p#[^=KQHU:i)<W:o\=)bHP%O1NLlW@
%iKg'LMZ-&hk]Kd:KI)@rSDWmAE_-9N_5rWaID?>n\[*$KiaFc8i$\fdke6Uio2F0%7j*\ThQNZlnJ^bX'0rg`6`u$>i-Au-3qN%@
%'hre')bWEsB+V4CSEaE#TC:=*KlPrM:L3G`80*&jLf$bkn"Nke3Kl$N8.i$LW>@".4S1Wq(:rcUP4i9./Tg-[#3!?Dd(LpJ3b))S
%W9=G!#Sm[$Qa*hECME0iYqU>!CPY6O[RdYlaV-KJSX*pW[*3jBAtW05.KOiL9n,TEn%lc/(g&`kb:<#@E7q#INEcXkIsTW:Zd-ZZ
%a%90?eK\#`<iRg]q\IECkOTB75rFD-bNID\Ng6)/bjBjXZOaNq;>1aI,Lk$p3bj*7L.Nl&N/fS;3_U<L=(K-#djCB&lVu%UFd1qc
%\U7-W6TQR"KN`?o$HSS*'PV&,][hgna#R#d;9N>"<DCalXF4PL'Xm?WXY``P'\,^W(Rr]P`=/DB8UINJgg37UK"b'J=l2:_[C)tO
%j[`U*NpkecTH)H1NHHau'9=\r]#2A5jEd[uQ,r4.kSrO5GcPkYb!g/B\of:,oB(g-6&,dEXs<r2*1FM,6D5LY)CMOg2MTZGWAkJ&
%m`AInj%:ij7mRu"%Wj=mp]%Zp?=]6mLdO%$1[57!7a:6ROu%F[M)hojf`%<Z"?OFsSmj"G:[?J@$AmcA^g*D20G@Zc,6#d`s%DW#
%9X@s'npQ?S^E/`<5`J,T><nF0e[EtSB"#pG,'/:I>(X3rUsP,7]F$ls=/)S!8^dat6)P`@QNBlnqA!fX>L5B)q1<iT[1XdFLLToL
%<`MmU.-cXML_gOoPu!sW#I1^tN4mr@\@"2dq!IYYjm7#?o=?.G;\Xp2dW*VnPG)2oIs0O^8[#`XRM_T:Gjh,>.s.bBY_aK7mZB2/
%fWB_UkUS.=`(TPHg!12hOY@I,YX67jHdmU.d6j'jS7p>SoG.!VFZZdF\2;[\q!8t]C<iJg`Gn5,9E<.&BV^4[#8ZssS*JV(VU]an
%)_drKJUX-=3_h"JSi1\'.HsF6WS-o<c*t,b[Q'LYFKQ_'EjQBW*[ZG$/NAi=&rML[Cuh,Ce0^cK+>J/8+;p(MJ\&q%<BR+#i2:Fh
%eE8=QJgdof1pp_?ZNC,hYq2,S>3b\5'NDM>jF[GjWMH[rD.,T*I:N+Qh,0bc]r5Jei2`8TL1V=D8`/4QX6O'piL-6b]mc+b+].&#
%;_"_sX!;P/@mAul^p$nWUD:M"INFBPCgp<nP]W+<0m*j=GgW[*)q"qWe:I8Bk4OB85'^Rk./a<4p9d3<=jm-0/c4LmKoDYO&q-@"
%)6YR`4f7rKh`TfbT=nq]RIjmk4+o)cYd8YEg0^h>A!!mJ:Kf:,:@fCl0"3$M@Kdg98>do*<e\1a/JsgR\pGSO=SOA=C0QjLm2h0T
%]RY+9)Xi6MOeU18VH<-SL8?ofZG3I$j7$FVAlbk.C@P&eV5PT@J8isf;fr'5l-;l0S3`e[7SAtB=4rA7H-Tp;/d03);904:\"BVR
%U'5Pm)jX_sUQ>SHfGj"d05nJrEVmYH#Q7tsU@l"[W8.Vr(rVVgo2>)>ck]Z4H]Yfr'`l:pSRNlZBBQajE4Bb_"5N&nQ&9mI0K+4u
%h$>FZ2E,&A2*)Mro:L0J!GScJiE`!a*Q)Y\e6g+Qlrm=!bP%S7N&(qo6cuFM3uede7O@&\3V\rs!@tqD?[.A)7l=D.G(GD$?-!qr
%V%dkTn[+_$J^_t:O'qZ_4d+NRqR-A_N&K;2<\EY%OA?m>C\DcX9^&iB#;5O#3"V)\*Emu0-Mh:&>a1hOLiRA)/lgs\WY>GU=K_c^
%>Z*ZJja%]3/I9"fqPASqLc?ZefGem4W&40]'c0P7l^Sh;,oH"pP6>G8Ju=6;(cJP2S+7t]"hSb>PH"@q&#U`^=_;YGDGP5UPf8AF
%1oS`3@IMoWBqXmc,23-h,H0%g'XnAi5X5pfaDBraHYWBEeFoaVO*XDIHOL`_T/H=]1F$Q@0e'eJ<TDM^:*A=bP5-hm?e@TgVkj&r
%+d24a+@WGJJ%B+F9*bPgk083_%9tPd?V5TR-UFSD<Z\9@Mia:MVlF7n(]UI[$H\u%GWuT*.u`r#1HL6u@T2L]6R1c]RfF<gm2hYP
%bf1[QRnC-TUaA/V*BH.eM91G@ULI^a>=84d^K0;IP,W0@(rY3Uaa>a6F'\#6;l-.%Vnh&Jb6>HbUh"_JnBNKSS][-XL8pp>OonDL
%BTC<siYP>mh7c&IL6IdMHoXC,Le7JRCHqes\(G:@X]L8ZKc]gr*K%((/Lu`'@H6.*F?X=`F8g-'&PdlhfTLU0_+-52'D4)\'k;X9
%Y`MMU?BKanRr1ub%qqSi%8:)i%VWq^*1CuJrOHesV'n$N-V=lFe*5#*_%/fUmOQUYnn3q_THf'^\.oFpAgW=R-76^P)Yi1FmP/^n
%7q=2Dd"Z3e@/[oCl9I4LqaK-0?SFWsa2so%f*U_XHL.t\,KP)?o%-4(hfDbdk9lAjXKM7#TrjPY^oQA*gUC'PINOkG=(SA&1NFNO
%>(-!@=-f#(pq37:4=rYWSNbmep"%EK4k9;Ync]>-/=j4];7-tWVBG\RAP,SKadH<9WRO/PEX>`[m1>(>>=9!Wjbt;`Tm*\>HC>c7
%>+*WZTb*m$I&Bb"JcJEVhn<-O>f(>QJVUbu-gB;=&lV::M$Uh_#m.KqXIJq/;0.W,L=a`n&\gW4p>2Ccj]606C/[=^m6];(6('VQ
%Se08;_0k`\ounHs=!;$7fq"H@]]9R3-]lg>qWjXLT(3MQet=SV-s>^7H8<`(NJZc*b,R,m<B!FSf*9L$RWe+g^9t+oJZ93&.RLfQ
%%(+M\lZ`WAV]oM!hN$"0A%8/uT]tg+A^i22_Us^,a!2cRLTV\@OJ:g25,FBeZJO:QOY^Z$Br.7hUM$,bIF4c1k!?n#+Gk!E#h("I
%[=-EV3!\a5Fm4J[l6Fn]Q)>7JWOUYfcPc,!&ujq3$I"7*E8.iO!7n;*Jc>&uA>+lnlr(>gm[h![kK$4Gg$/D8Fa[-5i_]$r3Cchm
%-o]@7gbofOm9*_o/m78iGrPc=Gsd,o]2&2YS1jMWb8`^/VX(eD8Xb<p"^O3^9\(X<PNdXM/7gTpXY83)<P2,mm>jH`/B<iu3u.gD
%D'oI;h<Z:r3P'B-=$uqMB<EONGqo#'D2IFl;PbKO'#'#JG?870Woc;\KZGN&i@qrJS`.r4[8O29#Pr3Dn][#":mc"Wn_No)WluMU
%N:sb7i_l'*f=1W`];VBO,=2U'\dfn+89(o'3%t?1eD0[.HW3?B]AY'l(Xe7QG)/I:DRn]Sg<lhHp*[iBP:#CRc>e$L0q<`,LK.$s
%0PYKs007A2-J`E8De/cn#_<%-p(NGpOJo'HpBtMt)Tb";@EA;rI^=K_*$Te->WQ_k8E.MC5JcW4*rNV679B/ao]*B4q?cQ)O6pl3
%2\5mOP=@.UUF\"Ed%jmIV*9TMok@']"):CgE!$JGD4GC<W-!/!pV\AIP4%^uYbm]odFe]B3aAd8XcF8jJI-9UR+f;%Yq$p(;nWcd
%CH`Heci/]b!#[oKq;i8K!uM2&9C]IeY=eq+]Gg83c]o*'HTRP.dVlo'ju3h8:"sO^%PL,5"TQ^ADZ52tcbKaB/3S;Gf$6\'eiCO,
%;cB'%8BXt.^*<1tBKY>6[?E>E`$f`4<LUHK;b1p(HB%MkrNTG1\lirF4uBG:[su?$!WDIn)>)]LO1:LT))(1coCfocVS+!J97+@S
%Wp#$"0/$t?TK]QiLsWSubO(\lc5pB+[N%2)*7aF%Gu?!;&nh.&,Q8;RY\QgT$b2'Do4LO*M'cAh",VcF<fn(pP3HcL7!9T$s7!G^
%N_%GqV.UEC=E[ag$>_ETMriRL4@TDRIXK7]*->\TI0!M:I2./urA@eVl9UaLTdXJG(,LSCA#au\rXqL=b5M%'g\#X_/)rZAObe&.
%/7o'ZZXo6CPPs=;3>tf>`ZY@*:I@3qrhPW62,Fc659_$=&@S<71qg<VmN`olT+>olq]Y!XFZ\+q*+K1!h8-uWTS:nFBPsVjKT&>q
%!*7Wsk/_SuJg.Zo[]s7]V,@#XrHjs2]Wl36hqV9e#$8M,c,^5cHl0,W]<)'L[%S3W"c?hH<%LbH*OhE1WQIk*]:'s#&KZPpc3p.?
%C+V(lTt8-+VHoW:FR%%Z\uJ"plQ),qI\ei$9;l[T4XoYui11P(h*(6rg1pq<^X)'_QHrUg$TkOHs7`M`+3jZpPBP7@cB]XkWAf@.
%KrP3P9\QGf/>n>E;Z/nt?:oY)U6Y$R<n4kPUm):9:$VWU[rjSZD?E09^+]7%FRdad8M_U90nBc:(6V&Q_)Pm;#i8sEKY2_4?hK3a
%c>e1gZK=rOm]N_@g7P.!X]OQflpWG.U52JP"e9GnfC_iDH[A6Z+]*NV%a6P#7.Jju6co;[+cm55^mGb6Y3gf06[p=%8$b6:'I3tA
%E=Cud5spKH@#b_kBL9)?#.h4,TJ]3#_6n6T:-*0+[443E*a]HDi&IO$U(PWN8(NW&21"OB3^o.(s%J9YILh9sLIcdiBLNcpk#5A*
%'gV?2-dT[,Z$&['3o_D8s6,9KfI)EIbmj#'1*sQIEYq22V7)[_QYB>qKso*7AhGi<&ui>^4PN7^adT*+'eGY*ITN+#LWYH/9!qZ0
%G\jDe-,09UH6AAo\p[8+ri&dgUA6P%9]"PZl;&rq:>SF2--?&>Xs0-UD?49KZ8?;CcAGQ<R*,W'$`W,jS#O*Hj^A3uP#ZWC4ZP_R
%OP=J=`-c,U[7k-A*PSWp8i3Z^GhnT`^6H8JfC>J"*ZSRX_GIESArDhDK>7U4DcCq_+-oUOJmQ[`(^@ThTHO@l;/^8ohqfS]Fj<aV
%3jI#(*NXM3^Z.N(B!mnHh9Dd!jZD0Q[0[adG;j.hQ,"*b$PSskRFb6_3>Qi\aZBOEP<eRt89&(3n?n,h:Fdb8ZZOth]P'O^3b3RG
%")pohDM40?9$fqB=(UP.`'Z3ZG"Y!;E!%#rE:b+uKN?;/HCDQ28e#W/np,:=9Msl=Um2R7L9G-b/c&Yal-E$^P`7RN`ILCL3Qd+H
%FC(`5%"SM7em':>4Y",#!a-'idq&[qRUZdN*LWcJDsLqcIh+%B.,&%DQSEI[JUo)#Bo_O!XDNBGLR[I7.&k^aaAb[kUi^ER^;6[%
%DUAdf%p2hPfRj;G_]iQ?"RBK5GFKTj9#/bpHH*P1`ffUFOj?o)JQZh?M<FQq-4r#s>N1["9*'qj"_LPjqY_?)g3e4YHe?)YT0GPH
%^-%tc/D%dJ2=*Q!SsN7)e$nehFnbBQ48i?oe)_d"SE7ffYO;4tgjZtBQgXS?jgQdUZo-M)+$[Em4o>KZd+Ut~>
%AI9_PrivateDataEnd
